---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/02/17 18:40
--- Describe: 随机数发生器管理，将来再填充
---

---@class RandomUtils : table
RandomUtils = class(nil, 'RandomUtils');
function RandomUtils:ctor(_battleId)
    self.battleId = _battleId
end

function RandomUtils:Init(_seed)
    math.randomseed(_seed or 1)
end

---随机发生事件
---@public
---@param _ratio number 概率(0-1)
function RandomUtils:Shake(_ratio)
    return self:RandomFloat(0, 1) <= _ratio
end

---闭区间
---@public
function RandomUtils:RandomInt(_floor, _ceil)
    return math.random(math.floor(_floor), math.floor(_ceil))
end

---@public
function RandomUtils:RandomFloat(_floor, _ceil)
    _floor = math.floor(_floor * 100)
    _ceil = math.floor(_ceil * 100)
    local _ret = math.random(_floor, _ceil)
    return _ret * 0.01
end

---@public
function RandomUtils:RandomBool()
    return math.random(0, 1) == 1
end

---@public
---@param _elementArr table 元素数组
---@param _weightArr number[] 元素数组
---@return any 随机出来的元素
function RandomUtils:RandomByWeight(_elementArr, _weightArr)
    if not _elementArr then
        return
    end
    if not _weightArr then
        local _randomIndex = math.random(0, #_elementArr)
        return _elementArr[_randomIndex]
    end
    local _fromIndex = 1;
    local _toIndex = #_weightArr;
    local _total = 0;
    for i = _fromIndex, _toIndex do
        local _weight = _weightArr[i]
        if _weight then
            _total = _total + _weight
        end
    end
    if _total <= 0 then
        local _randomIndex = math.random(0, #_elementArr)
        return _elementArr[_randomIndex]
    end

    local _randomNum = math.random(1, _total)
    local _happenIndex = -1;
    local _partSum = 0;

    for i = _fromIndex, _toIndex do
        _partSum = _partSum + _weightArr[i]
        if _randomNum <= _partSum then
            _happenIndex = i
            break
        end
    end
    if _happenIndex == -1 then
        local _randomIndex = math.random(0, #_elementArr)
        return _elementArr[_randomIndex]
    end
    return _elementArr[_happenIndex]
end

return RandomUtils
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/5/10 16:29

require "Lib/class"
require "Battle/Logic/TalentSkill/TalentSkillResult/TalentSkillResultBase"

---@class TalentSkillBuffResult : TalentSkillResultBase
TalentSkillBuffResult = class(TalentSkillResultBase, 'TalentSkillBuffResult');

function TalentSkillBuffResult:ctor(_battleId)
    self.battleId = _battleId
    self.battleRoom = GetBattleRoom(self.battleId)
end

---触发被动技能
---@public
---@param _battleObjectBase BattleObjectBase
---@param _count number
---@param _talentSkillConfig TalentSkill
---@param _skillResult SkillResult
---@param _talentSkill BattlePlayerTalentSkill 被动技能
---@param _isReTrigger boolean 重新触发
function TalentSkillBuffResult:Trigger(_battleObjectBase,_count,_talentSkillConfig,_skillResult,_talentSkill,_isReTrigger)

    local customParam = _talentSkill.param[TalentSkillDamageTrigger:GetType()];

    ---@type BattleObjCom_Buff
    local buffCompTemp = _battleObjectBase:GetComponent(BattleObjectComponentType.Buff);
    local upPercent = {};
    upPercent[0] = buffCompTemp:GetTalentSkillUpPercent(_talentSkillConfig.sourceType);
    if not _skillResult.parm2 or _skillResult.parm2 == 1 then
        ---@type BattleObjCom_Buff
        local buffComp = _battleObjectBase:GetComponent(BattleObjectComponentType.Buff);
        if buffComp then
            if _skillResult.parm3 and _skillResult.parm3 ~= 0 and buffComp:CheckBuffExist(_skillResult.parm3) == false then
                return;
            end
            if _skillResult.multTrigger == 0 and buffComp:CheckBuffExist(_skillResult.parm1) then
                return;
            end
            buffComp:AddBattleBuff(BattleBuffService:GenerateCastBuffTemplate(_skillResult.parm1,_battleObjectBase,nil,customParam,upPercent,_count));
            _talentSkill:AddTriggeredObject(_battleObjectBase:GetObjectId(),_count);
        end
    elseif _skillResult.parm2 == 2 then
        local hpPercent = 100;
        local targetObject = nil;
        for i, object in pairs(_battleObjectBase:GetParentUnit():GetAllObjectDic()) do
            if _skillResult.parm4 and _skillResult.parm4 == 1 then
                ---@type BattleObjCom_Property
                local propertyComp = object:GetComponent(BattleObjectComponentType.Property);
                local percent = propertyComp:GetPropertyPercentByName(BattlePropertyEnum.Hp_Cur);
                if hpPercent >= percent then
                    hpPercent = percent;
                    targetObject = object;
                end
            else
                ---@type BattleObjCom_Buff
                local buffComp = object:GetComponent(BattleObjectComponentType.Buff);
                if buffComp then
                    if _skillResult.parm3 and _skillResult.parm3 ~= 0 and buffComp:CheckBuffExist(_skillResult.parm3) == false then
                    else
                        if _skillResult.multTrigger == 0 and buffComp:CheckBuffExist(_skillResult.parm1) then
                        else
                            buffComp:AddBattleBuff(BattleBuffService:GenerateCastBuffTemplate(_skillResult.parm1,_battleObjectBase,nil,customParam,upPercent,_count));
                        end
                    end
                end
            end
        end
        if targetObject then
            ---@type BattleObjCom_Buff
            local buffComp = targetObject:GetComponent(BattleObjectComponentType.Buff);
            if buffComp then
                if _skillResult.parm3 and _skillResult.parm3 ~= 0 and buffComp:CheckBuffExist(_skillResult.parm3) == false then
                    return;
                end
                if _skillResult.multTrigger == 0 and buffComp:CheckBuffExist(_skillResult.parm1) then
                    return;
                end
                buffComp:AddBattleBuff(BattleBuffService:GenerateCastBuffTemplate(_skillResult.parm1,_battleObjectBase,nil,customParam,upPercent,_count));
                _talentSkill:AddTriggeredObject(targetObject:GetObjectId(),_count);
            end
        end
    else
        ---@type BattleUnitCom_Buff
        local buffComp = _battleObjectBase:GetParentUnit():GetComponent(BattleUnitComponentType.Buff);
        if buffComp then
            if _skillResult.parm3 and _skillResult.parm3 ~= 0 and buffComp:CheckBuffExist(_skillResult.parm3) == false then
                ---@type BattleUnitCom_Buff
                local buffCompTemp2 = _battleObjectBase:GetParentUnit():GetCurrentHeroObject():GetComponent(BattleObjectComponentType.Buff);
                if buffCompTemp2 and buffCompTemp2:CheckBuffExist(_skillResult.parm3) == false then
                    return;
                end
            end
            if _skillResult.multTrigger == 0 and buffComp:CheckBuffExist(_skillResult.parm1) then
                return;
            end
            buffComp:AddBattleBuff(BattleBuffService:GenerateUnitCastBuffTemplate(_skillResult.parm1,_battleObjectBase:GetParentUnit(),_battleObjectBase:GetObjectId(),nil,customParam,upPercent,_count));
            _talentSkill:AddTriggeredObject(_battleObjectBase:GetObjectId(),_count);
        end
    end

end

---释放被动技能
---@public
---@param _skillResult SkillResult
---@param _targetObjectId number 伤害目标objectId
---@param _count number 触发次数
---@param _talentSkill BattlePlayerTalentSkill
function TalentSkillBuffResult:Release(_skillResult, _targetObjectId,_count,_talentSkill)
    ---@type BattleObjectBase
    local targetObject = self.battleRoom.battleObjectManager:GetObject(_targetObjectId);
    if targetObject then
        if not _skillResult.parm2 or _skillResult.parm2 == 1 then
            ---@type BattleObjCom_Buff
            local buffComp = targetObject:GetComponent(BattleObjectComponentType.Buff);
            if buffComp then
                buffComp:RemoveBuffStackNum(_skillResult.parm1,_count);
            end
        elseif _skillResult.parm2 == 2 then
            for i, object in pairs(targetObject:GetParentUnit():GetAllObjectDic()) do
                ---@type BattleObjCom_Buff
                local buffComp = object:GetComponent(BattleObjectComponentType.Buff);
                if buffComp then
                    buffComp:RemoveBuffStackNum(_skillResult.parm1,_count);
                end
            end
        else
            ---@type BattleUnitCom_Buff
            local buffComp = targetObject:GetParentUnit():GetComponent(BattleUnitComponentType.Buff);
            if buffComp then
                buffComp:RemoveBuffStackNum(_skillResult.parm1,_count);
            end
        end
    end
end


---被动技能触发类型
---@return number 被动技能触发类型
function TalentSkillBuffResult:GetType()
    return 1;
end

return TalentSkillBuffResult;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/5/10 16:56

require "Lib/class"

---@class TalentSkillAttackTimeTrigger : table
TalentSkillHitTimeTrigger = class(nil, 'TalentSkillHitTimeTrigger');

function TalentSkillHitTimeTrigger:ctor(_battleId)
    ---@type number
    self.battleId = _battleId
    self.battleRoom = GetBattleRoom(self.battleId)
    self.lastTriggerTime = TimeUtils.battleNow(self.battleId);
    self.lastAttackTime = TimeUtils.battleNow(self.battleId);
    self.currentAttackTime = 0;
    self.currenHitTarget = {}
end

---@public
---击中目标回调
---@param _talentSkillTrigger SkillTrigger
---@param _targetNetId number 伤害目标netId
---@param _targetObjectId number 伤害目标objectId
---@param _targetType number 伤害目标类型
---@param _damageSourceId number 伤害类型Id
---@param _damageSourceType number 伤害来源类型
---@param _damage number 造成伤害
---@param _damageType number 伤害类型
---@param _isCritical boolean 是否暴击
---@param _targetDead boolean 目标是否死亡
---@param _hurtDisReduceEnum number 伤害距离衰减类型，对应 HurtDisReduceEnum 定义的值
---@param _isWeakness boolean 是否为弱点攻击
---@param _curAttachEleId number 击中时目标元素
---@param _isAccumulatedAttack boolean 是否为蓄力攻击
function TalentSkillHitTimeTrigger:OnHitTarget(_talentSkillTrigger, _targetNetId, _targetObjectId, _targetType, _damageSourceId, _damageSourceType, _damage, _damageType, _isCritical, _targetDead,_hurtDisReduceEnum,_isWeakness,_curAttachEleId,_isAccumulatedAttack)
    if _damageSourceType ~= 1 then
        return;
    end

    -- 不到CD间隔，取消本次记录
    if TimeUtils.battleNow(self.battleId) - self.lastTriggerTime < _talentSkillTrigger.parm6 then
        return;
    end

    -- 超过触发最大间隔，重置
    if _talentSkillTrigger.parm2 ~= 0 and TimeUtils.battleNow(self.battleId) - self.lastAttackTime > _talentSkillTrigger.parm2 * 1000 then
        self.currentAttackTime = 0;
        self.lastAttackTime = 0;
        self.currenHitTarget = {}
    end

    if _talentSkillTrigger.parm8 and #_talentSkillTrigger.parm8 > 0 then
        local matchType = false;
        if _damageSourceType ~= 1 then
            return;
        end
        ---@type Skill
        local skillConfig = self.battleRoom.inputDataSource:GetDict("Skill",_damageSourceId)
        for i, v in pairs(_talentSkillTrigger.parm8) do
            if v == 0 then
                matchType = true;
            end
            if skillConfig.skillType == v then
                matchType = true;
            end
        end
        if not matchType then
            return;
        end
    end

    -- 记录下命中的不同人数
    table.insert(self.currenHitTarget,_targetNetId)
    self.lastTriggerTime = TimeUtils.battleNow(self.battleId);
    if self.lastAttackTime ~= 0 then
        self.currentAttackTime = self.currentAttackTime + TimeUtils.battleNow(self.battleId) - self.lastAttackTime;
    end
    self.lastAttackTime = TimeUtils.battleNow(self.battleId);
end

---@public
---@param _battleObject BattleObjectBase 触发单位
---@param _talentSkillTrigger SkillTrigger 被动技能配置
---@param _talentSkill BattlePlayerTalentSkill 被动技能
function TalentSkillHitTimeTrigger:Check(_battleObject, _talentSkillTrigger,_talentSkill)
    --- 判断命中人数的时候不支持命中时长的判断
    if _talentSkillTrigger.parm3 and _talentSkillTrigger.parm3 ~= 0 then
        if not self.currenHitTarget or _talentSkillTrigger.parm3 > #self.currenHitTarget then
            return 0
        end
    end
    
    if _talentSkillTrigger.parm1 and self.currentAttackTime > _talentSkillTrigger.parm1 * 1000 then
        self.currentAttackTime = 0;
        self.lastAttackTime = TimeUtils.battleNow(self.battleId);
        return 0;
    end
    local count = math.floor(#self.currenHitTarget / _talentSkillTrigger.parm3);
    self:Reset();
    return count;
end

---@public
function TalentSkillHitTimeTrigger:Reset()
    self.currentAttackTime = 0;
    self.lastAttackTime = 0;
    self.currenHitTarget = {}
end

---@private
function TalentSkillHitTimeTrigger:Include(table,value)
    for k,v in ipairs(table) do
        if v == value then
            return true
        end
    end
    return false
end

---被动技能触发类型
---@return number 被动技能触发类型
function TalentSkillHitTimeTrigger:GetType()
    return 101;
end

return TalentSkillHitTimeTrigger;
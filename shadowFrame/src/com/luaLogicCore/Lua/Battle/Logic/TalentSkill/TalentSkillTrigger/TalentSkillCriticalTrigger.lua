---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/5/10 16:59

require "Lib/class"

---@class TalentSkillCriticalTrigger : table
TalentSkillCriticalTrigger = class(nil, 'TalentSkillCriticalTrigger');

function TalentSkillCriticalTrigger:ctor(_battleId)
    ---@type number
    self.battleId = _battleId
    self.lastTriggerTime = TimeUtils.battleNow(self.battleId);
    self.criticalCount = 0;
    self.targetDamageCount = {};
    self.targetNetId = 0;
    self.targetObjectId = 0;
end

---@public
---击中目标回调
---@param _talentSkillTrigger SkillTrigger
---@param _targetNetId number 伤害目标netId
---@param _targetObjectId number 伤害目标objectId
---@param _targetType number 伤害目标类型
---@param _damageSourceId number 伤害类型Id
---@param _damageSourceType number 伤害来源类型
---@param _damage number 造成伤害
---@param _damageType number 伤害类型
---@param _isCritical boolean 是否暴击
---@param _targetDead boolean 目标是否死亡
---@param _hurtDisReduceEnum number 伤害距离衰减类型，对应 HurtDisReduceEnum 定义的值
---@param _isWeakness boolean 是否为弱点攻击
---@param _curAttachEleId number 击中时目标元素
---@param _isAccumulatedAttack boolean 是否为蓄力攻击
function TalentSkillCriticalTrigger:OnHitTarget(_talentSkillTrigger, _targetNetId, _targetObjectId, _targetType, _damageSourceId, _damageSourceType, _damage, _damageType, _isCritical, _targetDead,_hurtDisReduceEnum,_isWeakness,_curAttachEleId,_isAccumulatedAttack)
    if not _isCritical then
        return;
    end

    if TimeUtils.battleNow(self.battleId) - self.lastTriggerTime < _talentSkillTrigger.parm6 then
        return;
    end

    if _talentSkillTrigger.parm5 ~= 0 then
        if not self.targetDamageCount[_targetObjectId] then
            self.targetDamageCount[_targetObjectId] = 0;
        end
        self.targetDamageCount[_targetObjectId] = self.targetDamageCount[_targetObjectId] + 1;
        if self.targetDamageCount[_targetObjectId] > self.criticalCount then
            self.criticalCount = self.targetDamageCount[_targetObjectId];
            self.targetNetId = _targetNetId;
            self.targetObjectId = _targetObjectId;
        end
    else
        self.criticalCount = self.criticalCount + 1;
    end

    self.lastTriggerTime = TimeUtils.battleNow(self.battleId);
end

---@public
---@param _battleObject BattleObjectBase 触发单位
---@param _talentSkillTrigger SkillTrigger 被动技能配置
---@param _talentSkill BattlePlayerTalentSkill 被动技能
function TalentSkillCriticalTrigger:Check(_battleObject, _talentSkillTrigger,_talentSkill)
    if _talentSkillTrigger.parm1 > self.criticalCount then
        return 0;
    end
    local count = math.floor(self.criticalCount / _talentSkillTrigger.parm1);
    if self.targetNetId ~= 0 and self.targetObjectId ~= 0 then
        for i, v in pairs(self.targetDamageCount) do
            local tempCount = math.floor(v / _talentSkillTrigger.parm1);
            if tempCount > 0 then
                _talentSkill:AddTriggerObject(i,tempCount);
                self.targetDamageCount[i] = nil;
            end
        end
    end
    self:Reset();
    return count;
end

---@public
function TalentSkillCriticalTrigger:Reset()
    self.criticalCount = 0;
end

---被动技能触发类型
---@return number 被动技能触发类型
function TalentSkillCriticalTrigger:GetType()
    return 105;
end

return TalentSkillCriticalTrigger;
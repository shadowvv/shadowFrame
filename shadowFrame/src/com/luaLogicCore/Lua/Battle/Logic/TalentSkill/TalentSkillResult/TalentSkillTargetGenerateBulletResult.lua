---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guokun
--- DateTime: 2023/01/16 14:36

require "Lib/class"
require "Battle/Logic/TalentSkill/TalentSkillResult/TalentSkillResultBase"

---@class TalentSkillTargetGenerateBulletResult : TalentSkillResultBase
TalentSkillTargetGenerateBulletResult = class(TalentSkillResultBase, 'TalentSkillTargetGenerateBulletResult');

function TalentSkillTargetGenerateBulletResult:ctor(_battleId)
    self.battleId = _battleId
    self.battleRoom = GetBattleRoom(self.battleId)
end

---触发被动技能
---@public
---@param _battleObjectBase BattleObjectBase
---@param _count number
---@param _talentSkillConfig TalentSkill
---@param _skillResult SkillResult
---@param _talentSkill BattlePlayerTalentSkill 被动技能
---@param _isReTrigger boolean 重新触发
function TalentSkillTargetGenerateBulletResult:Trigger(_battleObjectBase,_count,_talentSkillConfig,_skillResult,_talentSkill,_isReTrigger)
    local skillId = _skillResult.parm1;
    local barrageId = _skillResult.parm2;
    local nodeId = _skillResult.parm3;
    local elementId = _skillResult.parm4;
    local triggerTalent = false;
    if _skillResult.parm5 and _skillResult.parm5 == 1 then
        triggerTalent = true
    end

    local _battleRootm = _battleObjectBase:GetBattleRoom()
    for objectId, count in pairs(_talentSkill.triggerTargetList) do
        ---@type BattleObjectBase
        local _targetObject = _battleRootm.battleObjectManager:GetObject(objectId);
        if _targetObject then
            ---@type BattleUnitBase
            local _targetUnit = _targetObject:GetParentUnit();
            if _targetUnit then
                local _actionMgr = _targetUnit:GetActionManager()
                if _actionMgr then
                    local _pos = _actionMgr:GetPosition()
                    local _rot = Quaternion.ToEulerAngles(_actionMgr:GetRotation())

                    local _barrageCreateParam = _battleRootm.ejectorManager:PopBarrageCreateParam()
                    _barrageCreateParam.castObject = _battleObjectBase
                    _barrageCreateParam.heroSkillId = skillId
                    _barrageCreateParam.skillNodeId = nodeId
                    _barrageCreateParam.barrageSkillId = barrageId
                    _barrageCreateParam.elementStrenthId = elementId
                    _barrageCreateParam.timeStamp = TimeUtils.battleNow(_battleObjectBase:GetBattleId())
                    Vector3.Copy(_barrageCreateParam.position, _pos)
                    Vector3.Copy(_barrageCreateParam.rotation, _rot)
                    _barrageCreateParam.usePosAndRot = true
                    _barrageCreateParam.trigEvent = triggerTalent

                    if _skillResult.parm6 and _skillResult.parm6 ~= 0 then
                        for i = 1, _skillResult.parm6 do
                            _battleRootm.ejectorManager:CreateBarrageEjector(_barrageCreateParam, nil, nil)
                        end
                    end
                    _battleRootm.ejectorManager:PushBarrageCreateParam(_barrageCreateParam)

                    for i, v in pairs(_battleObjectBase:GetParentUnit():GetAllObjectDic()) do
                        ---@type BattleObjCom_Skill
                        local tempCom = v:GetComponent(BattleObjectComponentType.Skill);
                        if tempCom then
                            for i = 1, count do
                                tempCom:OnCreateBarrage(skillId,barrageId,_battleObjectBase:GetObjectId());
                            end
                        end
                    end
                end
            end
        end
    end
end

---释放被动技能
---@public
---@param _skillResult SkillResult
---@param _targetObjectId number 伤害目标objectId
---@param _count number 触发次数
---@param _talentSkill BattlePlayerTalentSkill
function TalentSkillTargetGenerateBulletResult:Release(_skillResult, _targetObjectId,_count,_talentSkill)

end


---被动技能触发类型
---@return number 被动技能触发类型
function TalentSkillTargetGenerateBulletResult:GetType()
    return 12;
end

return TalentSkillTargetGenerateBulletResult;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/6/11 16:01

require "Lib/class"

---@class TalentSkillSummonBuffResult : TalentSkillResultBase
TalentSkillSummonBuffResult = class(TalentSkillResultBase, 'TalentSkillSummonBuffResult');

function TalentSkillSummonBuffResult:ctor(_battleId)
    self.battleId = _battleId
    self.battleRoom = GetBattleRoom(self.battleId)
end

---触发被动技能
---@public
---@param _battleObjectBase BattleObjectBase
---@param _count number
---@param _talentSkillConfig TalentSkill
---@param _skillResult SkillResult
---@param _talentSkill BattlePlayerTalentSkill 被动技能
---@param _isReTrigger boolean 重新触发
function TalentSkillSummonBuffResult:Trigger(_battleObjectBase,_count,_talentSkillConfig,_skillResult,_talentSkill,_isReTrigger)
    local customParam = _talentSkill:GetTriggerParam(TalentSkillDamageTrigger:GetType()) or 0
    local battleRoom = _battleObjectBase:GetBattleRoom()

    ---@type BattleUnitCom_Subordination
    local comSub = _battleObjectBase:GetParentUnit():GetComponent(BattleUnitComponentType.Subordination);
    if comSub then
        local buffCompTemp = _battleObjectBase:GetComponent(BattleObjectComponentType.Buff);
        local upPercent = {};
        upPercent[0] = buffCompTemp:GetTalentSkillUpPercent(_talentSkillConfig.sourceType);
        _talentSkill:AddTriggeredObject(_battleObjectBase:GetObjectId(),_count);

        ---@type number[]
        local list = {};
        if _skillResult.parm2 and _skillResult.parm2 ~= 0 then
            list = comSub:GetManagedObjList(_skillResult.parm2,BattleObjectType.SummonedMons);
            for _, v in pairs(list) do
                ---@type BattleObjectBase
                local object = battleRoom.battleObjectManager:GetObject(v);
                ---@type BattleObjCom_Buff
                local buffComp = object:GetComponent(BattleObjectComponentType.Buff);
                if buffComp then
                    if _skillResult.multTrigger == 0 and buffComp:CheckBuffExist(_skillResult.parm1) then
                        return;
                    end
                    for i = 1, _count do
                        buffComp:AddBattleBuff(BattleBuffService:GenerateCastBuffTemplate(_skillResult.parm1,_battleObjectBase,nil,customParam,upPercent));
                    end
                end
            end
        else
            list = comSub:GetManagedObjListByObjType(BattleObjectType.SummonedMons)
            for _, object in pairs(list) do
                ---@type BattleObjCom_Buff
                local buffComp = object:GetComponent(BattleObjectComponentType.Buff);
                if buffComp then
                    if _skillResult.multTrigger == 0 and buffComp:CheckBuffExist(_skillResult.parm1) then
                        return;
                    end
                    for i = 1, _count do
                        buffComp:AddBattleBuff(BattleBuffService:GenerateCastBuffTemplate(_skillResult.parm1,_battleObjectBase,nil,customParam,upPercent));
                    end
                end
            end
        end
    end
end

---释放被动技能
---@public
---@param _skillResult SkillResult
---@param _targetObjectId number 伤害目标objectId
---@param _count number 触发次数
---@param _talentSkill BattlePlayerTalentSkill
function TalentSkillSummonBuffResult:Release(_skillResult, _targetObjectId,_count,_talentSkill)
    ---@type BattleObjectBase
    local targetObject = self.battleRoom.battleObjectManager:GetObject(_targetObjectId);
    if targetObject then
        ---@type BattleUnitCom_Subordination
        local comSub = targetObject:GetParentUnit():GetComponent(BattleUnitComponentType.Subordination);
        if comSub then
            ---@type number[]
            local list = {};
            if _skillResult.parm2 and _skillResult.parm2 ~= 0 then
                list = comSub:GetManagedObjList(_skillResult.parm2,targetObject.SummonedMons);
                for _, v in pairs(list) do
                    ---@type BattleObjectBase
                    local object = self.battleRoom.battleObjectManager:GetObject(v);
                    ---@type BattleObjCom_Buff
                    local buffComp = object:GetComponent(BattleObjectComponentType.Buff);
                    if buffComp then
                        buffComp:RemoveBuffStackNum(_skillResult.parm1,_count);
                    end
                end
            else
                list = comSub:GetManagedObjListByObjType(BattleObjectType.SummonedMons)
                for _, object in pairs(list) do
                    ---@type BattleObjCom_Buff
                    local buffComp = object:GetComponent(BattleObjectComponentType.Buff);
                    if buffComp then
                        buffComp:RemoveBuffStackNum(_skillResult.parm1,_count);
                    end
                end
            end
        end
    end
end

---被动技能触发类型
---@return number 被动技能触发类型
function TalentSkillSummonBuffResult:GetType()
    return 16;
end

return TalentSkillSummonBuffResult;
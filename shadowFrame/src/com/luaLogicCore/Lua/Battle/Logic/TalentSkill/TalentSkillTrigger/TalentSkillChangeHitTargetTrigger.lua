---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/5/10 16:57

require "Lib/class"

---@class TalentSkillChangeHitTargetTrigger : table
TalentSkillChangeHitTargetTrigger = class(nil, 'TalentSkillChangeHitTargetTrigger');

function TalentSkillChangeHitTargetTrigger:ctor(_battleId)
    ---@type number
    self.battleId = _battleId
    self.battleRoom = GetBattleRoom(self.battleId)
    self.changeCount = 0;

    self.targetNetId = 0;
    self.targetObjectId = 0;
end

---@public
---击中目标回调
---@param _talentSkillTrigger SkillTrigger
---@param _targetNetId number 伤害目标netId
---@param _targetObjectId number 伤害目标objectId
---@param _targetType number 伤害目标类型
---@param _damageSourceId number 伤害类型Id
---@param _damageSourceType number 伤害来源类型
---@param _damage number 造成伤害
---@param _damageType number 伤害类型
---@param _isCritical boolean 是否暴击
---@param _targetDead boolean 目标是否死亡
---@param _hurtDisReduceEnum number 伤害距离衰减类型，对应 HurtDisReduceEnum 定义的值
---@param _isWeakness boolean 是否为弱点攻击
---@param _curAttachEleId number 击中时目标元素
---@param _isAccumulatedAttack boolean 是否为蓄力攻击
---@param _skillBarrageId number 技能弹幕id
function TalentSkillChangeHitTargetTrigger:OnSkillHitTarget(_talentSkillTrigger,_battleObject, _targetNetId, _targetObjectId, _targetType, _damageSourceId, _damageSourceType, _damage, _damageType, _isCritical, _targetDead,_hurtDisReduceEnum,_isWeakness,_curAttachEleId,_isAccumulatedAttack,_skillBarrageId)
    --技能伤害
    if _damageSourceType ~= 1 then
        return;
    end

    if self.targetNetId == 0 then
        self.targetNetId = _targetNetId;
    end
    if self.targetObjectId == 0 then
        self.targetObjectId = _targetObjectId;
    end

    if self.targetNetId ~= _targetNetId then
        self.changeCount = self.changeCount + 1;
        self.targetNetId = _targetNetId;
        self.targetObjectId = _targetObjectId;
        return;
    end
    if self.targetObjectId ~= _targetObjectId then
        self.changeCount = self.changeCount + 1;
        self.targetNetId = _targetNetId;
        self.targetObjectId = _targetObjectId;
        return;
    end
end

---@public
---@param _battleObject BattleObjectBase 触发单位
---@param _talentSkillTrigger SkillTrigger 被动技能配置
---@param _talentSkill BattlePlayerTalentSkill 被动技能
function TalentSkillChangeHitTargetTrigger:Check(_battleObject, _talentSkillTrigger,_talentSkill)
    if _talentSkillTrigger.parm1 > self.changeCount then
        return 0;
    end
    local count = math.floor(self.changeCount / _talentSkillTrigger.parm1);
    if self.targetNetId ~= 0 and self.targetObjectId ~= 0 then
        _talentSkill:AddTriggerObject(self.targetObjectId,count);
    end
    self:Reset();
    return count;
end

---@public
function TalentSkillChangeHitTargetTrigger:Reset()
    self.changeCount = 0;
    self.targetNetId = 0;
    self.targetObjectId = 0;
end

---被动技能触发类型
---@return number 被动技能触发类型
function TalentSkillChangeHitTargetTrigger:GetType()
    return 129;
end

return TalentSkillChangeHitTargetTrigger;
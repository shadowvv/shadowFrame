---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wth.
--- DateTime: 2021/12/4 17:07
--- lua战斗逻辑外壳

require "Battle/Logic/Room/BattleRoom"

---@class FightCoreLua:table lua战斗逻辑外壳
FightCoreLua = class(nil, 'FightCoreLua')

function FightCoreLua:ctor()
    ---@type BattleRoom
    BATTLE_ROOM = BattleRoom:New();
end

-- 创建和初始化战斗房间
---@public
---@param _battleData table 战斗初始化相关数据
function FightCoreLua:InitBattleData(_battleData)

    if CheckLogLevel(LogLevel.log) then
        LogTools.Debug("FightCoreLua:InitBattleData", "")
    end
    
    if _battleData then
        -- 初始战斗数据：外部调用Set战斗数据，可能空
        -- _battleData是战场完整数据，结构是msg.BattleEnterInfo
        print("FightCoreLua InitBattleData(msg.BattleEnterInfo): " .. dump(_battleData))
    end
    BATTLE_ROOM:InitialBattleRoom(_battleData);
end

-- 设置客户端 battle core的玩家Id
---@public
---@param _playerId number 当前客户端启动logic_core的玩家Id
function FightCoreLua:SetClientPlayerId(_playerId)
    BATTLE_ROOM:SetClientPlayerId(_playerId);
end

-- 更新战斗房间
---@public
---@param _dt number 更新时间间隔
---@param _frameId number 当前帧号
function FightCoreLua:Update(_dt,_frameId)
    if IsClient() then
        --前端通过这个从c#层拉取消息 勿删
        CS_GetCommandFromClient()
    end

    if BATTLE_ROOM ~= nil then
        BATTLE_ROOM:Run(_dt,_frameId);
    end
end

-- 服务器接收消息接口
---@public
---@param _uid number 发送协议的玩家id，如果是战斗房间消息该值为nil
---@param _id number 协议id
---@param _msgTable table 协议
function FightCoreLua:ReceiveMsg(_uid, _id, _msgTable)
    BATTLE_ROOM:OnReceiveMessage(_uid, _id, _msgTable);
end

return FightCoreLua
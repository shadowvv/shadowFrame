---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wth.
--- DateTime: 2021/12/4 17:07
--- lua战斗逻辑外壳

require "Battle/Logic/Room/BattleRoom"

---@class FightCoreLua:table lua战斗逻辑外壳
FightCoreLua = class(nil, 'FightCoreLua')

function FightCoreLua:ctor(_battleId)
    ---@type BattleRoom
    self.battleRoom = BattleRoom.New(_battleId);
end

function FightCoreLua:Init()
    self.battleRoom:Init()
end

--- 创建和初始化战斗房间
---@public
---@param _battleData table 战斗初始化相关数据
function FightCoreLua:InitBattleData(_battleData)
    if CheckLogLevel(LogLevel.log) then
        LogTools.Info("FightCoreLua:InitBattleData", "BattleRoom", self.battleRoom:GetBattleId())
    end
    if _battleData then
        -- 初始战斗数据：外部调用Set战斗数据，可能空
        -- _battleData是战场完整数据，结构是msg.BattleEnterInfo
        --print("FightCoreLua InitBattleData(msg.BattleEnterInfo): " .. dump(_battleData))
    end
    self.battleRoom:InitialBattleRoom(_battleData);
end

--- 设置客户端 battle core的玩家Id
---@public
---@param _playerId number 当前客户端启动logic_core的玩家Id
function FightCoreLua:SetClientPlayerId(_playerId)
    self.battleRoom:SetClientPlayerId(_playerId);
end

--- 更新战斗房间
---@public
---@param _dt number 更新时间间隔
---@param _frameId number 当前帧号
---@param _dtMs number ms计数的整数delta
local msg_queue = {}
local function table_clear(t)
    for _key, _ in pairs(t) do
        t[_key] = nil
    end
    self.battleRoom:InitialBattleRoom(_battleData);
end

--- 战斗逻辑帧更新
function FightCoreLua:Update(_dt, _frameId)
    if self.battleRoom ~= nil then
        self.battleRoom:Run(_dt, _frameId);
    end
end

--- 服务器接收消息接口
---@public
---@param _uid number 发送协议的玩家id，如果是战斗房间消息该值为nil
---@param _id number 协议id
---@param _msgTable table 协议
---@param _arriveNetIoTime number 到达网络时间
function FightCoreLua:ReceiveMsg(_uid, _id, _msgTable, _arriveNetIoTime)
    self.battleRoom:OnReceiveMessage(_uid, _id, _msgTable, _arriveNetIoTime);
end

--- 关闭核心
---@public
function FightCoreLua:Close()
    if CheckLogLevel(LogLevel.log) then
        LogTools.Info("FightCoreLua:Close", "BattleRoom", self.battleRoom:GetBattleId())
    end
    self.battleRoom:Close();
end

--- 获取数据
---@public
---@param _getDataEnumIndex number
---@param _extParam table
---@return table
function FightCoreLua:GetData(_getDataEnumIndex, _extParam)
    return self.battleRoom:GetData(_getDataEnumIndex, _extParam);
end

return FightCoreLua
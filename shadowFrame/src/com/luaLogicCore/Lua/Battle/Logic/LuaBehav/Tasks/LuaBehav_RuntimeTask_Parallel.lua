---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2021/12/29 10:11
--- Describe: 并行节点
---

---@class LuaBehav_RuntimeTask_Parallel : table
LuaBehav_RuntimeTask_Parallel = class(LuaBehav_RuntimeTask, "LuaBehav_RuntimeTask_Parallel")

function LuaBehav_RuntimeTask_Parallel:CheckCanParallel()
	return true
end

-- 这里running的优先级高于failure
function LuaBehav_RuntimeTask_Parallel:ReCountTaskState(_taskState)
	local _state = LuaBehav_Define_TaskState.Success
	local _stateList = self.childStateList
	for i = 1, #_stateList do
		local _childState = _stateList[i]
		LuaBehav_DebugTool.PrintTask("LuaBehav_RuntimeTask_Parallel", "ReCountTaskState", "i", i, "state", LuaBehav_DebugTool.GetTaskStateDesc(_childState))
		if LuaBehav_Define_TaskState.Running == _childState then
			_state = LuaBehav_Define_TaskState.Running
			break
		end
		if LuaBehav_Define_TaskState.Success ~= _childState then
			_state = LuaBehav_Define_TaskState.Failure
			break
		end
	end
	LuaBehav_DebugTool.PrintTask("LuaBehav_RuntimeTask_Parallel", "ReCountTaskState", "final state", LuaBehav_DebugTool.GetTaskStateDesc(_state))
	self:__SetTaskState(_state)
	return _state
end

return LuaBehav_RuntimeTask_Parallel
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2021/12/22 11:06
--- Describe:
---


---@class LuaBehav_ConfigTask : table
---@field children LuaBehav_ConfigTask[]
---@field nodeType LuaBehav_Define_TaskType
LuaBehav_ConfigTask = class(nil, "LuaBehav_ConfigTask")
function LuaBehav_ConfigTask:ctor(_data) 
	self.nodeType = LuaBehav_Define_TaskType.None
	self.children = {}
	self.variables = {}
end

---@class LuaBehav_ConfigBehavTree : table
---@field rootTask LuaBehav_ConfigTask
LuaBehav_ConfigBehavTree = class(nil, "LuaBehav_ConfigBehavTree")
function LuaBehav_ConfigBehavTree:ctor(_data)
	self.rootTask = nil
end

--变量结构数据
---@class LuaBehav_ConfigTaskVariableConstruct : table
LuaBehav_ConfigTaskVariableConstruct = {
	variableType = 1,       --变量类型，LuaBehav_Define_TaskVariableType 枚举值
	variableValue = 2,      --变量值，配置的值
}

LuaBehav_ConfigTest = {}

function LuaBehav_ConfigTest.GetTestConfigData()
	local _configTree = LuaBehav_ConfigBehavTree.New()
	
	----------------------------------------------怪物测试--------------------------------------------------------------
	--local _logTask_1 = LuaBehav_ConfigTask.New()
	--_logTask_1.nodeType = LuaBehav_Define_TaskType.PrintLog
	--_logTask_1.log = ">>>>>>>>>>>> test monster behavTree start <<<<<<<<<<"
	--
	--local _monsBorn = LuaBehav_ConfigTask.New()
	--_monsBorn.nodeType = LuaBehav_Define_TaskType.MonsBorn
	--
	--local _waitTask_1 = LuaBehav_ConfigTask.New()
	--_waitTask_1.nodeType = LuaBehav_Define_TaskType.Wait
	--_waitTask_1.time = 5
	--
	--local _monsPatrol = LuaBehav_ConfigTask.New()
	--_monsPatrol.nodeType = LuaBehav_Define_TaskType.MonsPatrol
	--_monsPatrol.time = 10
	--
	--local _monsSelectTarget = LuaBehav_ConfigTask.New()
	--_monsSelectTarget.nodeType = LuaBehav_Define_TaskType.MonsSelectTarget
	--_monsSelectTarget.selectCampType = LuaBehav_Define_SelectCampType.SpecificCamps
	--_monsSelectTarget.selectCampTable = {LuaBehav_Define_BattleCampType.Player}
	--_monsSelectTarget.includeSelf = false
	--_monsSelectTarget.firstSelectCondition = LuaBehav_Define_SelectTargetType.MostDis
	--_monsSelectTarget.firstSelectConditionParam = nil
	--_monsSelectTarget.secSelectCondition = LuaBehav_Define_SelectTargetType.MostHatred
	--_monsSelectTarget.secSelectConditionParam = nil
	--
	--local _monsChaseTarget = LuaBehav_ConfigTask.New()
	--_monsChaseTarget.nodeType = LuaBehav_Define_TaskType.MonsChaseCurTarget
	--
	--local _waitTask_2 = LuaBehav_ConfigTask.New()
	--_waitTask_2.nodeType = LuaBehav_Define_TaskType.Wait
	--_waitTask_2.time = 1
	--
	--local _monsEscapeTarget = LuaBehav_ConfigTask.New()
	--_monsEscapeTarget.nodeType = LuaBehav_Define_TaskType.MonsEscapeCurTarget
	--
	--local _monsCastSkill = LuaBehav_ConfigTask.New()
	--_monsCastSkill.nodeType = LuaBehav_Define_TaskType.MonsCastSkill
	--_monsCastSkill.idDescType = LuaBehav_Define_SkillIdDescType.Position
	--_monsCastSkill.value = 1
	--_monsCastSkill.time = 1
	--
	--local _monsMoveTowards = LuaBehav_ConfigTask.New()
	--_monsMoveTowards.nodeType = LuaBehav_Define_TaskType.MonsMoveTowards
	--_monsMoveTowards.spaceType = LuaBehav_Define_SpaceType.SelfSpace
	--_monsMoveTowards.posShift = Vector3.New(100, 0, 0)
	--_monsMoveTowards.stopWhenArrive = true
	--_monsMoveTowards.time = 100
	--
	--local _monsMoveTowards_2 = LuaBehav_ConfigTask.New()
	--_monsMoveTowards_2.nodeType = LuaBehav_Define_TaskType.MonsMoveTowards
	--_monsMoveTowards_2.spaceType = LuaBehav_Define_SpaceType.SelfSpace
	--_monsMoveTowards_2.posShift = Vector3.New(100, 0, 0)
	--_monsMoveTowards_2.stopWhenArrive = true
	--_monsMoveTowards_2.time = 100
	--
	--local _condition_0 = LuaBehav_ConfigTask.New()
	--_condition_0.nodeType = LuaBehav_Define_TaskType.ConditionChecker
	--_condition_0.conditionType = LuaBehav_Define_ConditionCheckerType.MonsHasTarget
	--_condition_0.compareType = true
	--
	--local _condition_1 = LuaBehav_ConfigTask.New()
	--_condition_1.nodeType = LuaBehav_Define_TaskType.ConditionChecker
	--_condition_1.conditionType = LuaBehav_Define_ConditionCheckerType.CurTargetInAlertDis
	--_condition_1.compareType = true
	--
	--local _condition_2 = LuaBehav_ConfigTask.New()
	--_condition_2.nodeType = LuaBehav_Define_TaskType.ConditionChecker
	--_condition_2.conditionType = LuaBehav_Define_ConditionCheckerType.MonsInCastingSkill
	--_condition_2.compareType = false
	--
	--local _condition_3 = LuaBehav_ConfigTask.New()
	--_condition_3.nodeType = LuaBehav_Define_TaskType.MonsPropCondition
	--_condition_3.propKey = ProtoEnumTool.GetPropertyId(BattlePropertyEnum.Hp_Cur)
	--_condition_3.valueDescType = LuaBehav_Define_ValueDesType.SpecificValue
	--_condition_3.compareType = LuaBehav_Define_CompareType.Larger
	--_condition_3.compareValue = 10
	--
	--local _condition_4 = LuaBehav_ConfigTask.New()
	--_condition_4.nodeType = LuaBehav_Define_TaskType.ConditionChecker
	--_condition_4.conditionType = LuaBehav_Define_ConditionCheckerType.CurTargetInAtkAngle
	--_condition_4.compareType = false
	--
	--local _monsFaceTarget = LuaBehav_ConfigTask.New()
	--_monsFaceTarget.nodeType = LuaBehav_Define_TaskType.MonsFaceCurTarget
	--
	--local _monsDead = LuaBehav_ConfigTask.New()
	--_monsDead.nodeType = LuaBehav_Define_TaskType.MonsDeath
	--_monsDead.deadType = LuaBehav_Define_DeadType.DeadNormal
	--
	--local _logTask_2 = LuaBehav_ConfigTask.New()
	--_logTask_2.nodeType = LuaBehav_Define_TaskType.PrintLog
	--_logTask_2.log = ">>>>>>>>>>>> test monster behavTree end <<<<<<<<<<"
	--
	--local _sequenceTask_1 = LuaBehav_ConfigTask.New()
	--_sequenceTask_1.nodeType = LuaBehav_Define_TaskType.Sequence
	--_sequenceTask_1.interruptTag = true
	--
	--
	--
	--local _repeat = LuaBehav_ConfigTask.New()
	--_repeat.nodeType = LuaBehav_Define_TaskType.Repeat
	--_repeat.times = 0
	--table.insert(_repeat.children, _sequenceTask_1)
	--
	--local _sequenceTask_2 = LuaBehav_ConfigTask.New()
	--_sequenceTask_2.nodeType = LuaBehav_Define_TaskType.Sequence
	--table.insert(_sequenceTask_2.children, _logTask_1)
	--table.insert(_sequenceTask_2.children, _waitTask_1)
	--table.insert(_sequenceTask_2.children, _monsSelectTarget)
	--table.insert(_sequenceTask_2.children, _repeat)
	--
	----table.insert(_sequenceTask_1.children, _logTask_1)
	----table.insert(_sequenceTask_1.children, _waitTask_1)
	----table.insert(_sequenceTask_1.children, _monsPatrol)
	----table.insert(_sequenceTask_1.children, _monsSelectTarget)
	----table.insert(_sequenceTask_1.children, _monsChaseTarget)
	----table.insert(_sequenceTask_1.children, _waitTask_2)
	----table.insert(_sequenceTask_1.children, _monsEscapeTarget)
	--table.insert(_sequenceTask_1.children, _condition_4)
	----table.insert(_sequenceTask_1.children, _condition_1)
	----table.insert(_sequenceTask_1.children, _condition_2)
	----table.insert(_sequenceTask_1.children, _condition_3)
	--table.insert(_sequenceTask_1.children, _monsFaceTarget)
	----table.insert(_sequenceTask_1.children, _logTask_2)
	
	----------------------------------------------关卡测试--------------------------------------------------------------
	local _logTask_1 = LuaBehav_ConfigTask.New()
	_logTask_1.nodeType = LuaBehav_Define_TaskType.PrintLog
	_logTask_1.log = ">>>>>>>>>>>> test behavTree start <<<<<<<<<<"

	local _condition_4 = LuaBehav_ConfigTask.New()
	_condition_4.nodeType = LuaBehav_Define_TaskType.ConditionComparer
	_condition_4.conditionType = LuaBehav_Define_ConditionCompareType.LevelCurStage
	_condition_4.compareType = LuaBehav_Define_CompareType.LargerEqual
	_condition_4.compareValue = 4

	local _startTimerTask = LuaBehav_ConfigTask.New()
	_startTimerTask.nodeType = LuaBehav_Define_TaskType.LevelTimerOperation
	_startTimerTask.operationType = LuaBehav_Define_LevelTimerOperationType.Start

	--local _waitTask_1 = LuaBehav_ConfigTask.New()
	--_waitTask_1.nodeType = LuaBehav_Define_TaskType.Wait
	--_waitTask_1.time = 1

	--local _dropPlayerTask = LuaBehav_ConfigTask.New()
	--_dropPlayerTask.nodeType = LuaBehav_Define_TaskType.LevelDropPlayerHero
	--_dropPlayerTask.id = -1

	--local _dropMonsTask = LuaBehav_ConfigTask.New()
	--_dropMonsTask.nodeType = LuaBehav_Define_TaskType.LevelDropMons
	--_dropMonsTask.id = 1
	--_dropMonsTask.firstCamp = LuaBehav_Define_BattleCampType.Monster
	--_dropMonsTask.secondCamp = 1
	--_dropMonsTask.position = {x = 100, y = 100, z = 100}
	--_dropMonsTask.rotation = {x = 0, y = 50, z = 0}
	
	local _openCommunication = LuaBehav_ConfigTask.New()
	_openCommunication.nodeType = LuaBehav_Define_TaskType.LevelOpenBattleCommunication
	_openCommunication.talkGroupId = 9000101
	
	local _dropLevelUnit = LuaBehav_ConfigTask.New()
	_dropLevelUnit.nodeType = LuaBehav_Define_TaskType.LevelDropUnit
	_dropLevelUnit.dropType = LuaBehav_Define_LevelUnitDropType.LevelUnit
	_dropLevelUnit.id = 100000
	--_dropLevelUnit.firstCamp = LuaBehav_Define_BattleCampType.Monster
	--_dropLevelUnit.secondCamp = 1
	
	local _checkLevelTrigger = LuaBehav_ConfigTask.New()
	_checkLevelTrigger.nodeType = LuaBehav_Define_TaskType.LevelTriggerChecker
	_checkLevelTrigger.selectUnitType = LuaBehav_Define_TriggerSelectUnitType.LevelUnit
	_checkLevelTrigger.triggerId = 1
	_checkLevelTrigger.targetIdList = {1}
	_checkLevelTrigger.checkInner = true
	
	local _waitTask_2 = LuaBehav_ConfigTask.New()
	_waitTask_2.nodeType = LuaBehav_Define_TaskType.Wait
	_waitTask_2.time = 3
	
	local _removeTrigger = LuaBehav_ConfigTask.New()
	_removeTrigger.nodeType = LuaBehav_Define_TaskType.LevelRemoveTrigger
	_removeTrigger.id = 100000
	
	local _dropLevelUnitGroup = LuaBehav_ConfigTask.New()
	_dropLevelUnitGroup.nodeType = LuaBehav_Define_TaskType.LevelDropUnit
	_dropLevelUnitGroup.dropType = LuaBehav_Define_LevelUnitDropType.LevelUnitGroup
	_dropLevelUnitGroup.id = 0
	_dropLevelUnitGroup.firstCamp = LuaBehav_Define_BattleCampType.Monster
	_dropLevelUnitGroup.secondCamp = 1
	
	local _checkUnitDead = LuaBehav_ConfigTask.New()
	_checkUnitDead.nodeType = LuaBehav_Define_TaskType.LevelCheckUnitDead
	_checkUnitDead.targetType = LuaBehav_Define_AiOperationTargetType.SpecificUnit
	_checkUnitDead.idList = {}
	
	--local _levelForceEnd = LuaBehav_ConfigTask.New()
	--_levelForceEnd.nodeType = LuaBehav_Define_TaskType.LevelForceEnd
	--_levelForceEnd.result = LuaBehav_Define_LevelResultType.Win
	
	--local _playPlot = LuaBehav_ConfigTask.New()
	--_playPlot.nodeType = LuaBehav_Define_TaskType.LevelPlayPlot
	--_playPlot.result = LuaBehav_Define_LevelResultType.Win
	
	--local _aiOperate = LuaBehav_ConfigTask.New()
	--_aiOperate.nodeType = LuaBehav_Define_TaskType.LevelOperateAi
	--_aiOperate.operateType = LuaBehav_Define_AiOperationType.PauseAi
	--_aiOperate.targetType = LuaBehav_Define_AiOperationTargetType.SpecificUnit
	--_aiOperate.idList = {1}
	
	--local _setUnitProp = LuaBehav_ConfigTask.New()
	--_setUnitProp.nodeType = LuaBehav_Define_TaskType.LevelSetUnitProp
	--_setUnitProp.operateType = LuaBehav_Define_AiOperationType.PauseAi
	--_setUnitProp.targetType = LuaBehav_Define_AiOperationTargetType.SpecificUnit
	--_setUnitProp.idList = {1}
	
	local _killUnit = LuaBehav_ConfigTask.New()
	_killUnit.nodeType = LuaBehav_Define_TaskType.LevelKillUnit
	_killUnit.targetType = LuaBehav_Define_AiOperationTargetType.SpecificUnit
	_killUnit.deadType = LuaBehav_Define_DeadType.DeadNormal
	_killUnit.idList = {21}
	
	local _killUnitGroup = LuaBehav_ConfigTask.New()
	_killUnitGroup.nodeType = LuaBehav_Define_TaskType.LevelKillUnit
	_killUnitGroup.targetType = LuaBehav_Define_AiOperationTargetType.SpecificUnitGroup
	_killUnitGroup.deadType = LuaBehav_Define_DeadType.DeadNormal
	_killUnitGroup.idList = {0}

	local _logTask_2 = LuaBehav_ConfigTask.New()
	_logTask_2.nodeType = LuaBehav_Define_TaskType.PrintLog
	_logTask_2.log = ">>>>>>>>>>>> test behavTree end <<<<<<<<<<"
	
	local _stop = LuaBehav_ConfigTask.New()
	_stop.nodeType = LuaBehav_Define_TaskType.StopTree

	local _sequenceTask_1 = LuaBehav_ConfigTask.New()
	_sequenceTask_1.nodeType = LuaBehav_Define_TaskType.Sequence
	_sequenceTask_1.interruptTag = true
	table.insert(_sequenceTask_1.children, _condition_4)
	table.insert(_sequenceTask_1.children, _startTimerTask)
	table.insert(_sequenceTask_1.children, _openCommunication)
	--table.insert(_sequenceTask_1.children, _checkLevelTrigger)
	--table.insert(_sequenceTask_1.children, _waitTask_2)
	--table.insert(_sequenceTask_1.children, _removeTrigger)
	--table.insert(_sequenceTask_1.children, _killUnit)
	--table.insert(_sequenceTask_1.children, _waitTask_2)
	--table.insert(_sequenceTask_1.children, _killUnitGroup)
	table.insert(_sequenceTask_1.children, _logTask_2)
	table.insert(_sequenceTask_1.children, _stop)

	--local _dropPerformanceHeroTask = LuaBehav_ConfigTask.New()
	--_dropPerformanceHeroTask.nodeType = LuaBehav_Define_TaskType.LevelDropPerformanceHero
	--_dropPerformanceHeroTask.id = 1
	--_dropPerformanceHeroTask.position = Vector3.New(0,0,0)
	--_dropPerformanceHeroTask.rotation = Vector3.New(0,50,0)
	

	--local _selectTask = LuaBehav_ConfigTask.New()
	--_selectTask.nodeType = LuaBehav_Define_TaskType.Select
	local _repeat = LuaBehav_ConfigTask.New()
	_repeat.nodeType = LuaBehav_Define_TaskType.Repeat
	_repeat.times = 0
	table.insert(_repeat.children, _sequenceTask_1)

	
	----------------------------------------------关卡测试--------------------------------------------------------------
	--local _logTask_1 = LuaBehav_ConfigTask.New()
	--_logTask_1.nodeType = LuaBehav_Define_TaskType.PrintLog
	--_logTask_1.log = ">>>>>>>>>>>> test behavTree start <<<<<<<<<<"
	--
	--local _condition_1 = LuaBehav_ConfigTask.New()
	--_condition_1.nodeType = LuaBehav_Define_TaskType.Condition
	--_condition_1.conditionType = LuaBehav_Define_ConditionCheckerType.MonsHasTarget
	--_condition_1.compareType = LuaBehav_Define_CompareType.True
	--_condition_1.compareValue = 1
	--
	--local _condition_2 = LuaBehav_ConfigTask.New()
	--_condition_2.nodeType = LuaBehav_Define_TaskType.Condition
	--_condition_2.conditionType = LuaBehav_Define_ConditionCheckerType.MonsInBand
	--_condition_2.compareType = LuaBehav_Define_CompareType.False
	--_condition_2.compareValue = 1
	--
	--local _condition_3 = LuaBehav_ConfigTask.New()
	--_condition_3.nodeType = LuaBehav_Define_TaskType.Condition
	--_condition_3.conditionType = LuaBehav_Define_ConditionCheckerType.MonsInCastingSkill
	--_condition_3.compareType = LuaBehav_Define_CompareType.False
	--_condition_3.compareValue = 1
	--
	--local _condition_4 = LuaBehav_ConfigTask.New()
	--_condition_4.nodeType = LuaBehav_Define_TaskType.Condition
	--_condition_4.conditionType = LuaBehav_Define_ConditionCheckerType.CurTargetInAtkAngle
	--_condition_4.compareType = LuaBehav_Define_CompareType.True
	--_condition_4.compareValue = 1
	--
	--local _monsDisCon_1 = LuaBehav_ConfigTask.New()
	--_monsDisCon_1.nodeType = LuaBehav_Define_TaskType.MonsDisCondition
	--_monsDisCon_1.conditionType = LuaBehav_Define_MonsDisConditionType.CurTargetInAtkDis
	--_monsDisCon_1.ratio = 1
	--_monsDisCon_1.compareType = true
	--
	--local _monsDisCon_2 = LuaBehav_ConfigTask.New()
	--_monsDisCon_2.nodeType = LuaBehav_Define_TaskType.MonsDisCondition
	--_monsDisCon_2.conditionType = LuaBehav_Define_MonsDisConditionType.CurTargetInChaseDis
	--_monsDisCon_2.ratio = 1
	--_monsDisCon_2.compareType = true
	--
	--local _monsDisCon_3 = LuaBehav_ConfigTask.New()
	--_monsDisCon_3.nodeType = LuaBehav_Define_TaskType.MonsDisCondition
	--_monsDisCon_3.conditionType = LuaBehav_Define_MonsDisConditionType.CurTargetInEscapeDis
	--_monsDisCon_3.ratio = 1
	--_monsDisCon_3.compareType = true
	--
	--local _event_1 = LuaBehav_ConfigTask.New()
	--_event_1.nodeType = LuaBehav_Define_TaskType.Event
	--_event_1.eventType = LuaBehav_Define_EventTaskType.SpecificMonsOnHurt
	--_event_1.paramValue = nil
	--
	--local _randomTask = LuaBehav_ConfigTask.New()
	--_randomTask.nodeType = LuaBehav_Define_TaskType.RandomInt
	--_randomTask.min = 1
	--_randomTask.max = 10
	--_randomTask.scale = 1
	--_randomTask.saveId = 50
	--
	--local _checkVariable = LuaBehav_ConfigTask.New()
	--_checkVariable.nodeType = LuaBehav_Define_TaskType.CheckVariable
	--_checkVariable.id = 50
	--_checkVariable.compareType = LuaBehav_Define_CompareType.Larger
	--_checkVariable.compareValue = 5
	--
	--local _propCondition = LuaBehav_ConfigTask.New()
	--_propCondition.nodeType = LuaBehav_Define_TaskType.MonsPropCondition
	--_propCondition.propKey = 101
	--_propCondition.valueDescType = LuaBehav_Define_ValueDesType.SpecificValue
	--_propCondition.compareType = LuaBehav_Define_CompareType.Larger
	--_propCondition.compareValue = 1
	--
	--local _logTask_2 = LuaBehav_ConfigTask.New()
	--_logTask_2.nodeType = LuaBehav_Define_TaskType.PrintLog
	--_logTask_2.log = ">>>>>>>>>>>> test behavTree end <<<<<<<<<<"
	--
	--local _sequenceTask_1 = LuaBehav_ConfigTask.New()
	--_sequenceTask_1.nodeType = LuaBehav_Define_TaskType.Sequence
	--table.insert(_sequenceTask_1.children, _logTask_1)
	--table.insert(_sequenceTask_1.children, _condition_1)
	--table.insert(_sequenceTask_1.children, _condition_2)
	--table.insert(_sequenceTask_1.children, _condition_3)
	--table.insert(_sequenceTask_1.children, _condition_4)
	--table.insert(_sequenceTask_1.children, _monsDisCon_1)
	--table.insert(_sequenceTask_1.children, _monsDisCon_2)
	--table.insert(_sequenceTask_1.children, _monsDisCon_3)
	--table.insert(_sequenceTask_1.children, _randomTask)
	--table.insert(_sequenceTask_1.children, _checkVariable)
	--table.insert(_sequenceTask_1.children, _logTask_2)
	--------------------------------------------------------------------------------------------------------------------
	local _rootTask = LuaBehav_ConfigTask.New()
	_rootTask.nodeType = LuaBehav_Define_TaskType.Root
	table.insert(_rootTask.children, _repeat)


	_configTree.rootTask = _rootTask

	return _configTree
end
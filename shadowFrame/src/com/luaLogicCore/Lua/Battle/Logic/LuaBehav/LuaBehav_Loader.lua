---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2021/12/21 17:52
--- Describe: 用于加载和解析配置的工具类
---

---@class LuaBehav_Loader : table
LuaBehav_Loader = class(nil, "LuaBehav_Loader")
function LuaBehav_Loader:ctor(_data) end
function LuaBehav_Loader:OnUpdate(_deltaTime) end

function LuaBehav_Loader:Init(_behavRuntimeMgr)
	self.behavRunTimeMgr = _behavRuntimeMgr
end

-- 加载配置内容
---@param _configBehavTree LuaBehav_ConfigBehavTree
---@return LuaBehav_RuntimeBehavTree
function LuaBehav_Loader:Load(_configBehavTree, _index, _netId)
	local _rootTask = _configBehavTree.rootTask
	if not _rootTask then return nil end
	
	---@type LuaBehav_RuntimeBehavTree
	local _behavTree = LuaBehav_RuntimeBehavTree.New()
	_behavTree:Init(self.behavRunTimeMgr, _index, _netId)
	self:__LoadConfigTask(_behavTree, _rootTask, nil, 1)
	
	return _behavTree
end

-- 解析配置生成的任务数据
---@param _behavTree LuaBehav_RuntimeBehavTree
---@param _configTask LuaBehav_ConfigTask
---@param _parentRuntimeTask LuaBehav_RuntimeTask
function LuaBehav_Loader:__LoadConfigTask(_behavTree, _configTask, _parentRuntimeTask, _cntInParent)
	local _taskList = _behavTree.taskList
	local _parentTaskIndex = -1
	if _parentRuntimeTask then _parentTaskIndex = _parentRuntimeTask.index end
	
	---@type LuaBehav_RuntimeTask
	local _runtimeTask = self:__InstantiateRuntimeTaskByType(_configTask.nodeType)
	if not _runtimeTask then return end
	table.insert(_taskList, _runtimeTask)
	local _taskIndex = #_taskList
	_runtimeTask:Init(_behavTree, _taskIndex, _parentTaskIndex, _configTask, _cntInParent)
	LuaBehav_DebugTool.PrintRuntime("LuaBehav_Loader", "_taskIndex", _taskIndex, "_configTask.type", _configTask.nodeType, LuaBehav_DebugTool.GetTaskTypeDesc(_configTask.nodeType))
	if _runtimeTask:IsConditionalTask() then
		--table.insert(_behavTree.conditionalTaskList, _runtimeTask)
		--table.insert(_behavTree.conditionalStateList, LuaBehav_Define_TaskState.Failure)
		local _shouldCheckInterrupt = false
		while _parentRuntimeTask and _parentRuntimeTask:CheckInterruptTag() do
			_shouldCheckInterrupt = true
			_behavTree.conditionInterruptionParentIndexDic[_taskIndex] = _parentTaskIndex
			_parentTaskIndex = _behavTree.parentIndexDic[_parentTaskIndex]
			_parentRuntimeTask = _behavTree:GetTask(_parentTaskIndex)
		end
		if _shouldCheckInterrupt then
			table.insert(_behavTree.conditionalTaskList, _runtimeTask)
			table.insert(_behavTree.conditionalStateList, LuaBehav_Define_TaskState.Failure)
		end
	end

	if _runtimeTask:IsInterruptTask() then
		_behavTree.interruptionTaskDic[_taskIndex] = _runtimeTask
	end
	
	local _childList = _configTask.children
	local _childCount = #_childList
	if _childCount > 0 then
		self:__LoadConfigTaskOfParentType(_behavTree, _configTask, _childList, _childCount, _runtimeTask)
	else
		self:__LoadConfigTaskOfChildType(_behavTree, _configTask, _taskIndex)
	end
	
	
end

-- 解析配置的父任务类型数据
---@param _behavTree LuaBehav_RuntimeBehavTree
---@param _configParentTask LuaBehav_ConfigTask
---@param _childList LuaBehav_ConfigTask[]
---@param _parentRuntimeTask LuaBehav_RuntimeTask
function LuaBehav_Loader:__LoadConfigTaskOfParentType(_behavTree, _configParentTask, _childList, _childCount, _parentRuntimeTask)
	local _parentIndex = _parentRuntimeTask.index
	local _treeTaskList = _behavTree.taskList --这里长度是会变的
	local _childIndexList = _parentRuntimeTask.childIndexList
	local _childStateList = _parentRuntimeTask.childStateList
	local _defaultChildState = LuaBehav_Define_TaskState.Inactive
	LuaBehav_DebugTool.PrintRuntime("LuaBehav_Loader","__LoadConfigTaskOfParentType","_childCount",_childCount)
	for i = 1, _childCount do
		local _configTask = _childList[i]
		local _childIndex = #_treeTaskList + 1
		table.insert(_childIndexList, _childIndex)
		table.insert(_childStateList, _defaultChildState)
		
		self:__LoadConfigTask(_behavTree, _configTask, _parentRuntimeTask, i)
	end
end

-- 解析配置的子任务类型数据
---@param _behavTree LuaBehav_RuntimeBehavTree
---@param _configTask LuaBehav_ConfigTask
function LuaBehav_Loader:__LoadConfigTaskOfChildType(_behavTree, _configTask)
	
end

-- 根据类型实例化具体对应的类
---@param _type LuaBehav_Define_TaskType
function LuaBehav_Loader:__InstantiateRuntimeTaskByType(_type)
	local _ret
	if LuaBehav_Define_TaskType.Root == _type then
		_ret = LuaBehav_RuntimeTask_Root.New()
	elseif LuaBehav_Define_TaskType.PrintLog == _type then
		_ret = LuaBehav_RuntimeTask_PrintLog.New()
	elseif LuaBehav_Define_TaskType.Wait == _type then
		_ret = LuaBehav_RuntimeTask_Wait.New()
	elseif LuaBehav_Define_TaskType.SetVariable == _type then
		_ret = LuaBehav_RuntimeTask_SetVariable.New()
	elseif LuaBehav_Define_TaskType.CheckVariable == _type then
		_ret = LuaBehav_RuntimeTask_CheckVariable.New()
	elseif LuaBehav_Define_TaskType.RandomInt == _type then
		_ret = LuaBehav_RuntimeTask_RandomInt.New()
	elseif LuaBehav_Define_TaskType.Sequence == _type then
		_ret = LuaBehav_RuntimeTask_Sequence.New()
	elseif LuaBehav_Define_TaskType.Select == _type then
		_ret = LuaBehav_RuntimeTask_Select.New()
	elseif LuaBehav_Define_TaskType.Parallel == _type then
		_ret = LuaBehav_RuntimeTask_Parallel.New()
	elseif LuaBehav_Define_TaskType.Condition == _type then
		_ret = LuaBehav_RuntimeTask_Condition.New()
	elseif LuaBehav_Define_TaskType.Repeat == _type then
		_ret = LuaBehav_RuntimeTask_Repeat.New()
	elseif LuaBehav_Define_TaskType.Event == _type then
		_ret = LuaBehav_RuntimeTask_Event.New()
	----------------------------------------------------------------------------------------------------------------
	elseif LuaBehav_Define_TaskType.LevelDropMons == _type then
		_ret = LuaBehav_RuntimeTask_LevelDropMons.New()
	elseif LuaBehav_Define_TaskType.LevelDropPlayerHero == _type then
		_ret = LuaBehav_RuntimeTask_LevelDropPlayerHero.New()
	elseif LuaBehav_Define_TaskType.LevelTimerOperation == _type then
		_ret = LuaBehav_RuntimeTask_LevelTimerOperation.New()
	elseif LuaBehav_Define_TaskType.LevelDropPerformanceHero == _type then
		_ret = LuaBehav_RuntimeTask_LevelDropPerformanceHero.New()
	----------------------------------------------------------------------------------------------------------------
	elseif LuaBehav_Define_TaskType.MonsBorn == _type then
		_ret = LuaBehav_RuntimeTask_MonsBorn.New()
	elseif LuaBehav_Define_TaskType.MonsDeath == _type then
		_ret = LuaBehav_RuntimeTask_MonsDeath.New()
	elseif LuaBehav_Define_TaskType.MonsPatrol == _type then
		_ret = LuaBehav_RuntimeTask_MonsPatrol.New()
	elseif LuaBehav_Define_TaskType.MonsSelectTarget == _type then
		_ret = LuaBehav_RuntimeTask_MonsSelectTarget.New()
	elseif LuaBehav_Define_TaskType.MonsChaseCurTarget == _type then
		_ret = LuaBehav_RuntimeTask_MonsChaseCurTarget.New()
	elseif LuaBehav_Define_TaskType.MonsEscapeCurTarget == _type then
		_ret = LuaBehav_RuntimeTask_MonsEscapeCurTarget.New()
	elseif LuaBehav_Define_TaskType.MonsFaceCurTarget == _type then
		_ret = LuaBehav_RuntimeTask_MonsFaceCurTarget.New()
	elseif LuaBehav_Define_TaskType.MonsAddBuff == _type then
		_ret = LuaBehav_RuntimeTask_MonsAddBuff.New()
	elseif LuaBehav_Define_TaskType.MonsMoveTowards == _type then
		_ret = LuaBehav_RuntimeTask_MonsMoveTowards.New()
	elseif LuaBehav_Define_TaskType.MonsRotateTowards == _type then
		_ret = LuaBehav_RuntimeTask_MonsRotateTowards.New()
	elseif LuaBehav_Define_TaskType.MonsDisCondition == _type then
		_ret = LuaBehav_RuntimeTask_MonsDisCondition.New()
	elseif LuaBehav_Define_TaskType.MonsPropCondition == _type then
		_ret = LuaBehav_RuntimeTask_MonsPropCondition.New()

	else
		LuaBehav_DebugTool.PrintRuntime("LuaBehav_Loader","Not get RuntimeTask!!! type:", _type, " -- ", LuaBehav_DebugTool.GetTaskTypeDesc(_type))
	end
	return _ret
end

return LuaBehav_Loader
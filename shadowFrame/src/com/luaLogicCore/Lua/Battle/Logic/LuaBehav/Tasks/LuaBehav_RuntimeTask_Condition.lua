---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2021/12/28 16:08
--- Describe: 通用条件节点
---

---@class LuaBehav_RuntimeTask_Condition : table
LuaBehav_RuntimeTask_Condition = class(LuaBehav_RuntimeTask, "LuaBehav_RuntimeTask_Condition")

function LuaBehav_RuntimeTask_Condition:IsConditionalTask()
	return true
end

function LuaBehav_RuntimeTask_Condition:OnStart()
	self:__OnStart()

	if self.configTask.conditionType == LuaBehav_Define_ConditionType.MonsHasTarget then
		self:OnCaseMonsHasTarget()
	elseif self.configTask.conditionType == LuaBehav_Define_ConditionType.MonsInBand then
		self:OnCaseMonsInBand()
	elseif self.configTask.conditionType == LuaBehav_Define_ConditionType.MonsInCastingSkill then
		self:OnCaseMonsInCastingSkill()
	elseif self.configTask.conditionType == LuaBehav_Define_ConditionType.CurTargetInAtkAngle then
		self:OnCaseCurTargetInAtkAngle()
	end
		
end

-- 
function LuaBehav_RuntimeTask_Condition:OnUpdate()
	local _retState = LuaBehav_Define_TaskState.Failure
	
	local _compareType = self.configTask.compareType
	if _compareType == LuaBehav_Define_CompareType.Equal then
		if self.__callRet == self.configTask.compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.UnEqual then
		if self.__callRet ~= self.configTask.compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.Larger then
		if self.__callRet > self.configTask.compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.Smaller then
		if self.__callRet < self.configTask.compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.True then
		if true == self.__callRet then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.False then
		if false == self.__callRet then
			_retState = LuaBehav_Define_TaskState.Success
		end
	end
	
	self:__SetTaskState(_retState)
	return _retState
end

-- 怪物是否有目标
function LuaBehav_RuntimeTask_Condition:OnCaseMonsHasTarget()
	self.__callRet = LuaBehav_Interfaces.CheckMonsHasTarget(self.netId)
end

-- 怪物是否在限制中
function LuaBehav_RuntimeTask_Condition:OnCaseMonsInBand()
	self.__callRet = LuaBehav_Interfaces.CheckMonsInBand(self.netId)
end

-- 怪物是否在施放技能中
function LuaBehav_RuntimeTask_Condition:OnCaseMonsInCastingSkill()
	self.__callRet = LuaBehav_Interfaces.CheckMonsInCastingSkill(self.netId)
end

-- 当前目标是否在攻击角度内
function LuaBehav_RuntimeTask_Condition:OnCaseCurTargetInAtkAngle()
	self.__callRet = LuaBehav_Interfaces.CheckCurTargetInAtkAngle(self.netId)
end

return LuaBehav_RuntimeTask_Condition
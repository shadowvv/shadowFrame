---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2023/06/27 11:00
--- Describe: 单位检查自己的护盾存在
---

---@class LuaBehav_RuntimeTask_UnitCheckShield : LuaBehav_RuntimeTask
LuaBehav_RuntimeTask_UnitCheckShield = class(LuaBehav_RuntimeTask, "LuaBehav_RuntimeTask_UnitCheckShield")

function LuaBehav_RuntimeTask_UnitCheckShield:IsConditionalTask()
	return true
end

-- 
function LuaBehav_RuntimeTask_UnitCheckShield:__RegistListener()
	
	--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_UnitCheckShield:__RegistListener", "self.configTask.shieldId", self.configTask.shieldId, "self.index", self.index)
	---@private
	---@type boolean
	self.__anyId = (self.configTask.shieldId == -1)
	---@private
	---@type number
	self.__checkId = self.configTask.shieldId
	---@private
	---@type LuaBehav_Define_TaskState
	self.__ret = LuaBehav_Define_TaskState.Failure
	---@private
	self.__shieldNum = 0
	---@private
	self.__shieldDic = {}
	
	---@type BattleUnitBase
	local _unit = self.battleRoom.battleUnitManager:GetUnit(self.netId, true)
	---@type BattleUnitCom_Subordination
	local _subordinationCom = _unit:GetComponent(BattleUnitComponentType.Subordination)
	if _subordinationCom then
		
		local _shieldList = _subordinationCom:GetManagedObjListByObjType(BattleObjectType.Shield)
		for _, _shieldObj in pairs(_shieldList) do
			self:__OnOpenShield(_shieldObj:GetDicId())
		end
		
	end
	
	self:RegistListenEvent(LuaBehav_Define_TaskListenEnum.HasShield)
	self.__registed = true
end

function LuaBehav_RuntimeTask_UnitCheckShield:OnListenEvent(_param)
	--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_UnitCheckShield:OnListenEvent", "self.index", self.index, "_param", dumpTableEx(_param))
	
	if _param.isOpen then
		self:__OnOpenShield(_param.id)
	else
		self:__OnCloseShield(_param.id)
	end
	
end

---@private
function LuaBehav_RuntimeTask_UnitCheckShield:__OnOpenShield(_shieldDicId)
	local _curNum = self.__shieldDic[_shieldDicId] or 0
	self.__shieldDic[_shieldDicId] = _curNum + 1
	self.__shieldNum = self.__shieldNum + 1
	
	if self.__anyId then
		--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_UnitCheckShield:__OnOpenShield", "any", "self.index", self.index)
		self.__ret = LuaBehav_Define_TaskState.Success
	elseif self.__checkId == _shieldDicId then
		--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_UnitCheckShield:__OnOpenShield", "sameId", "self.index", self.index)
		self.__ret = LuaBehav_Define_TaskState.Success
	end
end

---@private
function LuaBehav_RuntimeTask_UnitCheckShield:__OnCloseShield(_shieldDicId)
	--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_UnitCheckShield:__OnCloseShield 1", "_shieldDicId", _shieldDicId, "self.__anyId", self.__anyId, "self.__checkId", self.__checkId, "self.index", self.index)
	local _curNum = self.__shieldDic[_shieldDicId] or 0
	_curNum = _curNum - 1
	if _curNum < 0 then _curNum = 0 end
	self.__shieldDic[_shieldDicId] = _curNum
	self.__shieldNum = self.__shieldNum - 1
	--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_UnitCheckShield:__OnCloseShield 2", "self.__shieldNum", self.__shieldNum, "_curNum", _curNum)
	
	if self.__anyId then
		if self.__shieldNum == 0 then
			--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_UnitCheckShield:__OnCloseShield", "any", "self.index", self.index)
			self.__ret = LuaBehav_Define_TaskState.Failure
		end
	elseif self.__checkId == _shieldDicId then
		if _curNum == 0 then
			--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_UnitCheckShield:__OnCloseShield", "sameId", "self.index", self.index)
			self.__ret = LuaBehav_Define_TaskState.Failure
		end
	end
end

function LuaBehav_RuntimeTask_UnitCheckShield:OnUpdate()
	if not self.__registed then
		self:__RegistListener()
	end
	
	self:__SetTaskState(self.__ret)
	--LogTools.LogByLevel(LogLevel.log, "LuaBehav_RuntimeTask_UnitCheckShield:OnUpdate", "self.__ret", LogTools.GetEnumTableDesc(LuaBehav_Define_TaskState, self.__ret), "self.index", self.index)
	return self.__ret
end

function LuaBehav_RuntimeTask_UnitCheckShield:Clear()
	self:RemoveListenEvent(LuaBehav_Define_TaskListenEnum.HasShield)
	self:__Clear()
	self.__registed = nil
	self.__anyId = nil
	self.__checkId = nil
	self.__ret = nil
	self.__shieldNum = nil
	self.__shieldDic = nil
end

return LuaBehav_RuntimeTask_UnitCheckShield
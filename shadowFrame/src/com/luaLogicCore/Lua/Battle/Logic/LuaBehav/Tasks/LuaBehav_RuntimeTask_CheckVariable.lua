---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2021/12/28 18:13
--- Describe:
---

---@class LuaBehav_RuntimeTask_CheckVariable : LuaBehav_RuntimeTask
LuaBehav_RuntimeTask_CheckVariable = class(LuaBehav_RuntimeTask, "LuaBehav_RuntimeTask_CheckVariable")

---@private
function LuaBehav_RuntimeTask_CheckVariable:__InitConfigTaskVariables(_variableDic, _treeVariableDic)
	--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_CheckVariable __InitConfigTaskVariables", "_variableDic", dumpTableEx(_variableDic))
	---@type LuaBehav_RuntimeVariableBase[]
	self.variables = {}
	if not _variableDic then
		self.variables.id = LuaBehav_RuntimeVariableBase.New()
		self.variables.id:Init({variableType = LuaBehav_Define_TaskVariableType.SampleVariable, variableValue = self.configTask.id}, _treeVariableDic)
		self.variables.compareValue = LuaBehav_RuntimeVariableBase.New()
		self.variables.compareValue:Init({variableType = LuaBehav_Define_TaskVariableType.SampleVariable, variableValue = self.configTask.compareValue}, _treeVariableDic)
	else
		for _key, _configVariable in pairs(_variableDic) do
			self.variables[_key] = LuaBehav_RuntimeVariableBase.New()
			self.variables[_key]:Init(_configVariable, _treeVariableDic)
		end
	end
	--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_CheckVariable __InitConfigTaskVariables", "self.variables", dumpTableEx(self.variables))
end

function LuaBehav_RuntimeTask_CheckVariable:IsConditionalTask()
	return true
end

function LuaBehav_RuntimeTask_CheckVariable:OnUpdate(_deltaTime)
	local _retState = LuaBehav_Define_TaskState.Failure
	local _configTask = self.configTask
	local _variableValue = self.behavTree.treeVariableDic[self.variables.id:GetValue()]
	--LogTools.LogByLevel(LogLevel.logErr, "LuaBehav_RuntimeTask_CheckVariable", "self.variables.id:GetValue()", self.variables.id:GetValue(), "self.behavTree.treeVariableDic[self.variables.id:GetValue()]", self.behavTree.treeVariableDic[self.variables.id:GetValue()])
	if not _variableValue then
		self:__SetTaskState(_retState)
		return _retState
	end 

	local _compareType = _configTask.compareType
	local _compareValue = self.variables.compareValue:GetValue()
	if _compareType == LuaBehav_Define_CompareType.Equal then
		if _variableValue == _compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.UnEqual then
		if _variableValue ~= _compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.Larger then
		if _variableValue > _compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.Smaller then
		if _variableValue < _compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.LargerEqual then
		if _variableValue >= _compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	elseif _compareType == LuaBehav_Define_CompareType.SmallerEqual then
		if _variableValue <= _compareValue then
			_retState = LuaBehav_Define_TaskState.Success
		end
	end
	
	self:__SetTaskState(_retState)
	return _retState
end
return LuaBehav_RuntimeTask_CheckVariable
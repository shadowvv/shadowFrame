---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2021/12/29 16:03
--- Describe: 循环节点
---

---@class LuaBehav_RuntimeTask_Repeat : LuaBehav_RuntimeTask
LuaBehav_RuntimeTask_Repeat = class(LuaBehav_RuntimeTask, "LuaBehav_RuntimeTask_Repeat")


function LuaBehav_RuntimeTask_Repeat:OnStart()
	self:__OnStart()
	
	--重复的最大次数，如果小于1(或者没赋值)，表示一直重复
	--注意：这里的1表示重复1次，也就是一共运行了2次
	local _maxTimes = self.configTask.times 
	if not _maxTimes or _maxTimes < 1 then
		self.repeatForever = true
	else
		self.repeatForever = false
		self.timesTotal = _maxTimes
	end
	self.timesAcc = 0
	--LogTools.LogByLevel(LogLevel.log, "LuaBehav_RuntimeTask_Repeat OnStart", "self.curExcuteChildCnt", self.curExcuteChildCnt)
end


function LuaBehav_RuntimeTask_Repeat:CheckCanExecute()
	----LogTools.LogByLevel(LogLevel.log, "LuaBehav_RuntimeTask_Repeat", "CheckCanExecute", "self.curExcuteChildCnt", self.curExcuteChildCnt, "self.childStateList", #self.childStateList)
	local _stateList = self.childStateList
	
	if self.curExcuteChildCnt == #_stateList then return false end
	
	local _checkState_1 = LuaBehav_Define_TaskState.Abort
	local _hideList = self.childHideList
	for i = 1, #_stateList do
		if not _hideList[i] then
			local _childState = _stateList[i]
			if _checkState_1 == _childState then
				return false
			end
		end
	end
	
	----LogTools.LogByLevel(LogLevel.log, "LuaBehav_RuntimeTask_Repeat", "CheckCanExecute", "true")
	return true
end

function LuaBehav_RuntimeTask_Repeat:ReCountTaskState(_taskState)
	----LogTools.LogByLevel(LogLevel.log, "LuaBehav_RuntimeTask_Repeat", "ReCountTaskState", "_taskState", --LogTools.GetEnumTableDesc(LuaBehav_Define_TaskState, _taskState))
	local _state = LuaBehav_Define_TaskState.Success
	local _stateList = self.childStateList
	local _hideList = self.childHideList
	for i = 1, #_stateList do
		if not _hideList[i] then
			local _childState = _stateList[i]
			if LuaBehav_Define_TaskState.Abort == _childState then
				_state = LuaBehav_Define_TaskState.Abort
				break
			end

			if LuaBehav_Define_TaskState.Running == _childState then
				_state = LuaBehav_Define_TaskState.Running
				break
			end
			--if LuaBehav_Define_TaskState.Success ~= _childState then
			--	_state = LuaBehav_Define_TaskState.Failure
			--	break
			--end
		end
	end

	----LogTools.LogByLevel(LogLevel.log, "LuaBehav_RuntimeTask_Repeat", "ReCountTaskState", "state", --LogTools.GetEnumTableDesc(LuaBehav_Define_TaskState, _state), "self.curExcuteChildCnt", self.curExcuteChildCnt)
	if _state == LuaBehav_Define_TaskState.Success then
		if self.curExcuteChildCnt < #self.childIndexList then 
			_state = LuaBehav_Define_TaskState.Running
		elseif self.repeatForever or self.timesAcc < self.timesTotal then
			self.timesAcc = self.timesAcc + 1
			self.curExcuteChildCnt = 0
			_state = LuaBehav_Define_TaskState.Running
		end
	end

	self:__SetTaskState(_state)
	return _state
end

-- 节点被打断时调用
function LuaBehav_RuntimeTask_Repeat:OnAbort()
	self:__OnAbort()
	self.timesAcc = 0
	self.curExcuteChildCnt = 1
	BEHAVIOR_ACTION.MonsStopEscapeCurTarget(self.battleId, self.netId)
	--LogTools.LogByLevel(LogLevel.log, "LuaBehav_RuntimeTask_Repeat OnAbort", "self.curExcuteChildCnt", self.curExcuteChildCnt)
end

-- 节点被打断时调用
function LuaBehav_RuntimeTask_Repeat:OnExit()
	self:__OnExit()
	--LogTools.LogByLevel(LogLevel.log, "LuaBehav_RuntimeTask_Repeat OnExit", "self.curExcuteChildCnt", self.curExcuteChildCnt)
end

return LuaBehav_RuntimeTask_Repeat
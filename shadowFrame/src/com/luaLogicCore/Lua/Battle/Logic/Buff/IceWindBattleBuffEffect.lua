---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hejincheng.
--- DateTime: 2022/7/12 22:41

require "Lib/class"
require "Battle/Logic/Buff/BattleBuffEffect"

---@class IceWindBattleBuffEffect : BattleBuffEffect
---@field buffInstanceId number 配置Id
---@field castParam table 最终目标参数
---@field customParam ElementIceWindBall 自定义参数
---@field nextTriggerTime number 下次触发时间
---@field triggerCount number 触发次数
IceWindBattleBuffEffect = class(BattleBuffEffect, 'IceWindBattleBuffEffect');

function IceWindBattleBuffEffect:ctor(_buffInstanceId)

    self.buffInstanceId = _buffInstanceId;
    self.castParam = nil;
    self.customParam = nil;
    self.nextTriggerTime = 0;
    self.triggerCount = 0;

end

---附加buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
function IceWindBattleBuffEffect:Attach(_battleObject, _battleBuff)
    self.battleBuff = _battleBuff
    ---@type ElementIceWindBall
    self.iceWindBall = self.customParam
end

---触发buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isUnitChangeLeader boolean 是否为玩家buff换人操作
function IceWindBattleBuffEffect:Trigger(_battleObject, _battleBuff, _stackNum,_isUnitChangeLeader)
    if not _isUnitChangeLeader then
        self.triggerCount = self.triggerCount + 1;
    end

    if CheckLogLevel(LogLevel.log) and LogTools.ElementBallLog then
        LogTools.LogByLevel(LogLevel.log, "冰风球", "ElectromagneticBattleBuffEffect:Trigger",
                "_battleBuff.generateStackInfo", dumpTableEx(_battleBuff.generateStackInfo))
    end
    if not _battleBuff.generateStackInfo then
        if CheckLogLevel(LogLevel.logErr) then
            LogTools.LogByLevel(LogLevel.logErr, "冰风球BUFF没有找到 generateStackInfo ！！！")
            return
        end
    end
    ---@type BattleRoom
    local _battleRoom = _battleObject:GetBattleRoom()
    ---@type BuffAndActionInstance
    local buffAndActionInstance = _battleRoom.inputDataSource:GetDict("BuffAndActionInstance", self.buffInstanceId);
    ---@type BuffAndActionTemplate
    local buffTemplate = _battleRoom.inputDataSource:GetDict("BuffAndActionTemplate", buffAndActionInstance.templateId)
    -- 生产buff的参数
    local _generateBuffParams = buffTemplate.behindParam
    -- 元素球生效的buffGroup
    local _effectBuffIds = buffTemplate.behindParamint
    -- buff附带参数
    local _generateStackInfo = _battleBuff.generateStackInfo

    -- 创建冰风球
    battleRoom.elementManager:CreateElementBall(ElementBallType.IceWindBall, _battleObject:GetParentUnit(),
            _battleBuff.castUnitId, _effectBuffIds, _generateBuffParams, _generateStackInfo)
end

---@public
---@return number buff类型Id
function IceWindBattleBuffEffect:GetId()
    return 39;
end

return IceWindBattleBuffEffect;
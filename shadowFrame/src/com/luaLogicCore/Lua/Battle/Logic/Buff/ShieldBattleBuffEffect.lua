---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/8/13 11:16

require "Lib/class"
require "Battle/Logic/Buff/BattleBuffEffect"

---@class ShieldBattleBuffEffect : BattleBuffEffect
---@field buffInstanceId number 配置Id
---@field castParam table 施法者参数
---@field customParam table 自定义参数
---@field nextTriggerTime number 下次触发时间
---@field triggerCount number 触发次数
---@field castObjId number 施法者objId
---@field castUnitId number 施法者unitId
ShieldBattleBuffEffect = class(BattleBuffEffect, 'ShieldBattleBuffEffect');

function ShieldBattleBuffEffect:ctor(_buffInstanceId)

    self.buffInstanceId = _buffInstanceId;
    self.castParam = nil;
    self.customParam = nil;
    self.nextTriggerTime = 0;
    self.triggerCount = 0;

end

---触发buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isUnitChangeLeader boolean 是否为玩家buff换人操作
function ShieldBattleBuffEffect:Trigger(_battleObject, _battleBuff, _stackNum,_isUnitChangeLeader)
    if not _isUnitChangeLeader then
        self.triggerCount = self.triggerCount + 1;
    end

    local battleRoom = _battleObject:GetBattleRoom()
    ---@type BuffAndActionInstance
    local buffAndActionInstance = battleRoom.inputDataSource:GetDict("BuffAndActionInstance",self.buffInstanceId);
    ---@type BuffAndActionTemplate
    local buffAndActionTemplate = battleRoom.inputDataSource:GetDict("BuffAndActionTemplate",buffAndActionInstance.templateId);
    local shieldId, _ = math.modf(buffAndActionTemplate.behindParam[4])
    battleRoom.behaviorProcessor:CreateShieldUnit(shieldId,_battleBuff.castUnitId,_battleBuff.castObjId);
end

---释放buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isTimeOver boolean 是否时间到
function ShieldBattleBuffEffect:Release(_battleObject, _battleBuff, _stackNum, _isTimeOver)

end

---@public
---@return number buff类型Id
function ShieldBattleBuffEffect:GetId()
    return 47;
end

---静态方法,生成施法者自定义参数
---@public
---@param _battleObjectBase BattleObjectBase 释放buff的单位
---@param _buffInstanceId number BuffAndActionInstance表id
---@param _param table 自定义参数
---@return table 施法者参数
function ShieldBattleBuffEffect:GenerateCostCustomParam(_battleObjectBase, _buffInstanceId, _param)
    return _param;
end

return ShieldBattleBuffEffect;
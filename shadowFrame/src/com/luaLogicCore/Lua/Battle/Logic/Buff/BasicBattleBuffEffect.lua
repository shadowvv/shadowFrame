---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/5/4 15:53

require "Lib/class"
require "Battle/Logic/Buff/BattleBuffEffect"

---@class BasicBattleBuffEffect : BattleBuffEffect
---@field buffInstanceId number 配置Id
---@field castParam table 施法者参数
---@field customParam table 自定义参数
---@field nextTriggerTime number 下次触发时间
---@field triggerCount number 触发次数
---@field castObjId number 施法者objId
---@field castUnitId number 施法者unitId
BasicBattleBuffEffect = class(BattleBuffEffect, 'BasicBattleBuffEffect');

function BasicBattleBuffEffect:ctor(_buffInstanceId)

    self.buffInstanceId = _buffInstanceId;
    self.castParam = nil;
    self.customParam = nil;
    self.nextTriggerTime = 0;
    self.triggerCount = 0;

    self.storeNum = 0;
end

---触发buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isUnitChangeLeader boolean 是否为玩家buff换人操作
function BasicBattleBuffEffect:Trigger(_battleObject, _battleBuff, _stackNum,_isUnitChangeLeader)
    ----LogTools.LogByLevel(LogLevel.log, "PropBattleBuffEffect", "Trigger")
    ---@type BuffAndActionInstance
    local buffAndActionInstance = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionInstance",self.buffInstanceId);
    ---@type BuffAndActionTemplate
    local buffTemplate = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionTemplate",buffAndActionInstance.templateId)
    local _behindParam = buffTemplate.behindParam
    ---@type BattleObjCom_Property
    local _propComp = _battleObject:GetComponent(BattleObjectComponentType.Property);
    local add = self:GetCastParam(_battleObject)*(1+_battleBuff.upPercent[buffTemplate.metaType]);
    if buffTemplate.behindParam[5] and buffTemplate.behindParam[5] ~= 0 and add > buffTemplate.behindParam[5] then
        add = buffTemplate.behindParam[5]*(1+_battleBuff.upPercent[buffTemplate.metaType]);
    end

    if _isUnitChangeLeader and _battleObject:GetObjectId() == self.triggerObjectId then
        return;
    end

    if _isUnitChangeLeader then
        if buffAndActionInstance.storeTrigger == 1 then
            self.storeNum = add*_stackNum*self.triggerCount;
        else
            self.storeNum = add*_stackNum;
        end
        if _behindParam[2] == 1 then --基值增加数值
            _propComp:AddBaseValueById(_behindParam[1], self.storeNum)
        else --基值增加百分比
            _propComp:AddBasePercentById(_behindParam[1], self.storeNum)
        end
        return;
    end

    self.triggerCount = self.triggerCount + 1;

    if _behindParam[2] == 1 then --基值增加数值
        _propComp:AddBaseValueById(_behindParam[1], add*_stackNum)
    else --基值增加百分比
        _propComp:AddBasePercentById(_behindParam[1], add*_stackNum)
    end

    self.storeNum = self.storeNum + add*_stackNum;
end

---释放buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
function BasicBattleBuffEffect:Release(_battleObject, _battleBuff, _stackNum)
    ----LogTools.LogByLevel(LogLevel.log, "PropBattleBuffEffect", "Release")
    ---@type BuffAndActionInstance
    local buffAndActionInstance = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionInstance",self.buffInstanceId);
    ---@type BuffAndActionTemplate
    local buffTemplate = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionTemplate",buffAndActionInstance.templateId)
    ---@type BattleObjCom_Property
    local _propComp = _battleObject:GetComponent(BattleObjectComponentType.Property);
    local _behindParam = buffTemplate.behindParam
    if _behindParam[2] == 1 then --基值增加数值
        _propComp:AddBaseValueById(_behindParam[1], self.storeNum*-1)
    else --基值增加百分比
        _propComp:AddBasePercentById(_behindParam[1], self.storeNum*-1)
    end
    self.storeNum = 0;
end

---@public
---@return number buff类型Id
function BasicBattleBuffEffect:GetId()
    return 11;
end

---生成施法者自定义参数
---@public
---@param _battleObjectBase BattleObjectBase 释放buff的单位
---@param _buffInstanceId number BuffAndActionInstance表id
---@param _param table 自定义参数
---@return table 施法者参数
function BasicBattleBuffEffect:GenerateCostCustomParam(_battleObjectBase,_buffInstanceId,_param)
    return _param;
end

return BasicBattleBuffEffect;
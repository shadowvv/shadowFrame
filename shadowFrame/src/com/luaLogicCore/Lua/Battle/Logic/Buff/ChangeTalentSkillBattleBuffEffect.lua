---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2023/3/24 17:41

require "Lib/class"
require "Battle/Logic/Buff/BattleBuffEffect"

---@class ChangeTalentSkillBattleBuffEffect : BattleBuffEffect
---@field buffInstanceId number 配置Id
---@field castParam table 施法者参数
---@field customParam table 自定义参数
---@field nextTriggerTime number 下次触发时间
---@field triggerCount number 触发次数
---@field castObjId number 施法者objId
---@field castUnitId number 施法者unitId
ChangeTalentSkillBattleBuffEffect = class(BattleBuffEffect, 'ChangeTalentSkillBattleBuffEffect');

function ChangeTalentSkillBattleBuffEffect:ctor(_buffInstanceId)

    self.buffInstanceId = _buffInstanceId;
    self.castParam = nil;
    self.customParam = nil;
    self.nextTriggerTime = 0;
    self.triggerCount = 0;

end

---触发buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isUnitChangeLeader boolean 是否为玩家buff换人操作
function ChangeTalentSkillBattleBuffEffect:Trigger(_battleObject, _battleBuff, _stackNum,_isUnitChangeLeader)
    if not _isUnitChangeLeader then
        self.triggerCount = self.triggerCount + 1;
    end

    ---@type BuffAndActionInstance
    local buffAndActionInstance = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionInstance",self.buffInstanceId);
    ---@type BuffAndActionTemplate
    local buffAndActionTemplate = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionTemplate",buffAndActionInstance.templateId);
    local talentSourceType = buffAndActionTemplate.behindParam[4];
    local upPercent = buffAndActionTemplate.behindParam[5];

    ---@type BattleObjCom_Buff
    local buffCom = _battleObject:GetComponent(BattleObjectComponentType.Buff);
    if buffCom then
        buffCom:SetTalentSkillUpPercent(talentSourceType,upPercent);
    end
    ---@type BattleObjCom_Skill
    local skillCom = _battleObject:GetComponent(BattleObjectComponentType.Skill);
    if skillCom then
        skillCom:ReTriggerTalentSkill(talentSourceType);
    end
end

---释放buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isTimeOver boolean 是否时间到
function ChangeTalentSkillBattleBuffEffect:Release(_battleObject, _battleBuff, _stackNum, _isTimeOver)
    ---@type BuffAndActionInstance
    local buffAndActionInstance = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionInstance",self.buffInstanceId);
    ---@type BuffAndActionTemplate
    local buffAndActionTemplate = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionTemplate",buffAndActionInstance.templateId);
    local talentSourceType = buffAndActionTemplate.behindParam[4];
    local upPercent = buffAndActionTemplate.behindParam[5];

    ---@type BattleObjCom_Buff
    local buffCom = _battleObject:GetComponent(BattleObjectComponentType.Buff);
    if buffCom then
        buffCom:SetTalentSkillUpPercent(talentSourceType,-1*upPercent);
    end
    ---@type BattleObjCom_Skill
    local skillCom = _battleObject:GetComponent(BattleObjectComponentType.Skill);
    if skillCom then
        skillCom:ReTriggerTalentSkill(talentSourceType);
    end
end

---@public
---@return number buff类型Id
function ChangeTalentSkillBattleBuffEffect:GetId()
    return 62;
end

---静态方法,生成施法者自定义参数
---@public
---@param _battleObjectBase BattleObjectBase 释放buff的单位
---@param _buffInstanceId number BuffAndActionInstance表id
---@param _param table 自定义参数
---@return table 施法者参数
function ChangeTalentSkillBattleBuffEffect:GenerateCostCustomParam(_battleObjectBase, _buffInstanceId, _param)
    return _param;
end

return ChangeTalentSkillBattleBuffEffect;
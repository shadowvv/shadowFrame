---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/3/25 21:13

require "Lib/class"

---@class BattleBuffEffect : table
---@field buffInstanceId number 配置Id
---@field castParam number 施法者参数
---@field customParam table 自定义参数
---@field nextTriggerTime number 下次触发时间
---@field triggerCount number 触发次数
---@field hurtBuff boolean 伤害类buff
BattleBuffEffect = class(nil, 'BattleBuffEffect');


function BattleBuffEffect:ctor(_buffInstanceId)

    self.buffInstanceId = _buffInstanceId;
    self.castParam = nil;
    self.customParam = nil;
    self.nextTriggerTime = 0;
    self.triggerCount = 0;
    self.triggerObjectId = 0;
end

---附加buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
function BattleBuffEffect:Attach(_battleObject,_battleBuff)

end

---触发buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isUnitChangeLeader boolean 是否为玩家buff换人操作
function BattleBuffEffect:Trigger(_battleObject,_battleBuff,_stackNum,_isUnitChangeLeader)
    if not _isUnitChangeLeader then
        self.triggerCount = self.triggerCount + 1;
    end
end

---释放buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isTimeOver boolean 是否时间到
function BattleBuffEffect:Release(_battleObject,_battleBuff,_stackNum,_isTimeOver)

end

---重置buff
---@public
---@param _currentTime number 当前时间
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _castParam number 施法者参数
---@param _customParam table 自定义参数
function BattleBuffEffect:Reset(_currentTime,_battleObject,_battleBuff,_stackNum,_castParam,_customParam)
    self:Release(_battleObject,_battleBuff,_stackNum);
    self.triggerCount = 0;
    self.castParam = _castParam;
    self.customParam = _customParam;
    ---@type BuffAndActionInstance
    local buffAndActionInstance = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionInstance",self.buffInstanceId);
    if #buffAndActionInstance.param > 2 then
        ---@type BattleObjCom_Buff
        local buffComp = _battleObject:GetComponent(BattleObjectComponentType.Buff)

        self.nextTriggerTime = _currentTime + buffComp:GetBuffInstanceParam(self.buffInstanceId,2,buffAndActionInstance.param[2]) * 1000;
    end
end

---@public
---@return number buff类型Id
function BattleBuffEffect:GetId()
    return 0;
end

---生成施法者自定义参数
---@public
---@param _battleObjectBase BattleObjectBase 释放buff的单位
---@param _buffInstanceId number BuffAndActionInstance表id
---@param _param table 自定义参数
---@return table 施法者参数
function BattleBuffEffect:GenerateCostCustomParam(_battleObjectBase,_buffInstanceId,_param)
    return _param;
end

---@public
---@param _battleObject BattleObjectBase
function BattleBuffEffect:GetCastParam(_battleObject)
    local param = self.castParam
    if type(self.castParam) == "table" then
        param = self.castParam[_battleObject:GetObjectId()];
    end
    return param;
end

---@public
---@param _battleObject BattleObjectBase
function BattleBuffEffect:GetCustomParam(_battleObject)
    local param = self.customParam[_battleObject:GetObjectId()];
    if not param then
        param = self.customParam;
    end
    return param;
end


return BattleBuffEffect;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2023/6/2 14:53

require "Lib/class"
require "Battle/Logic/Buff/BattleBuffEffect"

---@class ChangeElementTimeBattleBuffEffect : BattleBuffEffect
---@field buffInstanceId number 配置Id
---@field castParam table 施法者参数
---@field customParam table 自定义参数
---@field nextTriggerTime number 下次触发时间
---@field triggerCount number 触发次数
---@field castObjId number 施法者objId
---@field castUnitId number 施法者unitId
ChangeElementTimeBattleBuffEffect = class(BattleBuffEffect, 'ChangeElementTimeBattleBuffEffect');

function ChangeElementTimeBattleBuffEffect:ctor(_buffInstanceId)

    self.buffInstanceId = _buffInstanceId;
    self.castParam = nil;
    self.customParam = nil;
    self.nextTriggerTime = 0;
    self.triggerCount = 0;

end

---触发buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _isUnitChangeLeader boolean 是否为玩家buff换人操作
function ChangeElementTimeBattleBuffEffect:Trigger(_battleObject, _battleBuff, _stackNum, _isUnitChangeLeader)
    if not _isUnitChangeLeader then
        self.triggerCount = self.triggerCount + 1;
    end

    -- 修改元素主效果时间
    ---@type BattleObjCom_Element_V2
    local _comElement = _battleObject:GetComponent(BattleObjectComponentType.Element)
    if _comElement then
        ---@type BuffAndActionInstance
        local buffAndActionInstance = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionInstance", self.buffInstanceId);
        ---@type BuffAndActionTemplate
        local buffAndActionTemplate = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionTemplate", buffAndActionInstance.templateId);

        ---@type number
        local _elementId = buffAndActionTemplate.behindParam[4]
        if not _elementId or _elementId == -1 or _comElement:CheckElementEffecting(_elementId) then
            ---@type number
            local _time = buffAndActionTemplate.behindParam[5]
            local _maxCount = buffAndActionTemplate.behindParam[6]
            if _maxCount and _maxCount >= 1 and _comElement:GetElementEffectTimeUpdateCounter() >= _maxCount then
                return
            end
            _comElement:ChangeElementEffectTime(_time, _battleBuff.castUnitId, _battleBuff.castObjId)
        end
    end
end

---释放buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isTimeOver boolean 是否时间到
function ChangeElementTimeBattleBuffEffect:Release(_battleObject, _battleBuff, _stackNum, _isTimeOver)

end

---@public
---@return number buff类型Id
function ChangeElementTimeBattleBuffEffect:GetId()
    return 0;
end

---静态方法,生成施法者自定义参数
---@public
---@param _battleObjectBase BattleObjectBase 释放buff的单位
---@param _buffInstanceId number BuffAndActionInstance表id
---@param _param table 自定义参数
---@return table 施法者参数
function ChangeElementTimeBattleBuffEffect:GenerateCostCustomParam(_battleObjectBase, _buffInstanceId, _param)
    return _param;
end

return ChangeElementTimeBattleBuffEffect;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/3/28 22:30

require "Lib/class"
require "Battle/Logic/Buff/BattleBuffEffect"

---@class BarrageBattleBuffEffect : BattleBuffEffect
---@field buffInstanceId number 配置Id
---@field castParam table 最终目标参数
---@field customParam table 自定义参数
---@field nextTriggerTime number 下次触发时间
---@field triggerCount number 触发次数
BarrageBattleBuffEffect = class(BattleBuffEffect, 'BarrageBattleBuffEffect');

function BarrageBattleBuffEffect:ctor(_buffInstanceId)

    self.buffInstanceId = _buffInstanceId;
    self.castParam = nil;
    self.customParam = nil;
    self.nextTriggerTime = 0;
    self.triggerCount = 0;

end

---触发buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isUnitChangeLeader boolean 是否为玩家buff换人操作
function BarrageBattleBuffEffect:Trigger(_battleObject, _battleBuff, _stackNum,_isUnitChangeLeader)
    if not _isUnitChangeLeader then
        self.triggerCount = self.triggerCount + 1;
    end

    ---@type BuffAndActionInstance
    local buffAndActionInstance = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionInstance",self.buffInstanceId);
    ---@type BuffAndActionTemplate
    local buffAndActionTemplate = _battleObject:GetBattleRoom().inputDataSource:GetDict("BuffAndActionTemplate",buffAndActionInstance.templateId);
    local skillId = buffAndActionTemplate.behindParamint[4];
    local barrageId = buffAndActionTemplate.behindParamint[5];
    local nodeId = buffAndActionTemplate.behindParamint[6];
    local elementId = buffAndActionTemplate.behindParamint[7];
    local triggerTalent = buffAndActionTemplate.behindParamint[8] ~= 1;
    local elementBase = buffAndActionTemplate.behindParamint[9];
    if elementBase then
        ---@type Leader
        local leader = _battleObject:GetInstanceXls();
        if leader and leader.property then
            elementId = elementBase + leader.property;
        end
    end

    local _unit = _battleObject:GetParentUnit()
    local _actionMgr = _unit:GetActionManager()
    local _pos = _actionMgr:GetPosition()
    local _rot = Quaternion.ToEulerAngles(_actionMgr:GetRotation())
	
	local _battleRoom = _battleObject:GetBattleRoom()
	local _barrageCreateParam = _battleRoom.ejectorManager:PopBarrageCreateParam()
	_barrageCreateParam.castObject = _battleRoom.battleObjectManager:GetObject(_battleBuff.castObjId)
	_barrageCreateParam.heroSkillId = skillId
	_barrageCreateParam.heroSkillOnlyId = -1
    _barrageCreateParam.heroSkillLevel = 1
	_barrageCreateParam.originalHeroSkillId = _battleBuff.castSkillId
	_barrageCreateParam.skillNodeId = nodeId
	_barrageCreateParam.barrageSkillId = barrageId
	_barrageCreateParam.elementStrenthId = elementId
	_barrageCreateParam.timeStamp = TimeUtils.battleNow(_battleObject:GetBattleId())
	Vector3.Copy(_barrageCreateParam.position, _pos)
	Vector3.Copy(_barrageCreateParam.rotation, _rot)
	_barrageCreateParam.usePosAndRot = true
	_barrageCreateParam.trigEvent = triggerTalent
	
	for i = 1, _stackNum do
		_battleRoom.ejectorManager:CreateBarrageEjector(_barrageCreateParam, nil, nil)
    end
	_battleRoom.ejectorManager:PushBarrageCreateParam(_barrageCreateParam)

    for i, v in pairs(_battleObject:GetParentUnit():GetAllObjectDic()) do
        ---@type BattleObjCom_Skill
        local tempCom = v:GetComponent(BattleObjectComponentType.Skill);
        if tempCom then
            tempCom:OnCreateBarrage(skillId,barrageId,_battleBuff.castObjId);
        end
    end
end

---释放buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
function BarrageBattleBuffEffect:Release(_battleObject, _battleBuff, _stackNum)

end

---@public
---@return number buff类型Id
function BarrageBattleBuffEffect:GetId()
    return 2;
end

---生成施法者自定义参数
---@public
---@param _battleObjectBase BattleObjectBase 释放buff的单位
---@param _buffInstanceId number BuffAndActionInstance表id
---@param _param table 自定义参数
---@return table 施法者参数
function BarrageBattleBuffEffect:GenerateCostCustomParam(_battleObjectBase,_buffInstanceId,_param)
    return _param;
end

return BarrageBattleBuffEffect;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/8/4 11:31

require "Lib/class"
require "Battle/Logic/Buff/BattleBuffEffect"

---@class BreakAddNextBuffBattleBuffEffect : BattleBuffEffect
---@field buffInstanceId number 配置Id
---@field castParam table 施法者参数
---@field customParam table 自定义参数
---@field nextTriggerTime number 下次触发时间
---@field triggerCount number 触发次数
---@field castObjId number 施法者objId
---@field castUnitId number 施法者unitId
BreakAddNextBuffBattleBuffEffect = class(BattleBuffEffect, 'BreakAddNextBuffBattleBuffEffect');

function BreakAddNextBuffBattleBuffEffect:ctor(_buffInstanceId)

    self.buffInstanceId = _buffInstanceId;
    self.castParam = nil;
    self.customParam = nil;
    self.nextTriggerTime = 0;
    self.triggerCount = 0;

end

---触发buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isUnitChangeLeader boolean 是否为玩家buff换人操作
function BreakAddNextBuffBattleBuffEffect:Trigger(_battleObject, _battleBuff, _stackNum,_isUnitChangeLeader)
    if not _isUnitChangeLeader then
        self.triggerCount = self.triggerCount + 1;
    end
end

---释放buff
---@public
---@param _battleObject BattleObjectBase 战斗物体
---@param _battleBuff BattleBuff buff实体
---@param _stackNum number 堆叠数量
---@param _isTimeOver boolean 是否时间到
function BreakAddNextBuffBattleBuffEffect:Release(_battleObject, _battleBuff, _stackNum, _isTimeOver)
    if _isTimeOver == false then
        local inputDataSource= _battleObject:GetBattleRoom().inputDataSource
        ---@type BuffAndActionInstance
        local buffAndActionInstance = inputDataSource:GetDict("BuffAndActionInstance",self.buffInstanceId);
        ---@type BuffAndActionTemplate
        local buffAndActionTemplate = inputDataSource:GetDict("BuffAndActionTemplate",buffAndActionInstance.templateId);

        ---@type BattleUnitBase
        local castUnit = _battleObject:GetBattleRoom().battleUnitManager:GetUnit(_battleBuff.castUnitId,true);
        if castUnit then

            local buffId,_ = math.modf(buffAndActionTemplate.behindParam[4]);
            local targetType = math.modf(buffAndActionTemplate.behindParam[5]);
            local buffType= math.modf(buffAndActionTemplate.behindParam[6]);
            local stackNumType = 0;
            if buffAndActionTemplate.behindParam[5] then
                stackNumType = math.modf(buffAndActionTemplate.behindParam[7]);
            end
            local stackNum = 1;
            if stackNumType == 1 then
                stackNum = _battleBuff.stackNum;
            end
            ---@type BattleBuffCastTemplate
            local buffTemplate = nil;
            ---@type BattleUnitBase
            local targetUnit = nil;
            local buffCom = nil;
            if targetType == 2 then
                targetUnit = _battleObject:GetParentUnit()
            else
                targetUnit = castUnit;
            end
            if buffType == 2 then
                buffTemplate = BattleBuffService:GenerateUnitCastBuffTemplate(buffId,castUnit,_battleBuff.castObjId,_battleBuff.castSkillId, nil,_battleBuff.upPercent,stackNum);
                buffCom = targetUnit:GetComponent(BattleUnitComponentType.Buff);
            else
                ---@type BattleObjectBase
                local castObject = castUnit:GetHeroObject(_battleBuff.castObjId);
                if castObject then
                    buffTemplate =  BattleBuffService:GenerateCastBuffTemplate(buffId,castObject,_battleBuff.castSkillId, nil,_battleBuff.upPercent,stackNum)
                    buffCom = targetUnit:GetCurrentHeroObject():GetComponent(BattleObjectComponentType.Buff);
                end
            end
            if buffCom and buffTemplate then
                buffCom:AddBattleBuff(buffTemplate);
            end
        end
    end
end

---@public
---@return number buff类型Id
function BreakAddNextBuffBattleBuffEffect:GetId()
    return 43;
end

---静态方法,生成施法者自定义参数
---@public
---@param _battleObjectBase BattleObjectBase 释放buff的单位
---@param _buffInstanceId number BuffAndActionInstance表id
---@param _param table 自定义参数
---@return table 施法者参数
function BreakAddNextBuffBattleBuffEffect:GenerateCostCustomParam(_battleObjectBase, _buffInstanceId, _param)
    return _param;
end

return BreakAddNextBuffBattleBuffEffect;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/11/8 17:44

require "Lib/class"
require "Battle/Logic/Skill/SkillBaseNode"

---@class SkillConsumePropNode : SkillBaseNode
---@field nodeId number 节点id
---@field nextNodes SkillNodeExitData[] 子节点
SkillConsumePropNode = class(SkillBaseNode, 'SkillConsumePropNode');

---@param _nodeId number 节点id
---@param _once boolean 只执行一次
---@param _nextNodes SkillNodeExitData[] 子节点
---@param _specialExit SkillNodeExitData[] 特殊出口
function SkillConsumePropNode:ctor(_nodeId, _once, _nextNodes, _specialExit,_propId,_consume)
    self.nodeId = _nodeId;
    self.once = _once;
    self.nextNodes = _nextNodes;
    self.specialExit = _specialExit;
    self.propId = _propId;
    self.consume = tonumber(_consume);
end

---执行技能节点
---@param _actionStateManager ActionStateManage 行为管理器
---@param _dt number 更新时间
---@param _netId number 单位id
---@param _skillModel SkillModel 技能配置
---@return boolean,table 是否执行结束,执行行为输出数据
function SkillConsumePropNode:DoAction(_actionStateManager, _dt, _netId, _skillModel)
    local _currentObj = _actionStateManager:GetUnit():GetCurrentHeroObject()
    if not _currentObj then return end

    local value = 0;
    local _propName = ProtoEnumTool.GetPropertyKey(self.propId)
    ---@type BattleUnitCom_UnitProp
    local _unitPropCom = _actionStateManager:GetUnit():GetComponent(BattleUnitComponentType.UnitProp)
    if _unitPropCom and _unitPropCom:CheckUnitProp(_propName) then
        value = _unitPropCom:GetPropByName(_propName);
    else
        ---@type BattleObjCom_Property
        local componentProperty = _currentObj:GetComponent(BattleObjectComponentType.Property);
        value = componentProperty:GetPropertyById(self.propId);
    end

    if value < self.consume then
        _actionStateManager:ExitSkill(true);
        _actionStateManager:Idle();
        return true,nil;
    end

    if _unitPropCom and _unitPropCom:CheckUnitProp(_propName) then
        _unitPropCom:DecreasePropByName(_propName,self.consume);
    else
        ---@type BattleObjCom_Property
        local componentProperty = _currentObj:GetComponent(BattleObjectComponentType.Property);
        componentProperty:ChangeConsumeProp(self.propId,self.consume);
    end
    return true, nil;
end

---返回节点类型
---@public
---@return number 节点类型
function SkillConsumePropNode:GetType()
    return 51;
end

return SkillConsumePropNode;
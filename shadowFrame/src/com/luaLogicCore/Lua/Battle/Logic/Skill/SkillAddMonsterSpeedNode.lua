---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guokun
--- DateTime: 2023/1/12 17:58

require "Lib/class"
require "Battle/Logic/Skill/SkillBaseNode"

---@class SkillAddMonsterSpeedNode : SkillBaseNode
---@field nodeId number 节点id
---@field nextNodes SkillNodeExitData[] 子节点
SkillAddMonsterSpeedNode = class(SkillBaseNode, 'SkillAddMonsterSpeedNode');

---@param _nodeId number 节点id
---@param _once boolean 只执行一次
---@param _nextNodes SkillNodeExitData[] 子节点
---@param _specialExit SkillNodeExitData[] 特殊出口
---@param _param table 节点信息
function SkillAddMonsterSpeedNode:ctor(_nodeId, _once, _nextNodes, _specialExit,_direction,_speed,_time,_distanceProtection)
    self.nodeId = _nodeId;
    self.once = _once;
    self.nextNodes = _nextNodes;
    self.specialExit = _specialExit;
    self.direction = _direction;
    self.speed = _speed;
    self.time = _time;
    self.distanceProtection = _distanceProtection;
    self.runTime = 0
end

---执行技能节点
---@param _actionStateManager ActionStateManage 行为管理器
---@param _dt number 更新时间
---@param _netId number 单位id
---@param _skillModel SkillModel 技能配置
---@return boolean,table 是否执行结束,执行行为输出数据
function SkillAddMonsterSpeedNode:DoAction(_actionStateManager, _dt, _netId, _skillModel)
    if self.runTime >= self.time then
        self.runTime = 0
        return true,nil
    end
    self.runTime = self.runTime + _dt

    local _battleRoom = _actionStateManager.battleRoom
    local _unitSelf = _actionStateManager:GetUnit()
    
    -- 距离保护
    ---@type BattleUnitCom_Behav
    local _behavCom = _unitSelf:GetComponent(BattleUnitComponentType.Behav)
    local _disToTarget = _battleRoom.transUtil:GetDisBetweenUnits(_unitSelf:GetNetId(), _behavCom:GetTarget(), BattleUnitDisRecordType.CollisionDis)
    if _disToTarget and _disToTarget <= self.distanceProtection then
        return false,nil
    end

    local _skillVelocity = _battleRoom.vector3Pool:Pop()
    Vector3.MulQuat(self.direction, _actionStateManager:GetRotation(), _skillVelocity)
    Vector3.SetNormalize(_skillVelocity)
    Vector3.MulNumber(_skillVelocity, self.speed, _skillVelocity)
    
    ---@type MoveActionState
    local _moveActionState = _actionStateManager:GetCurrentMoveState()
    if not _moveActionState then
        ---@type MoveActionState
        _moveActionState = MoveActionState.New(_actionStateManager.battleId, _unitSelf:GetStateParamId(), _unitSelf:GetUnitType())
        _moveActionState:Init(Vector3.zero_local())
    end
    
    _moveActionState:DoAction(_actionStateManager, _dt, _netId, _unitSelf:__GetCurrentHeroObjectId(), _skillVelocity)
    _battleRoom.vector3Pool:Push(_skillVelocity)
    return false,nil
end

---退出节点
---@public
---@param _actionStateManager ActionStateManage 行为管理器
function SkillAddMonsterSpeedNode:ExitNode(_actionStateManager)
    _actionStateManager:Exit(_actionStateManager:GetCurrentMoveState(), false)
    _actionStateManager:Idle()
end

---返回节点类型
---@public
---@return number 节点类型
function SkillAddMonsterSpeedNode:GetType()
    return 64;
end

return SkillAddMonsterSpeedNode;
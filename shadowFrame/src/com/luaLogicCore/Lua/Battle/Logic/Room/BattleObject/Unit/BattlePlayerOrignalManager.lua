---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/02/10 19:07
--- Describe:
---

require "Battle/Logic/Room/BattleObject/Unit/BattlePlayerOrignalData"

---@class BattlePlayerOrignalManager : table
BattlePlayerOrignalManager = class(nil, "BattlePlayerOrignalManager")
function BattlePlayerOrignalManager:ctor(_data) end

-- 
function BattlePlayerOrignalManager:Init()
	---@type BattlePlayerOrignalData[]
	self.__dic = {}
	---@type BattlePlayerOrignalData[]
	self.__list = {}
	---战斗玩家数量
	---@private
	self.__playerNum = 1
end

---@public
---@param _battlePlayerInfoList table msg.BattlePlayerInfo[]
function BattlePlayerOrignalManager:InitOrignalPlayerInfo(_battlePlayerInfoList)
	--LogTools.LogByLevel(LogLevel.log, "BattleUnitManager", "BattlePlayerOrignalManager", "InitOrignalPlayerInfo", "_battlePlayerInfoList", #_battlePlayerInfoList)
	for i = 1, #_battlePlayerInfoList do
		local _battlePlayerInfo = _battlePlayerInfoList[i]
		local _playerId = _battlePlayerInfo.playerId
		--LogTools.LogByLevel(LogLevel.log, "BattleUnitManager", "BattlePlayerOrignalManager", "InitOrignalPlayerInfo", "_playerId", _playerId)
		---@type BattlePlayerOrignalData
		local _playerOrignalData = BattlePlayerOrignalData.New()
		_playerOrignalData:Init(_playerId, _battlePlayerInfo, BattleUnitOnlineState.OffLine, i)
		
		self.__dic[_playerId] = _playerOrignalData
		table.insert(self.__list, _playerOrignalData)
	end
	self.__playerNum = #_battlePlayerInfoList
end

---@public
function BattlePlayerOrignalManager:GetBattlePlayerNum()
	return self.__playerNum
end

---@public
---@return BattlePlayerOrignalData[]
function BattlePlayerOrignalManager:GetAllPlayer()
	return self.__list
end

---@public
---@return BattlePlayerOrignalData
function BattlePlayerOrignalManager:GetPlayer(_playerId)
	if not _playerId then return nil end
	return self.__dic[_playerId]
end

---@public
---@param _onlineState BattleUnitOnlineState
function BattlePlayerOrignalManager:CheckPlayerOnlineState(_playerId, _onlineState)
	local _player = self:GetPlayer(_playerId)
	if not _player then return false end
	return _player:CheckOnlineState(_onlineState)
end

---@public
---@param _onlineState BattleUnitOnlineState
function BattlePlayerOrignalManager:SetPlayerOnlineState(_playerId, _onlineState)
	local _player = self:GetPlayer(_playerId)
	if not _player then return end
	return _player:SetOnlineState(_onlineState)
end

---@public
function BattlePlayerOrignalManager:Clear()
	for i, v in pairs(self.__dic) do
		v:Clear()
	end
	self.__dic = nil
	self.__list = nil
	self.__playerNum = nil
end

return BattlePlayerOrignalManager
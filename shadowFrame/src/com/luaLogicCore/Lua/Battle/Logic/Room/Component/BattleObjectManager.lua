---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/01/26 16:27
--- Describe: object层管理器
---

require "Battle/Logic/Room/BattleObject/Object/BattleObjectBase"
require "Battle/Logic/Room/BattleObject/Object/BattleObject_LeaderObject"
require "Battle/Logic/Room/BattleObject/Object/BattleObject_MonsterObject"
require "Battle/Logic/Room/BattleObject/Object/BattleObject_AreaTrigger"
require "Battle/Logic/Room/BattleObject/Object/BattleObject_SummonedMons"
require "Battle/Logic/Room/BattleObject/Object/BattleObject_SceneObj"
require "Battle/Logic/Room/BattleObject/Object/BattleObject_TargetPoint"
require "Battle/Logic/Room/BattleObject/Object/BattleObject_Shield"

require "Battle/Logic/Room/BattleObject/Object/ObjectComponents/BattlePlayerWeapon"
require "Battle/Logic/Room/BattleObject/Object/ObjectComponents/BattlePlayerTalentSkill"
require "Battle/Logic/Room/BattleObject/Object/ObjectComponents/BattlePlayerActiveSkill"
require "Battle/Logic/Room/BattleObject/Object/ObjectComponents/BattlePlayerRevelation"

require "Battle/Logic/Room/BattleObject/Object/ObjectComponents/BattleObjectComponentCreator"

---@class BattleObjectType : table
BattleObjectType = {
	LeaderHero = 1,    --玩家英雄类obj
	MonsterHero = 2,   --怪物类obj
	AreaTrigger = 3,   --战场区域obj
	SummonedMons = 4,  --召唤物obj
	SceneObj = 5,      --场景物件
	TargetPoint = 6,   --目标点
	Shield = 7,        --护罩
}

---object的级别（不是等级）
---暂时先定两个，后面根据需求扩展吧
---@class BattleObjectLevelEnum : table
BattleObjectLevelEnum = {
	MainHero = 1,     --主体英雄级别
	Attach = 2,       --附件级别
}

---@class BattleObjectManager : table
BattleObjectManager = class(nil, "BattleObjectManager")
function BattleObjectManager:ctor(_battleId)
	self.battleId = _battleId
end
function BattleObjectManager:OnUpdate(_deltaTime) end

---@public
---@param _battleRoom BattleRoom
function BattleObjectManager:Init(_battleRoom)
	---@private
	self.__battleRoom = _battleRoom
	---@private
	self.__allObjDic = {}
	---@private
	self.__objectIdCnt = 0
	---@private
	self.__objComCreator = BattleObjectComponentCreator.New()
	self.__objComCreator:Init()
end

---@public
function BattleObjectManager:CreateObjectId()
	local _objectId = self.__objectIdCnt + 1
	self.__objectIdCnt = _objectId
	return _objectId
end

---@public
---@param _objectType BattleObjectType
---@param _info table
---@return BattleObjectBase
function BattleObjectManager:CreateObject(_objectType, _unit, _info, _objectId, _teamPos)
	----LogTools.LogByLevel("BattleObjectManager", "CreateObject", "_objectType", --LogTools.GetEnumTableDesc(BattleObjectType, _objectType))
	---@type BattleObjectBase
	local _obj = nil
	if _objectType == BattleObjectType.LeaderHero then
		_obj = BattleObject_LeaderObject.New(_objectType, BattleObjectLevelEnum.MainHero)
		_obj:Init(self.battleId, _objectId, _unit, _info, _teamPos)
	elseif _objectType == BattleObjectType.MonsterHero then
		_obj = BattleObject_MonsterObject.New(_objectType, BattleObjectLevelEnum.MainHero)
		_obj:Init(self.battleId, _objectId, _unit, _info, _teamPos)
	elseif _objectType == BattleObjectType.AreaTrigger then
		_obj = BattleObject_AreaTrigger.New(_objectType, BattleObjectLevelEnum.MainHero)
		_obj:Init(self.battleId, _objectId, _unit, _info)
	elseif _objectType == BattleObjectType.SummonedMons then
		_obj = BattleObject_SummonedMons.New(_objectType, BattleObjectLevelEnum.MainHero)
		_obj:Init(self.battleId, _objectId, _unit, _info)
	elseif _objectType == BattleObjectType.SceneObj then
		_obj = BattleObject_SceneObj.New(_objectType, BattleObjectLevelEnum.MainHero)
		_obj:Init(self.battleId, _objectId, _unit, _info)
	elseif _objectType == BattleObjectType.TargetPoint then
		_obj = BattleObject_TargetPoint.New(_objectType, BattleObjectLevelEnum.MainHero)
		_obj:Init(self.battleId, _objectId, _unit, _info)
	elseif _objectType == BattleObjectType.Shield then
		_obj = BattleObject_Shield.New(_objectType, BattleObjectLevelEnum.MainHero)
		_obj:Init(self.battleId, _objectId, _unit, _info)
	end

	self.__allObjDic[_obj:GetObjectId()] = _obj
	return _obj
end

---@public
---@return BattleObjectBase
function BattleObjectManager:GetObject(_objectId)
	return self.__allObjDic[_objectId]
end

---@public
function BattleObjectManager:RemoveObject(_objectId)
	self.__allObjDic[_objectId] = nil
end

---@public
---@return BattleObjectComponentCreator
function BattleObjectManager:GetObjectComponentCreator()
	return self.__objComCreator
end

---@public
---@return BattleRoom
function BattleObjectManager:GetBattleRoom()
	return self.__battleRoom
end

---@public
function BattleObjectManager:Clear()
	self.__allObjDic = nil
	if self.__objComManager ~= nil then
		self.__objComManager:Clear()
		self.__objComManager = nil
	end
end

------------------------------------------------------------------------------------------------------------------------
-- 生成武器
---@param _weaponInfo table
---@return BattlePlayerWeapon
function BattleObjectManager.CreateWeapon(_weaponInfo)
    local weapon = BattlePlayerWeapon.New()
    weapon:SetId(_weaponInfo.id)
    weapon:SetLeaderId(_weaponInfo.leaderId)
    weapon:SetExp(_weaponInfo.exp)
    weapon:SetLevel(_weaponInfo.level)
    weapon:SetBreachLevel(_weaponInfo.breachLevel)
    weapon:SetOnlyId(_weaponInfo.onlyId)
    weapon:SetGetTime(_weaponInfo.getTime)
    weapon:SetDefLeaderId(_weaponInfo.defLeaderId)
    weapon:SetSkinId(_weaponInfo.skinId)
    weapon:SetLockState(_weaponInfo.lockState)
    weapon:SetRefineLevel(_weaponInfo.refineLevel)
	return weapon;
end

-- 生成启示
---@param _revelationInfo table
---@return BattlePlayerRevelation
function BattleObjectManager.CreateRevelation(_revelationInfo)
    local revelation = BattlePlayerRevelation.New()
    revelation:SetId(_revelationInfo.id)
    revelation:SetLeaderId(_revelationInfo.leaderId)
    revelation:SetExp(_revelationInfo.exp)
    revelation:SetLevel(_revelationInfo.level)
    revelation:SetBreachLevel(_revelationInfo.breachLevel)
    revelation:SetOnlyId(_revelationInfo.onlyId)
    revelation:SetLockStatus(_revelationInfo.lockStatus)
    revelation:SetGetTime(_revelationInfo.getTime)
	return revelation
end

------------------------------------------------------------------------------------------------------------------------
return BattleObjectManager
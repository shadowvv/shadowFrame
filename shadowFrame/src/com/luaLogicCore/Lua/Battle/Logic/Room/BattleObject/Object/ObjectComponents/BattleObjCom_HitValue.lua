---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/3/30 23:24

require "Lib/class"

---@class BattleObjCom_HitValue : BattleObjectComponentBase
BattleObjCom_HitValue = class(BattleObjectComponentBase, 'BattleObjCom_HitValue');

function BattleObjCom_HitValue:ctor()
    self:__ctor(BattleObjectComponentType.HitValue);
end

---@public
---@param _battleObject BattleObjectBase
function BattleObjCom_HitValue:Init(_battleObject)
    self:__Init(_battleObject)
    ---@type StateParameter
    local stateParameter = self.battleRoom.inputDataSource:GetDict("StateParameter", _battleObject:GetStateParamId());
    self.hitValue = stateParameter.stiffValue;
    self.stiffCoolDown = 0;
end

function BattleObjCom_HitValue:__OnUpdate(_deltaTime)
    self:UpdateHitValue(_deltaTime);
end

---@type function
---@param _dt number tick时间
---@return void
function BattleObjCom_HitValue:UpdateHitValue(_dt)
    if self.stiffCoolDown > 0 then
        self.stiffCoolDown = self.stiffCoolDown - _dt;
        if self.stiffCoolDown < 0 then
            self.stiffCoolDown = 0
        end
    end
    ---@type BattleObjCom_Config
    local config = self:GetObject():GetComponent(BattleObjectComponentType.Config);
    ---@type StateParameter
    local stateParameter = self.battleRoom.inputDataSource:GetDict("StateParameter", self:GetObject():GetStateParamId());

    if self.hitValue < stateParameter.stiffValue then
        self.hitValue = self.hitValue + stateParameter.stiffCommonRecovery;
        if self.hitValue > stateParameter.stiffValue then
            self.hitValue = stateParameter.stiffValue;
        end
    end
end

--- 计算被击值
---@public
---@param _hitValue number 被击值
---@param _skillId number 技能Id
function BattleObjCom_HitValue:CountHitValue(_hitValue,_skillId)
    self.hitValue = self.hitValue - _hitValue;
    if self.hitValue <= 0 then

        ---@type BattleObjCom_Config
        local config = self:GetObject():GetComponent(BattleObjectComponentType.Config);
        ---@type StateParameter
        local stateParameter = self.battleRoom.inputDataSource:GetDict("StateParameter", self:GetObject():GetStateParamId());
        ---@type SkillModel
        local skillModel = self.battleRoom.inputDataSource:GetSkillModel(_skillId);

        if self:GetObject():GetObjectId() == self:GetObject():GetParentUnit():GetCurrentHeroObjectId() then
            if not skillModel.knockDown then
                self:GetObject():GetParentUnit():GetActionManager():EnterBeHit();
            else
                self:GetObject():GetParentUnit():GetActionManager():EnterBeatDown();
            end
        end
        self.hitValue = 0;
        self.hitValue = self.hitValue + stateParameter.stiffTriggerRecovery;
        self.stiffCoolDown = stateParameter.stiffTriggerCoolDown;
    end
end

return BattleObjCom_HitValue;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2023/06/25 12:17
--- Describe:
---

---@class BehavState_FixHeight : BattleUnit_PathFindCaller
BehavState_FixHeight = class(BattleUnit_PathFindCaller, "BehavState_FixHeight")

---@public
---@param _behavCom BattleUnitCom_Behav
function BehavState_FixHeight:Init(_behavCom)
	---@private
	---@type BattleUnitCom_Behav
	self.__behavCom = _behavCom
	self:__Init(_behavCom:GetUnit(), 500, 15)
	self:__InitStateUseInfos()
	self.__running = false
end

---初始化一些当前behavState需要使用的专属信息
---@private
function BehavState_FixHeight:__InitStateUseInfos()
	---@private
	---@type number
	self.__netIdSelf = self.__unitSelf:GetNetId()
	
	---@type BattleObjCom_Config
	local _configCom = self.__unitSelf:GetCurrentHeroObject():GetComponent(BattleObjectComponentType.Config)
	---@type MonsterInstance
	local _monsterInstance = _configCom:GetDataInstanceXls()
	local _moveSpd = _monsterInstance.moveSpd or 0
	---@private
	---@type Vector3	
	self.__velocityUp = Vector3.zero_local()
	Vector3.MulNumber(Vector3.up_global(), _moveSpd, self.__velocityUp)
	---@private
	---@type Vector3
	self.__velocityDown = Vector3.zero_local()
	Vector3.MulNumber(Vector3.down_global(), _moveSpd, self.__velocityDown)
	---@private
	---@type number
	self.__moveSpd = _moveSpd
	---@private
	---@type number 检查的竖直角度，后面会改成从表里读	
	self.__checkVAngle = 30
	
	---@private
	---@type Vector3
	self.__velocityCache = Vector3.zero_local()
	---@private
	---@type Vector3
	self.__velocityCache2 = Vector3.zero_local()
end

------------------------------------------------------------------------------------------------------------------------

---开启行为
---@public
function BehavState_FixHeight:Start()
	--LogTools.LogByLevel(LogLevel.log, "behavState", "BehavState_FixHeight:Start", "Start", "netId", self.__unitSelf:GetNetId())
	if self.__running then return end
	self.__running = true
	
	self.__lastUseDir = nil
	self.__comPosSet:Open(true)
	self:CallPathFind()
end

---结束行为
---@public
function BehavState_FixHeight:Stop()
	--LogTools.LogByLevel(LogLevel.log, "behavState", "BehavState_FixHeight:Stop", "Start", "netId", self.__unitSelf:GetNetId())
	self:ReleaseHitBlockParams()
	if not self.__running then return end
	self.__running = false
	
	self.__comPosSet:Open(false)
	self.__comPosSet:StopPosSet()

	---结束时给表现层清一下当前速度
	local battleUnitMoveOutput = {}
	battleUnitMoveOutput.v = Vector3.zero_global()
	battleUnitMoveOutput.position = self.__actionManagerSelf:GetPosition()
	battleUnitMoveOutput.rotation = self.__actionManagerSelf:GetRotation()
	battleUnitMoveOutput.accelerate = Vector3.zero_global()
	battleUnitMoveOutput.moveParam = Vector3.zero_global()
	battleUnitMoveOutput.cameraParam = Vector3.zero_global()
	battleUnitMoveOutput.type = 1

	local battleUnitMoveData = {}
	battleUnitMoveData.netId = self.__netIdSelf
	battleUnitMoveData.objId = self.__unitSelf:GetCurrentHeroObjectId()
	battleUnitMoveData.moveInfo = battleUnitMoveOutput
	
	--if self.__netIdSelf == 2 then
	--	LogTools.LogByLevel(LogLevel.logErr, "BehavState_FixHeight stop")
	--end

	self:GetBattleRoom().outputDataSource:AddBattleUnitMoveData(battleUnitMoveData)
end

------------------------------------------------------------------------------------------------------------------------
function BehavState_FixHeight:CallPathFind()
	--LogTools.LogByLevel(LogLevel.log, "CheckLuaBehav", "BehavState_FixHeight", "CallPathFind")
	self:__ResetReFindTimeCount()
	self.__comPosSet:StartPosSet(self)
end

---@public
function BehavState_FixHeight:DirectMove(_deltaTime)

	if not self:CheckHitBlockType(BattleUnitAiHitBlockType.None) then
		self:__postFixHeightEnd()
		return
	end

	local _actionManager = self.__actionManagerSelf
	if not _actionManager or _actionManager.currentStates[TrappedActionState:GetId()] then
		self:__postFixHeightEnd()
		return
	end

	local _unitList = self:GetBattleRoom().battleUnitManager:GetUnitListByUnitTypeUnsafe(BattleUnitType.Player)
	local _targetUnit = _unitList[1]
	if not _targetUnit then
		self:__postFixHeightEnd()
		return
	end

	local _targetNetId = _targetUnit:GetNetId()
	local _angles = self:GetBattleRoom().transUtil:GetAngleBetweenUnits(self.__netIdSelf, _targetNetId, true)
	--LogTools.LogByLevel(LogLevel.log, "CheckLuaBehav", "BehavState_FixHeight DirectMove", "_angles[2]", _angles[2], "self.__checkVAngle", self.__checkVAngle)
	if _angles[2] < self.__checkVAngle then
		self:__postFixHeightEnd()
		return
	end

	local _targetH = _targetUnit:GetActionManager():GetPosition().y
	local _selfH = _actionManager:GetPosition().y
	local _useVelocity = _selfH > _targetH and self.__velocityDown or self.__velocityUp
	if self.__lastUseDir and _useVelocity ~= self.__lastUseDir then
		self.__lastUseDir = _useVelocity
		--LogTools.LogByLevel(LogLevel.logErr, "CheckLuaBehav", "BehavState_FixHeight 方向反复", "_targetH", _targetH, "_selfH", _selfH, "_useVelocity", _useVelocity, "self.__checkVAngle", self.__checkVAngle, "_angles[2]", _angles[2])
		self:__postFixHeightEnd()
		return
	elseif not self.__lastUseDir then
		self.__lastUseDir = _useVelocity
	end

	--LogTools.LogByLevel(LogLevel.log, "CheckLuaBehav", "BehavState_FixHeight", "_targetH", _targetH, "_selfH", _selfH, "_useVelocity", _useVelocity, "self.__checkVAngle", self.__checkVAngle, "_angles[2]", _angles[2])
	local _v3Receiver = self.__velocityCache
	_actionManager:SetVelocity(_useVelocity)
	Vector3.MulNumber(_useVelocity, _deltaTime, _v3Receiver)
	Vector3.Add(_v3Receiver, _actionManager:GetPosition(), _v3Receiver)
	_actionManager:SetPosition(_v3Receiver)

	local battleUnitMoveOutput = {}
	battleUnitMoveOutput.v = _useVelocity
	battleUnitMoveOutput.position = _actionManager:GetPosition()
	battleUnitMoveOutput.rotation = _actionManager:GetRotation()
	battleUnitMoveOutput.accelerate = Vector3.zero_global()
	battleUnitMoveOutput.moveParam = Vector3.zero_global()
	battleUnitMoveOutput.cameraParam = Vector3.zero_global()
	battleUnitMoveOutput.type = 99

	local battleUnitMoveData = {}
	battleUnitMoveData.netId = self.__netIdSelf
	battleUnitMoveData.objId = self.__unitSelf:GetCurrentHeroObjectId()
	battleUnitMoveData.moveInfo = battleUnitMoveOutput

	--if self.__netIdSelf == 2 then
	--	LogTools.LogByLevel(LogLevel.log, "frame", LOOPER.GetFrameId(), "BehavState_FixHeight DirectMove normal", "battleUnitMoveOutput", dumpTableEx(battleUnitMoveOutput))
	--end
	self:GetBattleRoom().outputDataSource:AddBattleUnitMoveData(battleUnitMoveData)
	self:ReleaseHitBlockParams()
end

---平移顶住目标不检查攻击角度
---@public
function BehavState_FixHeight:RotateSkipAngleCheck()
	return true
end

---@private
function BehavState_FixHeight:__postFixHeightEnd()
	if not self.__behavCom:GetBattleRoom().behaviorProcessor:CheckMonsAIHost() then return end
	--self.__behavCom:SetTargetNetId(nil)
	--LogTools.LogByLevel(LogLevel.log, "rotateFix", "behavState", "BehavState_FixHeight:__postFixHeightEnd", "netId", self.__unitSelf:GetNetId())
	self.__behavCom:GetBattleRoom().behaviorManager:PostTaskListenEvent(self.__behavCom:GetTreeIndex(), LuaBehav_Define_TaskListenEnum.MonsFixHeightEnd)
end
------------------------------------------------------------------------------------------------------------------------
---@public
---@return boolean
function BehavState_FixHeight:CheckRunning()
	return self.__running
end

---@public
function BehavState_FixHeight:Clear()
	self:Stop()
	self.__netIdSelf = nil
	self.__velocityUp = nil
	self.__velocityDown = nil
	self.__moveSpd = nil
	self.__checkVAngle = nil
	self.__velocityCache = nil
	self.__velocityCache2 = nil
	self.__running = nil
	self:__Clear()
end

return BehavState_FixHeight
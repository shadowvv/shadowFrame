---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/08/11 12:00
--- Describe: 范围监听
---

---@class BattleObjCom_BoundaryListener : BattleObjectComponentBase
BattleObjCom_BoundaryListener = class(BattleObjectComponentBase, "BattleObjCom_BoundaryListener")
function BattleObjCom_BoundaryListener:ctor(_data)
	self:__ctor(BattleObjectComponentType.BoundaryListener)
end

---@public
---@param _battleObject BattleObjectBase
---@param _battleCreateUnitParam BattleCreateUnitParam
function BattleObjCom_BoundaryListener:Init(_battleObject, _battleCreateUnitParam)
	self:__Init(_battleObject)

	---@private
	---@type number[]
	self.__innerKeyUnitDic ={}
	---@private
	---@type number[]
	self.__innerLevelUnitDic = {}
	---@private
	---@type number[]
	self.__innerPlayerUnitDic = {}
	---@private
	---@type number[]
	self.__outUnitDic = {}
	---@private
	---@type number[]
	self.__outKeyUnitDic = {}
	
	---@private
	---@type number
	self.__innerKeyUnitCnt = 0
	---@private
	---@type number
	self.__innerLevelUnitCnt = 0
	---@private
	---@type number
	self.__innerPlayerUnitCnt = 0
	---@private
	---@type number
	self.__outKeyUnitCnt = 0
	---@private
	---@type number
	self.__outLevelUnitCnt = 0
	---@private
	---@type number
	self.__outPlayerUnitCnt = 0
	
	self:__InitOutDic()
end

---@public
function BattleObjCom_BoundaryListener:Clear()
	self.__innerLevelUnitDic = nil
	self.__innerPlayerUnitDic = nil
	self.__innerKeyUnitDic = nil
	self.__outUnitDic = nil
	self.__outKeyUnitDic = nil
	self.__innerLevelUnitCnt = nil
	self.__innerPlayerUnitCnt = nil
	self.__innerKeyUnitCnt = nil
	self.__outLevelUnitCnt = nil
	self.__outPlayerUnitCnt = nil
	self.__outKeyUnitCnt = nil
	
	self:__Clear()
end

---创建时，默认所有此时已存在的单位都在监听区域外，在监听范围内的会通过进入消息更新进来
---@private
function BattleObjCom_BoundaryListener:__InitOutDic()
	local _unitList = self.battleRoom.battleUnitManager:GetUnitListByUnitType(BattleUnitType.Player)
	local _cnt = 0
	for _, _unit in pairs(_unitList) do
		self.__outUnitDic[_unit:GetNetId()] = 1
		_cnt = _cnt + 1
	end
	self.__outPlayerUnitCnt = _cnt

	_unitList = self.battleRoom.battleUnitManager:GetUnitListByUnitType(BattleUnitType.Monster)
	_cnt = 0
	for _, _unit in pairs(_unitList) do
		self.__outUnitDic[_unit:GetNetId()] = 1
		_cnt = _cnt + 1
		local _levelUnit = self.battleRoom.battleLevelManager.levelUnitManager:GetLevelUnit(_unit:GetLevelUnitId())
		if _levelUnit and _levelUnit.keyUnit then
			self.__outKeyUnitCnt = self.__outKeyUnitCnt + 1
			self.__outKeyUnitDic[_unit:GetNetId()] = _unit:GetNetId()
		end
	end
	self.__outLevelUnitCnt = _cnt
end

---有单位进入
---@public
function BattleObjCom_BoundaryListener:OnUnitEnter(_netIdList)
	if CheckLogLevel(LogLevel.log) then
		LogTools.LogByLevel(LogLevel.log, "BattleObjCom_BoundaryListener:OnUnitEnter", "boundaryListenerNetId", self:GetObject():GetParentUnit():GetNetId(), "_netIdList", dumpTableEx(_netIdList))
	end
	for i = 1, #_netIdList do
		self:__OnUnitEnter(_netIdList[i])
	end
	---@type BattleObjCom_BoundaryTrigger
	local _boundaryTrigger = self:GetObject():GetComponent(BattleObjectComponentType.BoundaryTrigger)
	if _boundaryTrigger then
		_boundaryTrigger:OnUnitEnter(_netIdList)
	end
end

---@private
function BattleObjCom_BoundaryListener:__OnUnitEnter(_netId)
	local _unit = self.battleRoom.battleUnitManager:GetUnit(_netId)
	if not _unit then return end
	if _unit:CheckUnitType(BattleUnitType.Monster) then
		local _levelUnitId = _unit:GetLevelUnitId()
		if self.__innerLevelUnitDic[_levelUnitId] then return end
		self.__innerLevelUnitDic[_levelUnitId] = _netId
		self.__innerLevelUnitCnt = self.__innerLevelUnitCnt + 1
		if self.__outUnitDic[_netId] then
			self.__outUnitDic[_netId] = nil
			self.__outLevelUnitCnt = self.__outLevelUnitCnt - 1
		end
		
		local _levelUnit = self.battleRoom.battleLevelManager.levelUnitManager:GetLevelUnit(_levelUnitId)
		if _levelUnit and _levelUnit.keyUnit then
			if not self.__innerKeyUnitDic[_levelUnitId] then
				self.__innerKeyUnitDic[_levelUnitId] = _netId
				self.__innerKeyUnitCnt = self.__innerKeyUnitCnt + 1
			end
			if self.__outKeyUnitDic[_netId] then
				self.__outKeyUnitDic[_netId] = nil
				self.__outKeyUnitCnt = self.__outKeyUnitCnt - 1
			end
		end
	elseif _unit:CheckUnitType(BattleUnitType.Player) then
		if self.__innerPlayerUnitDic[_netId] then return end
		self.__innerPlayerUnitDic[_netId] = _netId
		self.__innerPlayerUnitCnt = self.__innerPlayerUnitCnt + 1
		if self.__outUnitDic[_netId] then
			self.__outUnitDic[_netId] = nil
			self.__outPlayerUnitCnt = self.__outPlayerUnitCnt - 1
		end
	end
	
	--BATTLE_LOGIC_EVENT_SERVICE_V2:OnTriggerLevelUnitEnterLevelUnitEvent(self.id, _netId)
end

---有单位离开
---@public
function BattleObjCom_BoundaryListener:OnUnitLeave(_netIdList)
	if CheckLogLevel(LogLevel.log) then
		LogTools.LogByLevel(LogLevel.log, "BattleObjCom_BoundaryListener:OnUnitLeave", "boundaryListenerNetId", self:GetObject():GetParentUnit():GetNetId(), "_netIdList", dumpTableEx(_netIdList))
	end
	for i = 1, #_netIdList do
		self:__OnUnitLeave(_netIdList[i])
	end
	---@type BattleObjCom_BoundaryTrigger
	local _boundaryTrigger = self:GetObject():GetComponent(BattleObjectComponentType.BoundaryTrigger)
	if _boundaryTrigger then
		_boundaryTrigger:OnUnitLeave(_netIdList)
	end
end

---@private
function BattleObjCom_BoundaryListener:__OnUnitLeave(_netId)
	local _unit = self.battleRoom.battleUnitManager:GetUnit(_netId)
	if not _unit then return end
	if _unit:CheckUnitType(BattleUnitType.Monster) then
		local _levelUnitId = _unit:GetLevelUnitId()
		if not self.__innerLevelUnitDic[_levelUnitId] then return end
		self.__innerLevelUnitDic[_levelUnitId] = nil
		self.__innerLevelUnitCnt = self.__innerLevelUnitCnt - 1
		if not self.__outUnitDic[_netId] then
			self.__outUnitDic[_netId] = _netId
			self.__outLevelUnitCnt = self.__outLevelUnitCnt + 1
		end
		
		local _levelUnit = self.battleRoom.battleLevelManager.levelUnitManager:GetLevelUnit(_levelUnitId)
		if _levelUnit and _levelUnit.keyUnit then
			if self.__innerKeyUnitDic[_levelUnitId] then
				self.__innerLevelUnitDic[_levelUnitId] = nil
				self.__innerKeyUnitCnt = self.__innerKeyUnitCnt - 1
			end
			if not self.__outKeyUnitDic[_netId] then
				self.__outKeyUnitDic[_netId] = _netId
				self.__outKeyUnitCnt = self.__outKeyUnitCnt + 1
			end
		end
	elseif _unit:CheckUnitType(BattleUnitType.Player) then
		if not self.__innerPlayerUnitDic[_netId] then return end
		self.__innerPlayerUnitDic[_netId] = nil
		self.__innerPlayerUnitCnt = self.__innerPlayerUnitCnt - 1
		if not self.__outUnitDic[_netId] then
			self.__outUnitDic[_netId] = _netId
			self.__outPlayerUnitCnt = self.__outPlayerUnitCnt + 1
		end
	end
end

------------------------------------------------------------------------------------------------------------------------

---@public
---@param _param LuaBehav_BoundaryListenerCheckParam
function BattleObjCom_BoundaryListener:Check(_param)
	local _checkInner = _param.checkInner

	if #_param.targetIdList == 0 or _param.selectUnitType == LuaBehav_Define_TriggerSelectUnitType.All then
		--ALL的情况只能是任意，否则ID没有意义
		--id列表为空时默认任意
		if _checkInner then --任意单位在范围中
			return self:__CheckAny(_param.selectUnitType, _param.needKeyTag)
		else --任意单位不在范围中
			return self:__CheckAnyOut(_param.selectUnitType, _param.needKeyTag)
		end
	else
		local _checkFunc = nil
		if _param.selectUnitType == LuaBehav_Define_TriggerSelectUnitType.PlayerUnit then
			_checkFunc = BattleObjCom_BoundaryListener.__CheckFirstPlayerUnitIn
		elseif _param.selectUnitType == LuaBehav_Define_TriggerSelectUnitType.LevelUnit then
			_checkFunc = BattleObjCom_BoundaryListener.__CheckLevelUnitIn
		end
		if not _checkFunc then return false end

		if _checkInner then --所有都在内部
			for _, _id in pairs(_param.targetIdList) do
				if not _checkFunc(self, _id, _param.needKeyTag) then return false end
			end
		else --所有都在外部
			for _, _id in pairs(_param.targetIdList) do
				if _checkFunc(self, _id, _param.needKeyTag) then return false end
			end
		end
		
		return true
	end
end

---@public
function BattleObjCom_BoundaryListener:__CheckAny(_selectUnitType, _needKeyTag)
	if _selectUnitType == LuaBehav_Define_TriggerSelectUnitType.PlayerUnit then
		if not _needKeyTag then
			return self.__innerPlayerUnitCnt > 0
		else  --玩家没有关键单位标记
			return false
		end
	elseif _selectUnitType == LuaBehav_Define_TriggerSelectUnitType.LevelUnit then
		if not _needKeyTag then
			return self.__innerLevelUnitCnt > 0
		else
			return self.__innerKeyUnitCnt > 0
		end
	elseif _selectUnitType == LuaBehav_Define_TriggerSelectUnitType.All then
		if not _needKeyTag then
			return self.__innerPlayerUnitCnt > 0 or self.__innerLevelUnitCnt > 0
		else
			return self.__innerKeyUnitCnt > 0
		end
	end
end

---@private
function BattleObjCom_BoundaryListener:__CheckAnyOut(_selectUnitType, _needKeyTag)
	if _selectUnitType == LuaBehav_Define_TriggerSelectUnitType.PlayerUnit then
		if not _needKeyTag then
			return self.__outPlayerUnitCnt > 0
		else --玩家没有关键单位标记
			return false
		end
	elseif _selectUnitType == LuaBehav_Define_TriggerSelectUnitType.LevelUnit then
		if not _needKeyTag then
			return self.__outLevelUnitCnt > 0
		else
			return self.__outKeyUnitCnt > 0
		end
	elseif _selectUnitType == LuaBehav_Define_TriggerSelectUnitType.All then
		if not _needKeyTag then
			return self.__outLevelUnitCnt > 0 or self.__outPlayerUnitCnt > 0
		else
			return self.__outKeyUnitCnt > 0
		end
	end
end

---按照关卡单位ID检查
---@private
function BattleObjCom_BoundaryListener:__CheckLevelUnitIn(_levelUnitId, _needKeyTag)
	if not _needKeyTag then
		return self.__innerLevelUnitDic[_levelUnitId]
	else
		return self.__innerKeyUnitDic[_levelUnitId]
	end
end

---策划表示目前只考虑单机情况，只找第一个玩家即可
---@private
function BattleObjCom_BoundaryListener:__CheckFirstPlayerUnitIn()
	local _playerList = self.battleRoom.battleUnitManager.GetOriginalPlayerInfoManager():GetAllPlayer()
	local _playerData = _playerList[1]
	local _netId = _playerData:GetNetId()
	return self:__CheckPlayerUnitIn(_netId)
end

---按照玩家英雄位置检查
---按照策划开会时的说法，这里的位置不计算死亡的英雄（划掉）
---按照十五最新的说法，玩家只要任何英雄在里面都算，不用管其他参数
---@private
function BattleObjCom_BoundaryListener:__CheckPlayerUnitIn(_netId)
	--LogTools.LogByLevel(LogLevel.log, "LevelTrigger:CheckPlayerUnitIn", "self.__innerPlayerUnitDic", dumpTableEx(self.__innerPlayerUnitDic))
	
	return self.__innerPlayerUnitDic[_netId]
end

---@public
function BattleObjCom_BoundaryListener:CheckPlayerIn(_netId)
	return self.__innerPlayerUnitDic[_netId]
end
------------------------------------------------------------------------------------------------------------------------
---新创建的单位默认记录到外部列表
---为了避免已经接收到进入消息，后接收到创建事件，这里都判断了一下不在内部列表中才处理（理论上应该不需要）
---@public
function BattleObjCom_BoundaryListener:OnBattleUnitCreate(_netId)
	local _outDic = self.__outUnitDic
	local _innerPlayerUnitDic = self.__innerPlayerUnitDic
	local _innerLevelUnitDic = self.__innerLevelUnitDic
	if not _outDic[_netId] then
		local _unit = self.battleRoom.battleUnitManager:GetUnit(_netId)
		if _unit:CheckUnitType(BattleUnitType.Player) then
			if not _innerPlayerUnitDic[_netId] then
				_outDic[_netId] = _netId
				self.__outPlayerUnitCnt = self.__outPlayerUnitCnt + 1
			end
		elseif _unit:CheckUnitType(BattleUnitType.Monster) then
			if not _innerLevelUnitDic[_unit:GetLevelUnitId()] then
				_outDic[_netId] = _netId
				self.__outLevelUnitCnt = self.__outLevelUnitCnt + 1
			end
			
			local _levelUnit = self.battleRoom.battleLevelManager.levelUnitManager:GetLevelUnit(_unit:GetLevelUnitId())
			if _levelUnit and _levelUnit.keyUnit then
				if not self.__innerKeyUnitDic[_unit:GetLevelUnitId()] then
					self.__outKeyUnitDic[_netId] = _netId
					self.__outKeyUnitCnt = self.__outKeyUnitCnt + 1
				end
			end
		end
	end
end

---@public
function BattleObjCom_BoundaryListener:OnBattleUnitDead(_netId)
	local _outDic = self.__outUnitDic
	local _innerPlayerUnitDic = self.__innerPlayerUnitDic
	local _innerLevelUnitDic = self.__innerLevelUnitDic
	local _unit = self.battleRoom.battleUnitManager:GetUnit(_netId, true)
	if _unit:CheckUnitType(BattleUnitType.Player) then
		if _outDic[_netId] then
			_outDic[_netId] = nil
			self.__outPlayerUnitCnt = self.__outPlayerUnitCnt - 1
		elseif _innerPlayerUnitDic[_netId] then
			_innerPlayerUnitDic[_netId] = nil
			self.__innerPlayerUnitCnt = self.__innerPlayerUnitCnt - 1
		end
	elseif _unit:CheckUnitType(BattleUnitType.Monster) then
		if _outDic[_netId] then
			_outDic[_netId] = nil
			self.__outPlayerUnitCnt = self.__outPlayerUnitCnt - 1
		elseif _innerLevelUnitDic[_unit:GetLevelUnitId()] then
			_innerLevelUnitDic[_unit:GetLevelUnitId()] = nil
			self.__innerLevelUnitCnt = self.__innerLevelUnitCnt - 1
		end
		
		local _levelUnit = self.battleRoom.battleLevelManager.levelUnitManager:GetLevelUnit(_unit:GetLevelUnitId())
		if _levelUnit and _levelUnit.keyUnit then
			if self.__outKeyUnitDic[_netId] then
				self.__outKeyUnitDic[_netId] = nil
				self.__outKeyUnitCnt = self.__outKeyUnitCnt - 1
			elseif self.__innerKeyUnitDic[_unit:GetLevelUnitId()] then
				self.__innerKeyUnitDic[_unit:GetLevelUnitId()] = nil
				self.__innerKeyUnitCnt = self.__innerKeyUnitCnt - 1
			end
		end
	end
end

return BattleObjCom_BoundaryListener
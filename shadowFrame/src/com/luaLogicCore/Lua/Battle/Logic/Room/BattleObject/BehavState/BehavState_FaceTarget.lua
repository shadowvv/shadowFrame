---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/03/12 11:38
--- Describe: 转向目标
---

---@class BehavState_FaceTarget : BattleUnit_PathFindCaller
BehavState_FaceTarget = class(BattleUnit_PathFindCaller, "BehavState_FaceTarget")

---@public
---@param _behavCom BattleUnitCom_Behav
function BehavState_FaceTarget:Init(_behavCom)
	---@private
	---@type BattleUnitCom_Behav
	self.__behavCom = _behavCom
	self:__Init(_behavCom:GetUnit(), 1000, 15)
	self:__InitStateUseInfos()
	self.__running = false
end

---初始化一些当前behavState需要使用的专属信息
---@private
function BehavState_FaceTarget:__InitStateUseInfos()
	---@private
	---@type number
	self.__netIdSelf = self.__unitSelf:GetNetId()
	---@private
	---@type number
	self.__netIdTarget = nil
end

------------------------------------------------------------------------------------------------------------------------
---@public
function BehavState_FaceTarget:Start(_targetNetId)
	--LogTools.LogByLevel(LogLevel.log, "rotateFix", "behavState", "BehavState_FaceTarget:Start", "Start", "netId", self.__unitSelf:GetNetId(), "self.__running", self.__running)
	if self.__running then return end
	self.__running = true
	
	self.__startTime = TimeUtils.battleNow(self.__battleId)
	self.__netIdTarget = _targetNetId
	self.__comRotate:Start(self)
end

---@public
function BehavState_FaceTarget:Stop()
	--LogTools.LogByLevel(LogLevel.log, "rotateFix", "behavState", "BehavState_FaceTarget:Stop", "Start", "netId", self.__unitSelf:GetNetId())
	self:ReleaseHitBlockParams()
	if not self.__running then return end
	self.__running = false

	self.__actionManagerSelf:Exit(self.__actionManagerSelf.currentStates[TurnActionState:GetId()], false)
	self.__comRotate:Stop()
	self.__netIdTarget = nil
end
------------------------------------------------------------------------------------------------------------------------
---获取目标点
---@public
---@param _v3Receiver Vector3 用于接收结果的vec3
---@return boolean 是否成功获取到目标点
function BehavState_FaceTarget:GetTargetDir(_v3Receiver, _deltaTime)
	if not self.__netIdTarget or -1 == self.__netIdTarget then return false end
	local _ret = self.__behavCom:GetBattleRoom().transUtil:GetDirBetweenUnits(self.__netIdSelf, self.__netIdTarget, _v3Receiver)
	--LogTools.LogByLevel(LogLevel.log, "rotateFix", "behavState", "BehavState_FaceTarget:GetTargetDir", "netId", self.__unitSelf:GetNetId(), "_ret", _ret, "_v3Receiver", _v3Receiver)
	self:ReleaseHitBlockParams()
	return _ret
end

---寻路移动结束时的回调
---@public
function BehavState_FaceTarget:FindPathCallBack()
	if not self.__behavCom:GetBattleRoom().behaviorProcessor:CheckMonsAIHost() then return end
	--LogTools.LogByLevel(LogLevel.log, "rotateFix", "behavState", "BehavState_FaceTarget:FindPathCallBack", "netId", self.__unitSelf:GetNetId())
	self.__behavCom:GetBattleRoom().behaviorManager:PostTaskListenEvent(self.__behavCom:GetTreeIndex(), LuaBehav_Define_TaskListenEnum.FaceTargetEnd)
end

------------------------------------------------------------------------------------------------------------------------
---@public
---@return boolean
function BehavState_FaceTarget:CheckRunning()
	return self.__running
end

---@public
function BehavState_FaceTarget:Clear()
	self:Stop()
	self.__behavCom = nil
	self.__netIdSelf = nil
	self.__netIdTarget = nil
	self.__running = nil
	self:__Clear()
end

return BehavState_FaceTarget
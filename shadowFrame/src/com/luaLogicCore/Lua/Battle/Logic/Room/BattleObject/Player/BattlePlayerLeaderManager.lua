---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hejincheng.
--- DateTime: 2022/1/19 11:43
---
require "Lib/class";

---@class BattlePlayerLeaderManager : table
---@field leaderTable BattlePlayerLeader[]
---@field curLeaderNetId number
BattlePlayerLeaderManager = class(nil, 'BattlePlayerLeaderManager');

function BattlePlayerLeaderManager:ctor()

end

-- 初始化角色管理器
function BattlePlayerLeaderManager:Init(_curLeaderId, _leaders)
    self.leaderTable = {};
    -- 创建所有角色
    for _, value in ipairs(_leaders) do
        ---@type BattlePlayerLeader
        local _leader = BATTLE_PLAYER_CREATOR:CreateLeader(value, NET_ID_CREATOR:GetAndIncrease())

        if _leader:GetId() == _curLeaderId then
            self.curLeaderNetId = _leader:GetNetId();
        end

        print("add leader:" .. _leader:GetNetId())
        self:AddLeader(_leader);
    end
end

-- 设置当前角色
-- @return 是否设置成功
function BattlePlayerLeaderManager:SetCurrentLeader(_leaderNetId)
    local leader = self:GetLeader(_leaderNetId);
    if leader == nil then
        return false;
    end
    self.curLeaderNetId = _leaderNetId;
end

-- 添加武将
---@param _leader BattlePlayerLeader
function BattlePlayerLeaderManager:AddLeader(_leader)
    self.leaderTable[_leader:GetNetId()] = _leader;
end

-- 获取当前武将id
---@return number
function BattlePlayerLeaderManager:GetCurrentLeaderNetId()
    return self.curLeaderNetId;
end

-- 获取当前武将
---@return BattlePlayerLeader
function BattlePlayerLeaderManager:GetCurrentLeader()
    return self:GetLeader(self.curLeaderNetId);
end

-- 获取指定武将
---@param _leaderNetId number
---@return BattlePlayerLeader
function BattlePlayerLeaderManager:GetLeader(_leaderNetId)
    return self.leaderTable[_leaderNetId];
end

-- 获取所有武将
---@return BattlePlayerLeader[]
function BattlePlayerLeaderManager:GetAllLeader()
    return self.leaderTable;
end

return BattlePlayerLeaderManager;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/8/15 16:35

require "Lib/class"
require "Battle/Logic/Room/BattleField/ObjectCollider"

---@class BattleObjCom_Collider : BattleObjectComponentBase
---@field objectCollider ObjectCollider 碰撞盒
BattleObjCom_Collider = class(BattleObjectComponentBase, 'BattleObjCom_Collider');

function BattleObjCom_Collider:ctor()
    self:__ctor(BattleObjectComponentType.Collider)
    self.objectCollider = nil;

end

---@public
---@param _battleObject BattleObjectBase
function BattleObjCom_Collider:Init(_battleObject)
    self:__Init(_battleObject)
end

---@public
---创建碰撞体
---@param _position Vector3 位置
---@param _rotation Quaternion 朝向
function BattleObjCom_Collider:CreateCollider(_position,_rotation)
    local colliderCenter = Vector3.New(0,0,0);
    local colliderSize = Vector3.New(1,1,1);
    ---@type ColliderEditorData
    local colliderConfig= nil;
    if self:GetObject():GetParentUnit():GetUnitType() == BattleUnitType.Player then
        ---@type BattleObject_LeaderObject
        local Object = self:GetObject();
        ---@type LeaderClothing
        local clothingConfig = self.battleRoom.inputDataSource:GetDict("LeaderClothing",Object.clothId)
        if clothingConfig then
            colliderConfig = self.battleRoom.inputDataSource:GetDict("ColliderEditorData",clothingConfig.skillPointName);
        end
    elseif self:GetObject():GetParentUnit():GetUnitType() == BattleUnitType.Monster then
        -----@type MonsterTemplate
        local monsterTemp = self:GetObject():GetDataTemplateXls();
        if monsterTemp then
            colliderConfig = self.battleRoom.inputDataSource:GetDict("ColliderEditorData",monsterTemp.skModel);
        end
    end

    self.objectCollider = ObjectCollider.New(self:GetObject():GetParentUnit():GetUnitType(),self:GetObject():GetTemplateXls());

    self.objectCollider.id = self:GetObject():GetParentUnit():GetNetId();
    if colliderConfig then
        for i, v in pairs(colliderConfig.Info) do
            colliderCenter = v.center;
            colliderSize = v.size;

            ---@type OBBBox
            local originalCollider = OBBBox.New();
            originalCollider:Init(Vector3.New(1,0,0),Vector3.New(0,1,0),Vector3.New(0,0,1),colliderCenter,colliderSize);
            ---@type OBBBox
            local collider = OBBBox.New();
            collider:Init(Vector3.New(1,0,0),Vector3.New(0,1,0),Vector3.New(0,0,1),colliderCenter,colliderSize);
            collider:Reset(_position,_rotation);

            self.objectCollider:AddCollider(collider,originalCollider);
        end
    else
        ---@type OBBBox
        local originalCollider = OBBBox.New();
        originalCollider:Init(Vector3.New(1,0,0),Vector3.New(0,1,0),Vector3.New(0,0,1),colliderCenter,colliderSize);
        ---@type OBBBox
        local collider = OBBBox.New();
        collider:Init(Vector3.New(1,0,0),Vector3.New(0,1,0),Vector3.New(0,0,1),colliderCenter,colliderSize);
        collider:Reset(_position,_rotation);

        self.objectCollider:AddCollider(collider,originalCollider);
    end

    self.battleRoom.battleField:AddObject(self.objectCollider);
end

---@public
---移动碰撞体
---@param _posChange Vector3 位置变化
function BattleObjCom_Collider:MoveCollider(_posChange)
    self.objectCollider:MoveCollider(_posChange);
end

---@public 碰撞体转向
---@param _rotationChange Quaternion 朝向变化
function BattleObjCom_Collider:RotateCollider(_rotationChange)
    self.objectCollider:RotateCollider(_rotationChange);
end

---@public 移除碰撞体
function BattleObjCom_Collider:RemoveCollider()
    if not self.objectCollider then return end
    self.battleRoom.battleField:RemoveObject(self.objectCollider);
    self.objectCollider:ClearCollider();
end

return BattleObjCom_Collider;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2021/12/20 18:12
--- 移动行为状态

require "Lib/class"
require "Battle/Logic/Room/BattleObject/ActionState/ActionState"
require "Battle/Utils/MoveUtils"

---@class MoveActionState:table
---@field moveParam Vector3
---@field cameraParam Vector3
MoveActionState = class(ActionState,'MoveActionState');

function MoveActionState:ctor()
    self.moveParam = nil;
    self.cameraParam = nil;
end

---@param _moveParam Vector3
function MoveActionState:Init(_moveParam,_cameraParam)
    self.moveParam = _moveParam;
    self.cameraParam = _cameraParam;
end

function MoveActionState:EnterAction(_actionStateManager)
    return true;
end

function MoveActionState:DoAction(_actionStateManager,_dt)

    local currentV = _actionStateManager:GetVelocity();
    local currentDirection = _actionStateManager:GetDirection();
    local currentPosition = _actionStateManager:GetPosition();

    local direction = MOVE_UTILS.Rotate(currentDirection,self.cameraParam,2,3,Vector2.New(20,160));
    local v,pos,a = MOVE_UTILS.Move(self.moveParam,self.cameraParam,currentV,direction,Vector4.New(40,40,40,40),1.2,10,15,_dt);
    pos = currentPosition + pos;

    if currentV == Vector3.zero_global() and currentDirection == direction and currentPosition == pos then
        _actionStateManager:Exit(self);
        _actionStateManager:Idle();
    end

    _actionStateManager:SetVelocity(v);
    _actionStateManager:SetDirection(direction);
    _actionStateManager:SetPosition(pos);

    local battleUnitMoveOutput = {};
    battleUnitMoveOutput.v = v:Clone();
    battleUnitMoveOutput.position = pos:Clone();
    battleUnitMoveOutput.rotation = direction:Clone();
    battleUnitMoveOutput.accelerate = a:Clone();
    battleUnitMoveOutput.moveParam = self.moveParam;
    battleUnitMoveOutput.cameraParam = self.cameraParam;

    local battleUnitOutputData = {};
    battleUnitOutputData.netId = 1;
    battleUnitOutputData.moveInfo = battleUnitMoveOutput;

    self.moveParam = Vector3.zero_global();
    self.cameraParam = Vector3.zero_global();

    return battleUnitOutputData;
end

function MoveActionState:ExitAction(_actionStateManager)
    
end

function MoveActionState:GetId()
    return 2;
end

return MoveActionState;
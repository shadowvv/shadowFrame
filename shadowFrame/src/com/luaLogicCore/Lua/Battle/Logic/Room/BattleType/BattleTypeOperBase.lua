---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hejincheng.
--- DateTime: 2022/4/13 11:14

require "Lib/class"

---@class BattleTypeOperBase : table
BattleTypeOperBase = class(nil, 'BattleTypeOperBase');

function BattleTypeOperBase:ctor()

end

function BattleTypeOperBase:__Init(_battleRoom)
    ---@type BattleRoom
    self.battleRoom = _battleRoom
    ---@type StoryShow[]
    self.preBattlePlots = {}
    ---@type number[]
    self.conditions = {}
    ---@type table<number[]>
    self.replaceParams = {}
    ---@type number 一星条件
    self.condition1 = 0
    ---@type number 二星条件
    self.condition2 = 0
    ---@type number 三星条件
    self.condition3 = 0
    ---@protected
    self.__mainLevelName = "无效的MainLevelName"
    self:__InitListenConditions()
    self:__InitPreBattlePlots()
end

function BattleTypeOperBase:__Clear()
end

function BattleTypeOperBase:__InitListenConditions()
    local _levelId = self.battleRoom.battleLevelManager.levelConfigManager:GetLevelId()
    local _levelXls = self:GetLevelXls(_levelId)

    -- 三星条件监听
    if _levelXls.gradeOneCondition1 then
        self.condition1 = _levelXls.gradeOneCondition1
    end
    if _levelXls.gradeTwoCondition2 then
        self.condition2 = _levelXls.gradeTwoCondition2
    end
    if _levelXls.gradeThreeCondition3 then
        self.condition3 = _levelXls.gradeThreeCondition3
    end

    -- 三星条件替换
    -- 一星
    local _replaceParams1 = {}
    if _levelXls.gradeOneParam1 then
        table.insert(_replaceParams1, _levelXls.gradeOneParam1)
    end
    if _levelXls.gradeOneParam2 then
        table.insert(_replaceParams1, _levelXls.gradeOneParam2)
    end
    -- 二星
    local _replaceParams2 = {}
    if _levelXls.gradeTwoParam1 then
        table.insert(_replaceParams2, _levelXls.gradeTwoParam1)
    end
    if _levelXls.gradeTwoParam2 then
        table.insert(_replaceParams2, _levelXls.gradeTwoParam2)
    end
    -- 三星
    local _replaceParams3 = {}
    if _levelXls.gradeThreeParam1 then
        table.insert(_replaceParams3, _levelXls.gradeThreeParam1)
    end
    if _levelXls.gradeThreeParam2 then
        table.insert(_replaceParams3, _levelXls.gradeThreeParam2)
    end

    ---@type number[]
    local conditions = {}
    table.insert(conditions, self.condition1)
    table.insert(conditions, self.condition2)
    table.insert(conditions, self.condition3)
    self.conditions = conditions

    ---@type number[]
    local replaceParams = {}
    table.insert(replaceParams, _replaceParams1)
    table.insert(replaceParams, _replaceParams2)
    table.insert(replaceParams, _replaceParams3)
    self.replaceParams = replaceParams
end

function BattleTypeOperBase:__InitPreBattlePlots()
end

------------------------------------------------------------------------------------------------------------------------

function BattleTypeOperBase:Init(_battleRoom)
    self:__Init(_battleRoom)
end

---@public
---@param _levelId number
---@return table Level表
function BattleTypeOperBase:GetLevelXls(_levelId)
    self.battleRoom.exceptionProcessor:OnBattleDataNil("BattleType未实现GetLevelXls方法");
    return
end

---@public
---@return number[]
function BattleTypeOperBase:GetListenConditions()
    return self.conditions
end

---@public
---@return table<number[]>
function BattleTypeOperBase:GetListenConditionsReplaceParams()
    return self.replaceParams
end

---@public
---@return StoryShow[]
function BattleTypeOperBase:GetPreBattlePlots()
    return self.preBattlePlots
end

-- 检测玩家触发初始条件
---@public
function BattleTypeOperBase:CheckPlayerTriggerInitConditions()
    if not self.conditions then
        return
    end
    local stars = {}
    for _index, _conditionId in pairs(self.conditions) do
        ---@type LevelCondition
        local _levelCondition = self.battleRoom.inputDataSource:GetDict("LevelCondition", _conditionId)
        if _levelCondition then
            ---@type LevelConditionType
            local _levelConditionType = GetLevelConditionTypeById(_levelCondition.type)
            if _levelConditionType and _levelConditionType:GetInitState() == ConditionEventState.SUCCESS then
                table.insert(stars, _index)
            end
        end
    end
    if #stars > 0 then
        -- 推送初始就已经完成的三星
        local msg = {
            starArray = stars
        }
        -- 关卡条件进行广播
        self.battleRoom.outputDataSource:GetLevelThreeStarList_S2C(msg)
    end
end

-- 触发关卡条件
---@public
---@param _conditionId number 条件id
---@param _uid number 玩家id
---@param _oldState number 旧状态
---@param _newState number 新状态
---@param _scope number 作用范围
function BattleTypeOperBase:OnTriggerLevelCondition(_conditionId, _uid, _oldState, _newState, _scope)
    if not _conditionId or not self.conditions then
        return
    end

    for _, _starCondition in pairs(self.conditions) do
        if _starCondition == _conditionId then
            local _allPlayers = self.battleRoom.battleUnitManager:GetOriginalPlayerInfoManager():GetAllPlayer()
            for _, _originPlayerInfo in pairs(_allPlayers) do
                ---@type number
                local _playerId = _originPlayerInfo:GetPlayerId()

                -- 获取当前所有的三星条件
                local stars = self:GetStarConditions(_playerId)
                local msg = {
                    starArray = stars
                }

                -- 每个玩家单独推送三星消息（每个玩家的三星完成度可能不一样）
                self.battleRoom.outputDataSource:GetLevelThreeStarListToClient(_playerId, msg)
            end
            break
        end
    end
end

-- 获取三星条件状态
---@public
---@param _uid number 玩家id
---@return table<ConditionEventState> 三星状态数组
function BattleTypeOperBase:GetStarConditions(_uid)
    local _levelConditionManager = self.battleRoom.battleLevelManager.levelConditionManager

    ---@type table<ConditionEventState> 三星状态数组
    local _starConditions = {}

    -- 第1颗星
    if self.condition1 and self.condition1 > 0 then
        local _star1ConditionEvent = _levelConditionManager:GetConditionEvent(self.condition1, _uid)
        if _star1ConditionEvent and _star1ConditionEvent.state == ConditionEventState.SUCCESS then
            table.insert(_starConditions, 1)
        end
    end

    -- 第2颗星
    if self.condition2 and self.condition2 > 0 then
        local _star2ConditionEvent = _levelConditionManager:GetConditionEvent(self.condition2, _uid)
        if _star2ConditionEvent and _star2ConditionEvent.state == ConditionEventState.SUCCESS then
            table.insert(_starConditions, 2)
        end
    end

    -- 第3颗星
    if self.condition3 and self.condition3 > 0 then
        local _star3ConditionEvent = _levelConditionManager:GetConditionEvent(self.condition3, _uid)
        if _star3ConditionEvent and _star3ConditionEvent.state == ConditionEventState.SUCCESS then
            table.insert(_starConditions, 3)
        end
    end

    return _starConditions
end

---获取当前关卡类型对应的MainLevel主表名字
---@public
function BattleTypeOperBase:GetMainLevelName()
    return self.__mainLevelName
end

function BattleTypeOperBase:Clear()
    self:__Clear()
end

return BattleTypeOperBase;
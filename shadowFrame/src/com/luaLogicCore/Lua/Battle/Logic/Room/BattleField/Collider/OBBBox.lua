---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/8/12 11:24

require "Lib/class"
require "Battle/Logic/Room/BattleField/Collider/BaseCollider"

---@class OBBBox : BaseCollider
---@field axisX Vector3 X轴向量
---@field axisY Vector3 Y轴向量
---@field axisZ Vector3 Z轴向量
---@field center Vector3 中心点坐标
---@field width Vector3 边长
---@field vertex Vector3[] 八个顶点
OBBBox = class(BaseCollider, 'OBBBox');

function OBBBox:ctor()

    self.axisX = nil;
    self.axisY = nil;
    self.axisZ = nil;
    self.center = nil;
    self.width = nil;
    self.vertex = {};

end

---@public 初始化
---@param _axisX Vector3 X轴向量
---@param _axisY Vector3 Y轴向量
---@param _axisZ Vector3 Z轴向量
---@param _center Vector3 中心点坐标
---@param _width Vector3 边长
function OBBBox:Init(_axisX,_axisY,_axisZ,_center,_width)

    self.axisX = _axisX;
    self.axisY = _axisY;
    self.axisZ = _axisZ;
    self.center = _center;
    self.width = _width;

    ---外左下
    table.insert(self.vertex,self.center+((self.axisX*self.width.x*-1-self.axisY*self.width.y-self.axisZ*self.width.z)*0.5));
    ---外右下
    table.insert(self.vertex,self.center+((self.axisX*self.width.x-self.axisY*self.width.y-self.axisZ*self.width.z)*0.5));
    ---外左上
    table.insert(self.vertex,self.center+((self.axisX*self.width.x*-1+self.axisY*self.width.y-self.axisZ*self.width.z)*0.5));
    ---里
    table.insert(self.vertex,self.center+((self.axisX*self.width.x*-1-self.axisY*self.width.y+self.axisZ*self.width.z)*0.5));

    table.insert(self.vertex,self.center+((self.axisX*self.width.x+self.axisY*self.width.y-self.axisZ*self.width.z)*0.5));
    table.insert(self.vertex,self.center+((self.axisX*self.width.x-self.axisY*self.width.y+self.axisZ*self.width.z)*0.5));
    table.insert(self.vertex,self.center+((self.axisX*self.width.x*-1+self.axisY*self.width.y+self.axisZ*self.width.z)*0.5));
    table.insert(self.vertex,self.center+((self.axisX*self.width.x+self.axisY*self.width.y+self.axisZ*self.width.z)*0.5));
end

---public 重置盒子
---@param _posChange Vector3 位置变化
---@param _rotationChange Quaternion 转向
function OBBBox:Reset(_posChange,_rotationChange)
    for i, v in pairs(self.vertex) do
        self.vertex[i] = _rotationChange*v;
        self.vertex[i] = self.vertex[i]+_posChange;
    end
end

---@public 移动碰撞体
---@param _posChange Vector3 位置变化
function OBBBox:Move(_posChange)
    for i, v in pairs(self.vertex) do
        self.vertex[i] = v + _posChange;
    end
end

---@public 碰撞体转向
---@param _rotationChange Quaternion 朝向变化
function OBBBox:Rotate(_rotationChange)
    for i, v in pairs(self.vertex) do
        self.vertex[i] = _rotationChange*v;
    end

    self.axisX = _rotationChange*self.axisX;
    self.axisY = _rotationChange*self.axisY;
    self.axisZ = _rotationChange*self.axisZ;
end

---@public 复制
---@return OBBBox
function OBBBox:Copy()
    local copy = OBBBox.New();
    copy.axisX = self.axisX;
    copy.axisY = self.axisY;
    copy.axisZ = self.axisZ;
    copy.center = self.center;
    copy.width = self.width;
    copy.vertex = {};
    for i, v in pairs(self.vertex) do
       table.insert(copy.vertex,v);
    end
    return copy;
end

return OBBBox;
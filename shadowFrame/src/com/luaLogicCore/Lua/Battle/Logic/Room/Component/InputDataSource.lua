---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2021/12/16 11:03
--- 输入数据接收器

require "Lib/class"
require "Battle/Logic/Room/Component/BattleRoomMessage"

---@class InputDataSource : table 输入数据接收器
---@field playerCommands BattleRoomMessage[] 玩家发送协议
---@field roomMessages BattleRoomMessage[] 战斗房间协议
InputDataSource = class(nil,'InputDataSource');

function InputDataSource:ctor()

end

-- 初始化
---@public
---@param _clientUid number 启动logic_core的客户端id
function InputDataSource:Init(_clientUid)
    self:__Init(_clientUid);
end

-- 内部初始化
---@protected
---@param _clientUid number 启动logic_core的客户端id
function InputDataSource:__Init(_clientUid)
    self.playerCommands = {};
    self.roomMessages = {};
end

-- 接收协议接口
---@public
---@param _uid number 发送协议的玩家id，如果是战斗房间消息该值为nil
---@param _id number 协议id
---@param _msgTable table 协议
function InputDataSource:OnReceiveMessage(_uid, _id, _msgTable)

end

-- 获得当前房间协议
---@public
---@return BattleRoomMessage[] 获得当前房间协议
function InputDataSource:DrainAllRoomMessage()
    local tickRoomMessage = {};
    if self.roomMessages == nil or #self.roomMessages == 0 then
        return tickRoomMessage;
    end
    local start = self:GetDrainStartIndex(self.roomMessages,10);
    local removeNumber = #self.roomMessages - start + 1;
    for i = 1, removeNumber do
        local tempMessage = table.remove(self.roomMessages);
        table.insert(tickRoomMessage,tempMessage);
    end
    return tickRoomMessage;
end

-- 获得当前所有的玩家协议
---@public
---@return BattleRoomMessage[] 获得当前玩家协议
function InputDataSource:DrainAllCommand()
    local tickPlayerCommand = {};
    local start = self:GetDrainStartIndex(self.playerCommands,10);
    local removeNumber = #self.playerCommands - start + 1;
    for i = 1, removeNumber do
        local tempMessage = table.remove(self.playerCommands);
        table.insert(tickPlayerCommand,tempMessage);
    end
    return tickPlayerCommand;
end

-- 获得每帧获得协议的起始index
---@private
---@return number 获得每帧获得协议的起始index
function InputDataSource:GetDrainStartIndex(_messages, _maxDrainNum)
    if #_messages <= _maxDrainNum then
        return 1;
    end

    local start = #_messages - _maxDrainNum + 1;
    return start;
end

-- 获得dict表
---@public
---@param _dictName string 表名
---@param _id number 表key
---@return table 表数据
function InputDataSource:GetDict(_dictName,_id)

end

return InputDataSource;
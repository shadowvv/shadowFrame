---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/01/26 16:08
--- Describe: 玩家英雄类object
---

---@class BattleObject_LeaderObject : BattleObjectBase
BattleObject_LeaderObject = class(BattleObjectBase, "BattleObject_LeaderObject")

---@public
---@param _createBattleUnitParam BattleCreateUnitParam
function BattleObject_LeaderObject:Init(_battleId, _objectId, _parentUnit, _createBattleUnitParam, _teamPos)
    ----LogTools.LogByLevel(LogLevel.log, "BattleObject_LeaderObject", "Init")
    self.__teamPos = _teamPos
    local _leaderBattleInfo = _createBattleUnitParam.battlePlayerInfo.leaders[_teamPos]
    self:__Init(_battleId, _parentUnit, _objectId, _leaderBattleInfo.id)
	self:__InitLeaderBattleInfo(_leaderBattleInfo)
    self:__InitComponents(_createBattleUnitParam, _leaderBattleInfo)
    self:__InitAdditionProperty(_leaderBattleInfo)
end

function BattleObject_LeaderObject:Clear()
	self:__Clear()
    self.__teamPos = nil
end

---@protected
---@param _createBattleUnitParam BattleCreateUnitParam
function BattleObject_LeaderObject:__InitComponents(_createBattleUnitParam, _leaderBattleInfo)
    ---@type BattleObjectComponentCreator
	local componentCreator = self:GetBattleRoom().battleObjectManager:GetObjectComponentCreator()

    ---@type BattleObjCom_Config
	local _cfgCom = componentCreator:__CreateComponent(BattleObjectComponentType.Config)
	_cfgCom:Init(self)
    self:AddComponent(_cfgCom)

    ---@type BattleObjCom_Property
	local _propCom = componentCreator:__CreateComponent(BattleObjectComponentType.Property)
	_propCom:Init(self, _leaderBattleInfo.calcPropModelInfo, _createBattleUnitParam, _leaderBattleInfo)
    self:AddComponent(_propCom)
    
    ---@type BattleObjCom_LifeCtrl
    local _lifeCom = componentCreator:__CreateComponent(BattleObjectComponentType.LifeCtrl)
    _lifeCom:Init(self, _createBattleUnitParam)
    self:AddComponent(_lifeCom)
    
    ---@type BattleObjCom_Block
	local _blockCom = componentCreator:__CreateComponent(BattleObjectComponentType.Block)
	_blockCom:Init(self)
	self:AddComponent(_blockCom)

    ---@type BattleObjCom_Skill
    local _skillCom = componentCreator:__CreateComponent(BattleObjectComponentType.Skill)
    _skillCom:Init(self,_leaderBattleInfo)
    self:AddComponent(_skillCom)

    ---@type BattleObjCom_Weapon
    local _weaponCom = componentCreator:__CreateComponent(BattleObjectComponentType.Weapon)
    _weaponCom:Init(self, _leaderBattleInfo.weapon)
    self:AddComponent(_weaponCom)

    ---@type BattleObjCom_Element_V2
    local _elementCom = componentCreator:__CreateComponent(BattleObjectComponentType.Element)
    _elementCom:Init(self)
    self:AddComponent(_elementCom)

    ---@type BattleObjCom_Buff
    local _buffCom = componentCreator:__CreateComponent(BattleObjectComponentType.Buff)
    _buffCom:Init(self)
    self:AddComponent(_buffCom)

    ---@type BattleObjCom_HitValue
    local _hitValueCom = componentCreator:__CreateComponent(BattleObjectComponentType.HitValue)
    _hitValueCom:Init(self)
    self:AddComponent(_hitValueCom)

    ---@type BattleObjCom_Drop
    local _dropCom = componentCreator:__CreateComponent(BattleObjectComponentType.Drop)
    _dropCom:Init(self, {})
    self:AddComponent(_dropCom)

    -----@type BattleObjCom_Collider
    --local _colliderCom = componentCreator:__CreateComponent(BattleObjectComponentType.Collider)
    --_colliderCom:Init(self)
    --self:AddComponent(_colliderCom)

    ---@type BattleObjCom_PlayMode
    local _aimModeCom = componentCreator:__CreateComponent(BattleObjectComponentType.PlayMode)
    _aimModeCom:Init(self)
    self:AddComponent(_aimModeCom)
end

---@private
function BattleObject_LeaderObject:__InitLeaderBattleInfo(_leaderBattleInfo)
    self.level = _leaderBattleInfo.level
    self.exp = _leaderBattleInfo.exp
    self.star = _leaderBattleInfo.star
    self.starLevel = _leaderBattleInfo.starLevel
    self.favorabilityLevel = _leaderBattleInfo.favorabilityLevel
    self.favorabilityExp = _leaderBattleInfo.favorabilityExp
    self.clothId = _leaderBattleInfo.clothingId
    self.signLv = _leaderBattleInfo.signLv
    self.perkInfo = _leaderBattleInfo.perk
    self.initBuffIds = _leaderBattleInfo.buffIds

    ---@type BattlePlayerRevelation[]
    self.revelations = {}

    if _leaderBattleInfo.revelations then
        for _, _revelationInfo in pairs(_leaderBattleInfo.revelations) do
            self:AddRevelation(BattleObjectManager.CreateRevelation(_revelationInfo))
        end
    end
end

---计算附加属性
---@private
---@param _leaderBattleInfo table
function BattleObject_LeaderObject:__InitAdditionProperty(_leaderBattleInfo)
    ---@type BattleObjCom_Property
    --local _comProperty = self:GetComponent(BattleObjectComponentType.Property)
    -- 属性计算
    -- 循环已经计算过镜像属性了
    --local _revelationInfo = _leaderBattleInfo.revelations
    --if _revelationInfo then
    --    -- 初始属性加上镜像的属性
    --    if _revelationInfo.calcPropModelInfo then
    --        if _revelationInfo.calcPropModelInfo.attributeMap then
    --            for _, _kv in pairs(_revelationInfo.calcPropModelInfo.attributeMap) do
    --                _comProperty:AddAdditionValueById(_kv.key, _kv.value)
    --            end
    --        end
    --        if _revelationInfo.calcPropModelInfo.growMap then
    --            for _, _kv in pairs(_revelationInfo.calcPropModelInfo.growMap) do
    --                _comProperty:AddAdditionValueById(_kv.key, _kv.value)
    --            end
    --        end
    --    end
    --    if _revelationInfo.SecondaryPropInfo
    --            and _revelationInfo.SecondaryPropInfo.secondaryKeyList
    --            and _revelationInfo.SecondaryPropInfo.secondaryValueList then
    --        for index, key in pairs(_revelationInfo.SecondaryPropInfo.secondaryKeyList) do
    --            local value = _revelationInfo.SecondaryPropInfo.secondaryValueList[index];
    --            _comProperty:AddAdditionValueById(key, value)
    --        end
    --    end
    --end
    -- 循环已经计算过武装属性了
    --local _weaponInfo = _leaderBattleInfo.weapon
    --if _weaponInfo and _weaponInfo.calcPropModelInfo then
    --    -- 初始属性加上武器的属性
    --    if _weaponInfo.calcPropModelInfo.attributeMap then
    --        for _, _kv in pairs(_weaponInfo.calcPropModelInfo.attributeMap) do
    --            _comProperty:AddAdditionValueById(_kv.key, _kv.value)
    --        end
    --    end
    --    if _weaponInfo.calcPropModelInfo.growMap then
    --        for _, _kv in pairs(_weaponInfo.calcPropModelInfo.growMap) do
    --            _comProperty:AddAdditionValueById(_kv.key, _kv.value)
    --        end
    --    end
    --end
end

-- 设计星级
---@param _star number
---@param _starLevel number
function BattleObject_LeaderObject:SetStarInfo(_star, _starLevel)
    self.star = _star
    self.starLevel = _starLevel
end

-- 设置好感度
---@param _favorabilityLevel number
---@param _favorabilityExp number
function BattleObject_LeaderObject:SetFavorabilityInfo(_favorabilityLevel, _favorabilityExp)
    self.favorabilityLevel = _favorabilityLevel
    self.favorabilityExp = _favorabilityExp
end

-- 设置时装
---@param _clothingId number
function BattleObject_LeaderObject:SetClothInfo(_clothingId)
    self._clothingId = _clothingId
end

-- 式仗等级
---@param _signLv number
function BattleObject_LeaderObject:SetSignInfo(_signLv)
    self.signLv = _signLv
end

-- 添加被动技能
---@param _talentSkill BattlePlayerTalentSkill
function BattleObject_LeaderObject:AddTalentSkill(_talentSkill)
    if not _talentSkill then return end
    self.talentSkills[_talentSkill:GetId()] = _talentSkill
end

-- 添加主动技能
---@param _activeSkill BattlePlayerActiveSkill
function BattleObject_LeaderObject:AddActiveSkill(_activeSkill)
    if not _activeSkill then return end
    self.activeSkills[_activeSkill:GetId()] = _activeSkill
end

-- 添加启示
---@param _revelation BattlePlayerRevelation
function BattleObject_LeaderObject:AddRevelation(_revelation)
    if not _revelation then return end
    self.revelations[_revelation:GetId()] = _revelation
end

---@public
function BattleObject_LeaderObject:GetTeamPos()
    return self.__teamPos
end

---获取单位的元素类型
---@public
---@return number
function BattleObject_LeaderObject:GetElementType()
    ---@type Leader
    local leader = self:GetDataInstanceXls()
    return leader.property
end

---@public
---是否是元素体质单位
function BattleObject_LeaderObject:IsElementConstitution()
    -- 玩家不是元素体质单位
    return false
end

---@protected
function BattleObject_LeaderObject:__GetStateParamId()
    ---@type BattleObjCom_PlayMode
    local playMode = self:GetComponent(BattleObjectComponentType.PlayMode);
    if not playMode then
        return 1;
    end
    ---@type PlayMode
    local currentPlayModeConfig = self:GetBattleRoom().inputDataSource:GetDict("PlayMode",playMode.currentMode);
    if not currentPlayModeConfig then
        return 1;
    end
    return currentPlayModeConfig.stateParameter;
end

------------------------------------------------------------------------------------------------------------------------
--构建向表现层传送的消息
---@public
function BattleObject_LeaderObject:GetL2SMessageData()
    local _playerObjectInfo_L2S = {}
    _playerObjectInfo_L2S.objectId = self:GetObjectId()
    _playerObjectInfo_L2S.alive = not self.__isDead
    _playerObjectInfo_L2S.perkInfo = self.perkInfo
    ---@type BattleObjCom_LifeCtrl
	local _lifeCom = self:GetComponent(BattleObjectComponentType.LifeCtrl)
	_playerObjectInfo_L2S.createTime = _lifeCom:GetCreateTime()
	_playerObjectInfo_L2S.dicId = self:GetDicId()
	---@type BattleObjCom_Config
    local _configCom = self:GetComponent(BattleObjectComponentType.Config)
    _playerObjectInfo_L2S.clothId = _configCom:GetShowId()
	---@type BattleObjCom_Property
	local _propCom = self:GetComponent(BattleObjectComponentType.Property)
	_playerObjectInfo_L2S.property = _propCom:GetProtoHash()
    _playerObjectInfo_L2S.eleWeakTypeList = _propCom:GetEleWeakTypeList()
    ---@type BattleObjCom_Weapon
    local _weaponCom = self:GetComponent(BattleObjectComponentType.Weapon)
    ---@type BattlePlayerWeapon
    local _weapon = _weaponCom:GetCurrentWeapon()
    _playerObjectInfo_L2S.weaponId = _weapon.id
    _playerObjectInfo_L2S.weaponSkin = _weapon.skinId
    ---@type BattleObjCom_PlayMode
    local _aimModeCom = self:GetComponent(BattleObjectComponentType.PlayMode)
    _playerObjectInfo_L2S.aimMode = _aimModeCom.aimMode
    _playerObjectInfo_L2S.blockInfoList = self:__CollectBlockDataList()
    --LogTools.LogByLevel(LogLevel.log, "blockInfoList", dumpTableEx(_playerObjectInfo_L2S.blockInfoList))
    return _playerObjectInfo_L2S
end

return BattleObject_LeaderObject
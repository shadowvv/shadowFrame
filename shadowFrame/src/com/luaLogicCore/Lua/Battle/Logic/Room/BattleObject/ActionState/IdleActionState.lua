---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2021/12/20 18:11
--- 空闲行为状态

require "Lib/class"
require "Battle/Logic/Room/BattleObject/ActionState/ActionState"

---@class IdleActionState:ActionState
---@field battleRoom BattleRoom 战斗
---@field stateParam StateParameter 状态参数配置
---@field unitType number 单位类型
IdleActionState = class(ActionState, 'IdleActionState');

---@param _battleId number 战斗id
---@param _stateParamId number 状态参数配置Id
---@param _unitType number 单位类型
function IdleActionState:ctor(_battleId, _stateParamId,_unitType)
    self.battleRoom = GetBattleRoom(_battleId)
    self.stateParam = self.battleRoom.inputDataSource:GetDict("StateParameter", _stateParamId);
    self.unitType = _unitType;
end

function IdleActionState:EnterAction(_actionStateManager)
    return true;
end

-- 执行行为
---@param _actionStateManager ActionStateManage 行为管理器
---@param _dt number 更新时间
---@param _netId number 单位id
---@param _objId number 单位对应实体id
function IdleActionState:DoAction(_actionStateManager, _dt, _netId,_objId)

end

-- 退出行为
---@param _actionStateManager ActionStateManage 行为管理器
---@param _isBreak boolean 是否为打断退出
---@param _isActive boolean 是否为主动打断
function IdleActionState:ExitAction(_actionStateManager,_isBreak,_isActive)

end

-- 是否为主动状态
---@return boolean 是否为主动状态
function IdleActionState:IsActive()
    return true;
end

function IdleActionState:GetId()
    return 1;
end

---获得状态冲突表
---@return StateSwitchRule
function IdleActionState:GetSwitchRule()
    return self.battleRoom.inputDataSource:GetDict("StateSwitchRule",self:GetId());
end

return IdleActionState;
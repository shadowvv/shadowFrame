---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/4/6 16:59

require "Lib/class"
require "Battle/Logic/Room/BattleObject/ActionState/ActionState"

---@class ExileActionState : ActionState
---@field battleRoom BattleRoom 战斗
---@field stateParam StateParameter 状态参数配置
---@field unitType number 单位类型
ExileActionState = class(ActionState, 'ExileActionState');

---@param _battleId number 战斗id
---@param _stateParamId number 状态参数配置id
---@param _unitType number 单位类型
function ExileActionState:ctor(_battleId, _stateParamId, _unitType)
    self.battleRoom = GetBattleRoom(_battleId)
    self.stateParam = self.battleRoom.inputDataSource:GetDict("StateParameter", _stateParamId);
    self.unitType = _unitType;
end

-- 切换行为,判断行为的参数正确性
---@param _actionStateManager ActionStateManage 行为管理器
---@return boolean 是否可进入行为
function ExileActionState:EnterAction(_actionStateManager)
    return true;
end

-- 执行行为
---@param _actionStateManager ActionStateManage 行为管理器
---@param _dt number 更新时间
---@param _netId number 单位id
function ExileActionState:DoAction(_actionStateManager, _dt, _netId)

end

-- 退出行为
---@param _actionStateManager ActionStateManage 行为管理器
---@param _isBreak boolean 是否为打断退出
---@param _isActive boolean 是否为主动打断
function ExileActionState:ExitAction(_actionStateManager,_isBreak,_isActive)

end

-- 是否为主动状态
---@return boolean 是否为主动状态
function ExileActionState:IsActive()
    return false;
end

-- 行为状态Id
---@return number 行为状态Id 参照stateSwitchRule表
function ExileActionState:GetId()
    return 13;
end

---获得状态冲突表
---@return StateSwitchRule
function ExileActionState:GetSwitchRule()
    return self.battleRoom.inputDataSource:GetDict("StateSwitchRule",self:GetId());
end

return ExileActionState;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/03/15 17:11
--- Describe: 控制转向逻辑
--- 

---@class BattleUnitCom_Rotate : BattleUnitComponentBase
BattleUnitCom_Rotate = class(BattleUnitComponentBase, "BattleUnitCom_Rotate")
function BattleUnitCom_Rotate:ctor(_data)
	self:__ctor(BattleUnitComponentType.Rotate)
end

function BattleUnitCom_Rotate:Init(_battleUnit)
	self:__Init(_battleUnit)
	---@private
	self.__getTargetDirFunc = nil
	---@private
	---@type ActionStateManage
	self.__actionManager = _battleUnit:GetActionManager()
	---@private
	---@type Vector3
	self.__v3TargetDirCache = self:GetBattleRoom().vector3Pool:Pop()
end

---@public
---@param _caller BattleUnit_PathFindCaller
---@param _notCheckReachPoint boolean 是否跳过到达检查，跳过时（true）会一直转
function BattleUnitCom_Rotate:Start(_caller, _notCheckReachPoint)
	self.__started = true
	---@private
	---@type BattleUnit_PathFindCaller
	self.__caller = _caller
	self.__notCheckReachPoint = _notCheckReachPoint
	--LogTools.LogByLevel(LogLevel.log, "CheckLuaBehav", "BattleUnitCom_Rotate", "start", "netId", self.__netId, "self.__getTargetDirFunc", self.__getTargetDirFunc)
end

---@public
function BattleUnitCom_Rotate:Stop()
	--LogTools.LogByLevel(LogLevel.log, "CheckLuaBehav", "BattleUnitCom_Rotate", "Stop", "netId", self.__netId)
	self.__caller = nil
	self.__started = false
end

---@private
function BattleUnitCom_Rotate:__OnRotateEnd()
	--LogTools.LogByLevel(LogLevel.log, "BattleUnitCom_Rotate", "__OnRotateEnd", "netId", self.__netId)
	self.__started = false
	if not self.__caller then return end
	self.__caller:FindPathCallBack()
end

---碰到障碍物
---@public
---@param _hitPos Vector3 撞墙修正位置
---@param _hitDir Vector3 撞墙修正移动方向
---@param _isEdge boolean 是否是撞到边界
function BattleUnitCom_Rotate:OnHitBlock(_hitPos, _hitDir, _isEdge)
	if self.__caller then
		self.__caller:OnHitBlock(_hitPos, _hitDir, _isEdge)
	end
end

---@public
function BattleUnitCom_Rotate:Update(_deltaTime)
	if not self:__CheckUpdate(_deltaTime) then return end
	--LuaProfiler.BeginSample("BattleUnitCom_Rotate")
	if self.__actionManager:CheckHasForceAcc() then
		if LogTools.AreaLog and CheckLogLevel(LogLevel.log) then
			LogTools.LogByLevel(LogLevel.log, "区域牵引", "BattleUnitCom_Rotate", "处于被牵引状态，取消AI移动输入", "netId", self:GetUnit():GetNetId())
		end
		--LuaProfiler.EndSample("BattleUnitCom_Rotate")
		return
	end

	local battleRoom = self:GetUnit():GetBattleRoom()
	if not self.__notCheckReachPoint and battleRoom.battleLogicEventService:CheckUnitReachPoint(self.__netId) then
		--LogTools.LogByLevel(LogLevel.log, "rotateFix", "BattleUnitCom_Rotate", "Update", "CheckEventTrigger", "netId", self.__netId)
		self:__OnRotateEnd()
		--LuaProfiler.EndSample("BattleUnitCom_Rotate")
		return
	end

	if not self.__caller:GetTargetDir(self.__v3TargetDirCache, _deltaTime) then
		--LogTools.LogByLevel(LogLevel.log, "rotateFix", "BattleUnitCom_Rotate", "Update", "not GetTargetDir", "netId", self.__netId)
		self:__OnRotateEnd()
		return
	end

	--if not self.__actionManager:Move2Point(nil, self.__v3TargetDirCache, self.__caller:RotateSkipAngleCheck()) then
	--	self:__OnRotateEnd()
	--	return
	--end
	
	if not self.__actionManager:AiMove(nil, self.__v3TargetDirCache, self.__caller:RotateSkipAngleCheck()) then
		self:__OnRotateEnd()
		return
	end
	--LuaProfiler.EndSample("BattleUnitCom_Rotate")	
end

---@private
function BattleUnitCom_Rotate:__CheckUpdate(_deltaTime)
	if not self.__started then return false end
	if not self.__caller then return false end
	if self:GetBattleRoom():CheckPauseLevelNormalLogic() then return false end
	if not self.__behavCom then
		---@type BattleUnitCom_Behav
		self.__behavCom = self.__unit:GetComponent(BattleUnitComponentType.Behav)
		if not self.__behavCom then return false end
	end
	if self.__behavCom:CheckAIPaused() then return false end
	return true
end

---@public
function BattleUnitCom_Rotate:Clear()
	----LogTools.LogByLevel(LogLevel.log, "BattleUnitCom_Rotate", "Clear", "netId", self.__netId)
	self:GetBattleRoom().Vector3Pool:Push(self.__v3TargetDirCache)
	self.__caller = nil
	self.__actionManager = nil
	self.__started = nil
	self.__v3TargetDirCache = nil
	self:__Clear()
end
return BattleUnitCom_Rotate
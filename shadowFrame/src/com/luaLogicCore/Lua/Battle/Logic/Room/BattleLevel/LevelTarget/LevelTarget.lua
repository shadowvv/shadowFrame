---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hejincheng.
--- DateTime: 2022/3/1 16:49

require "Lib/class"

---@class LevelTarget : table
---@field id number
---@field targetType LevelTargetType
---@field targetValue1 number
---@field targetValue2 number
---@field eventType number 事件类型
---@field curProgress number 当前进度
---@field finish boolean 是否完成
LevelTarget = class(nil, 'LevelTarget');

---@param _id number 目标id
---@param _mainId number 主目标id
---@param _targetType LevelTargetType
function LevelTarget:ctor(_id, _mainId, _targetType, _targetValue1, _targetValue2, _targetValue3)
    self.id = _id
    self.mainId = _mainId
    self.targetType = _targetType
    self.targetValue1 = _targetValue1
    self.targetValue2 = _targetValue2
    self.targetValue3 = _targetValue3
    self.eventType = _targetType:GetEvent()
    self.curProgress = 0
    self.maxProgress = 0
    self.finish = false
end

-- 添加进度
---@public
---@param _battleLogicEvent BattleLogicEventV2
---@param _uid number
---@return number,number
function LevelTarget:UpdateProgress(_battleLogicEvent, _uid)
    ---@type function
    local getFunc = self.targetType.getProgressFunc
    if not getFunc then
        -- 没有定义回调函数，默认处理
        self.curProgress = self.curProgress + 1
        if self.curProgress >= self.targetValue1 and self.targetType:IsCanFinish() then
            self.finish = true
        end
        self.maxProgress = self.targetValue1
        return self.curProgress, self.targetValue1
    end

    local _targets = self:SelectCheckEventTarget(_uid, _battleLogicEvent.battleId)
    ---@type number
    local _curProgress, _maxProgress = getFunc(self, _battleLogicEvent, _targets)
    if not _curProgress then
        -- 不更新进度
        return nil, nil
    end
    if not _maxProgress then
        -- 不返回最大进度，默认取第一个配的值
        _maxProgress = self.targetValue1
    end

    -- 不能超过最大值
    if _curProgress >= _maxProgress then
        _curProgress = _maxProgress
    end
    self.curProgress = _curProgress
    if self.curProgress >= _maxProgress and self.targetType:IsCanFinish() then
        -- 完成进度
        self.finish = true
    end
    self.maxProgress = _maxProgress
    return self.curProgress, _maxProgress
end

---筛选条件检测目标
---@public
---@param _uid number
---@param _battleId number
function LevelTarget:SelectCheckEventTarget(_uid, _battleId)
    local battleRoom = GetBattleRoom(_battleId)
    if battleRoom.battleLevelManager.levelTargetManager:CheckTargetScope(self.targetType, LevelConditionScope.Player) then
        return { battleRoom.battleUnitManager:GetUnitByPlayerId(_uid) }
    end
    return battleRoom.battleUnitManager:GetUnitListByUnitType(BattleUnitType.Player)
end

return LevelTarget;
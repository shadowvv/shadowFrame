---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/03/09 11:58
--- Describe: 指定移动
---

---@class BehavState_MoveTowards : BattleUnit_PathFindCaller
BehavState_MoveTowards = class(BattleUnit_PathFindCaller, "BehavState_MoveTowards")

---@public
---@param _behavCom BattleUnitCom_Behav
function BehavState_MoveTowards:Init(_behavCom)
	---@private
	---@type BattleUnitCom_Behav
	self.__behavCom = _behavCom
	self:__Init(_behavCom:GetUnit(), 1000, 15)
	self:__InitStateUseInfos()
	self.__running = false
end

---初始化一些当前behavState需要使用的专属信息
---@private
function BehavState_MoveTowards:__InitStateUseInfos()
	---@private
	---@type LuaBehav_Define_SpaceType
	self.__spaceType = nil
	---@private
	---@type boolean
	self.__stopWhenArrive = true
end

------------------------------------------------------------------------------------------------------------------------
---开启行为
---@public
function BehavState_MoveTowards:Start(_spaceType, _posShift, _stopWhenArrive)
	--LogTools.LogByLevel(LogLevel.log, "behavState", "BehavState_MoveTowards:Start", "Start", "netId", self.__unitSelf:GetNetId())
	if self.__running then return end
	self.__running = true

	self.__spaceType = _spaceType
	self.__stopWhenArrive = _stopWhenArrive
	Vector3.Copy(self.__v3TargetShiftPos, _posShift)
	self.__comPathFind:Open(true)
	self:CallPathFind()
end

---结束行为
---@public
function BehavState_MoveTowards:Stop()
	--LogTools.LogByLevel(LogLevel.log, "behavState", "BehavState_MoveTowards:Stop", "Start", "netId", self.__unitSelf:GetNetId())
	self:ReleaseHitBlockParams()
	if not self.__running then return end
	self.__running = false
	
	self.__comPathFind:Open(false)
	self.__comPathFind:StopPathFind()
	self.__actionManagerSelf:Exit(self.__actionManagerSelf:GetCurrentMoveState(), false)
end

------------------------------------------------------------------------------------------------------------------------
---@public
function BehavState_MoveTowards:CallPathFind()
	self:__ResetReFindTimeCount()
	self.__comPathFind:StartPathFind(self, not self.__stopWhenArrive)
end

---获取目标点
---@public
---@param _v3Receiver Vector3 用于接收结果的vec3
---@return boolean 是否成功获取到目标点
function BehavState_MoveTowards:GetTargetPos(_v3Receiver)

	if not self:CheckHitBlockType(BattleUnitAiHitBlockType.None) then
		self:ReleaseHitBlockParams()
		return false
	end
	
	local _targetPos = self.__behavCom:GetBattleRoom().vector3Pool:Pop()
	if self.__spaceType == LuaBehav_Define_SpaceType.SelfSpace then
		local _v3ShiftInWorld = self.__behavCom:GetBattleRoom().vector3Pool:Pop()
		Vector3.MulQuat(self.__v3TargetShiftPos, self.__actionManagerSelf:GetRotation(), _v3ShiftInWorld)
		Vector3.Add(self.__actionManagerSelf:GetPosition(), _v3ShiftInWorld, _targetPos)
		self.__behavCom:GetBattleRoom().vector3Pool:Push(_v3ShiftInWorld)
	else
		Vector3.Copy(_targetPos, self.__v3TargetShiftPos)
	end
	
	if self.__stopWhenArrive then --向指定点移动
		Vector3.Copy(_v3Receiver, _targetPos)
	else  --向指定点代表的方向移动
		local _dir = self.__behavCom:GetBattleRoom().vector3Pool:Pop()
		Vector3.Sub(_targetPos, self.__actionManagerSelf:GetPosition(), _dir)
		Vector3.SetNormalize(_dir)
		Vector3.MulNumber(_dir, 1000)
		Vector3.Add(self.__actionManagerSelf:GetPosition(), _dir, _v3Receiver)
		self.__behavCom:GetBattleRoom().vector3Pool:Push(_dir)
	end
	self.__behavCom:GetBattleRoom().vector3Pool:Push(_targetPos)
	
	self:ReleaseHitBlockParams()
	return true
end

---寻路移动结束时的回调
---@public
function BehavState_MoveTowards:FindPathCallBack()
	if not self.__behavCom:GetBattleRoom().behaviorProcessor:CheckMonsAIHost() then return end
	self.__behavCom:GetBattleRoom().behaviorManager:PostTaskListenEvent(self.__behavCom:GetTreeIndex(), LuaBehav_Define_TaskListenEnum.MoveTowardsEnd)
end

------------------------------------------------------------------------------------------------------------------------
function BehavState_MoveTowards:CheckRunning()
	return self.__running
end

function BehavState_MoveTowards:Clear()
	self:Stop()
	self.__behavCom = nil
	self.__spaceType = nil
	self.__stopWhenArrive = nil
	self.__running = nil
	self:__Clear()
end
return BehavState_MoveTowards
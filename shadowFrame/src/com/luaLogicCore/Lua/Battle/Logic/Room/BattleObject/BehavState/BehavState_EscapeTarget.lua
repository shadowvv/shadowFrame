---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/03/07 15:11
--- Describe: 远离目标
---

---@class BehavState_EscapeTarget : BattleUnit_PathFindCaller
BehavState_EscapeTarget = class(BattleUnit_PathFindCaller, "BehavState_EscapeTarget")

---@public
---@param _behavCom BattleUnitCom_Behav
function BehavState_EscapeTarget:Init(_behavCom)
	---@private
	---@type BattleUnitCom_Behav
	self.__behavCom = _behavCom
	self:__Init(_behavCom:GetUnit(), 1000, 15)
	self:__InitStateUseInfos()
	self.__running = false
end

---初始化一些当前behavState需要使用的专属信息
---@private
function BehavState_EscapeTarget:__InitStateUseInfos()
	---@private
	---@type ActionStateManage
	self.__actionManagerTarget = nil
end

------------------------------------------------------------------------------------------------------------------------
---开启行为
---@public
---@param _targetNetId number 要逃离的目标unit的netId
function BehavState_EscapeTarget:Start(_targetNetId)
	--LogTools.LogByLevel(LogLevel.log, "behavState", "BehavState_EscapeTarget:Start", "Start", "netId", self.__unitSelf:GetNetId())
	if self.__running then return end
	self.__running = true
	
	local _unitTarget = self.__unitSelf:GetBattleRoom().battleUnitManager:GetUnit(_targetNetId)
	if not _unitTarget then return end
	self.__actionManagerTarget = _unitTarget:GetActionManager()
	if not self.__actionManagerTarget then return end
	self.__comPathFind:Open(true)
	self:CallPathFind()
end

---结束行为
---@public
function BehavState_EscapeTarget:Stop()
	--LogTools.LogByLevel(LogLevel.log, "behavState", "BehavState_EscapeTarget:Stop", "Start", "netId", self.__unitSelf:GetNetId())
	self:ReleaseHitBlockParams()
	if not self.__running then return end
	self.__running = false
	
	self.__comPathFind:Open(false)
	self.__comPathFind:StopPathFind()
	self.__actionManagerSelf:Exit(self.__actionManagerSelf:GetCurrentMoveState(), false)
	self.__actionManagerTarget = nil
end

------------------------------------------------------------------------------------------------------------------------
---调用寻路组件
---远离目标时不走寻路
---@public
function BehavState_EscapeTarget:CallPathFind()
	self:__ResetReFindTimeCount()
	self.__comPathFind:StartPathFind(self, true)
end

---获取目标点
---@public
---@param _v3Receiver Vector3 用于接收结果的vec3
---@return boolean 是否成功获取到目标点
function BehavState_EscapeTarget:GetTargetPos(_v3Receiver)
	if not self.__actionManagerTarget then return false end

	if self:CheckHitBlockType(BattleUnitAiHitBlockType.Edge) then
		self:ReleaseHitBlockParams()
		return false
	end
	local _v3EscapeDir = self.__behavCom:GetBattleRoom().vector3Pool:Pop()
	if not self.__behavCom:GetBattleRoom().transUtil:GetUnitForwardDir(self.__unitSelf:GetNetId(), _v3EscapeDir) then
		self.__behavCom:GetBattleRoom().vector3Pool:Push(_v3EscapeDir)
		return false
	end
	
	Vector3.SetNormalize(_v3EscapeDir)
	Vector3.MulNumber(_v3EscapeDir, 100)
	Vector3.Add(self.__actionManagerTarget:GetPosition(), _v3EscapeDir, self.__v3LastTargetPos)
	self.__behavCom:GetBattleRoom().vector3Pool:Push(_v3EscapeDir)
	Vector3.Copy(_v3Receiver, self.__v3LastTargetPos)
	self:ReleaseHitBlockParams()
	return true
end

------------------------------------------------------------------------------------------------------------------------
---@public
---@return boolean
function BehavState_EscapeTarget:CheckRunning()
	return self.__running
end

---@public
function BehavState_EscapeTarget:Clear()
	self:Stop()
	self.__behavCom = nil
	self.__actionManagerTarget = nil
	self.__running = nil
	self:__Clear()
end

return BehavState_EscapeTarget
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2022/6/9 17:37

require "Lib/class"
require "Battle/Logic/Room/BattleLogicEvent/BattleLogicEventV2"

---@class BattleLogicWeakPointBreakEvent : BattleLogicEventV2
---@field eventType number 事件类型
---@field battleId number 战斗id
---@field eventCompareParam table 事件参数
---@field eventTriggerParam table 事件透传参数
---@field netId number 事件产出单位Id
---@field objectId number 事件产出物体Id
BattleLogicWeakPointBreakEvent = class(BattleLogicEventV2, 'BattleLogicWeakPointBreakEvent');

---@param _eventType number 事件类型
---@param _eventCompareParam table 事件参数
---@param _eventTriggerParam table 事件透传参数
---@param _netId number 事件产出单位Id
---@param _objectId number 事件产出物体Id
function BattleLogicWeakPointBreakEvent:ctor(_eventType, _eventCompareParam, _eventTriggerParam, _netId, _objectId, _battleId)
    self.battleId = _battleId
    self.eventType = _eventType;
    self.eventCompareParam = _eventCompareParam;
    self.eventTriggerParam = _eventTriggerParam;
    self.netId = _netId;
    self.objectId = _objectId;
    self.survival = 0;
end

---检测事件触发，默认没有比较参数
---@public
---@param _eventCompareParam table 比较参数
function BattleLogicWeakPointBreakEvent:CheckEventTrigger(_eventCompareParam)
    if _eventCompareParam.weakPointId and _eventCompareParam.weakPointId ~= self.eventCompareParam.weakPointId then
        return false;
    end
    return true;
end

---事件回调，默认为空
---@public
function BattleLogicWeakPointBreakEvent:FireEvent()
    if self.survival == 0 then
        -- 弱点击破掉落物
        local battleRoom = GetBattleRoom(self.battleId)
        if battleRoom then
            local _triggerUnit = battleRoom.battleUnitManager:GetUnit(self.eventTriggerParam.triggerUnitNetId, true)
            if _triggerUnit then
                ---@type WeakPoint
                local _weakPoint = battleRoom.inputDataSource:GetDict("WeakPoint", self.eventCompareParam.weakPointId)
                if _weakPoint then
                    local _unitPosition = _triggerUnit:GetActionManager().position
                    local _unitRotation = _triggerUnit:GetActionManager().rotation
                    -- 位置偏移
                    local offset = Quaternion.MulVec3(_unitRotation, Vector3.New(_weakPoint.position[1], _weakPoint.position[2], _weakPoint.position[3]))
                    offset.Add(offset, _unitPosition)

                    -- 1.固定掉落物
                    for i = 1, #_weakPoint.fallObjectId do
                        ---@type number
                        local _fallObjectId = _weakPoint.fallObjectId[i]
                        -- 取对应的弱点掉落物数量
                        if i <= #_weakPoint.fallObjectCount then
                            ---@type number
                            local _fallObjectCount = _weakPoint.fallObjectCount[i]
                            battleRoom.fallObjectManager:DropFallObjectByPosition(_fallObjectId, _fallObjectCount, self.netId, self.objectId, offset, _unitRotation, false)
                        end
                    end
                    -- 2.随机掉落物
                    local _randomFallArr = _weakPoint.randomFall
                    local _weightArr = _weakPoint.probablility
                    for _ = 1, _weakPoint.randomFallObjectCount do
                        ---@type number
                        local _fallObjectId = battleRoom.randomUtil:RandomByWeight(_randomFallArr, _weightArr)
                        if _fallObjectId then
                            battleRoom.fallObjectManager:DropFallObjectByPosition(_fallObjectId, 1, self.netId, self.objectId, offset, _unitRotation, false)
                        end
                    end
                end
            end
        end
    end
end

---@public 检测互斥事件
---@param _event BattleLogicEventV2 新事件
---@return boolean 是否互斥
function BattleLogicWeakPointBreakEvent:CheckMutexEvent(_event)
    return false;
end

---检测移除事件，默认事件会在trigger之后的下一帧被移除
---@public
function BattleLogicWeakPointBreakEvent:CheckRemoveEvent()
    self.survival = self.survival + 1;
    if self.survival > 1 then
        return true;
    end
    return false;
end

return BattleLogicWeakPointBreakEvent;
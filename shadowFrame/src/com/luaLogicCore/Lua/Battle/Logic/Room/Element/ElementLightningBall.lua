---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hejincheng.
--- DateTime: 2022/3/23 11:22

require "Lib/class"
require "Battle/Logic/Room/Element/ElementBall"

---@class ElementLightningBall : ElementBall
---@field id number 闪电球id
---@field maxRadius number 扩展半径
---@field maxDistance number 最大传导距离
---@field spreadTime number 传导时间
---@field maxCount number 最大传导次数
---@field initTime number 闪电球初始时间
---@field curBattleUnit BattleUnitBase 闪电球当前所在单位
---@field castUnit BattleUnitBase 释放者
---@field buffGroupId number buff id
---@field customParam table[] buff参数
---@field targetBattleUnit BattleUnitBase 闪电球传导目标单位
ElementLightningBall = class(ElementBall, 'ElementLightningBall');

---@public
---@param _battleUnit BattleUnitBase
---@param _castUnit BattleUnitBase
---@param _buffGroupIds number buff id
---@param _buffParam table  behindParam
---@param _generateInfo table buff创建透传信息
function ElementLightningBall:ctor(_battleUnit, _castUnit, _buffGroupIds, _buffParam, _generateInfo)
    ---@type number
    local _maxRadius = _buffParam[BATTLE_ELEMENT_CONST.ELEMENT_LIGHTNING_BALL_RADIUS_INDEX]
    ---@type number
    local _eachMaxDistance = _buffParam[BATTLE_ELEMENT_CONST.ELEMENT_LIGHTNING_BALL_DISTANCE_INDEX]
    ---@type number
    local _spreadTime = _buffParam[BATTLE_ELEMENT_CONST.ELEMENT_LIGHTNING_BALL_SPREAD_TIME_INDEX]
    ---@type number
    local _maxCount = _buffParam[BATTLE_ELEMENT_CONST.ELEMENT_LIGHTNING_BALL_COUNT_INDEX]
    self:__Init(false, _battleUnit, _castUnit, _buffGroupIds, _generateInfo, _buffParam, _maxRadius, _eachMaxDistance, 0, _spreadTime, _maxCount, BATTLE_ELEMENT_CONST.ELEMENT_LIGHTNING_EFFECT_ID_INDEX)

    if LogTools.ElementBallLog and CheckLogLevel(LogLevel.log) then
        local _castUnitLog = "[" .. self.battleRoom.battleUnitManager:GetBattleUnitTypeName(self.castUnit:GetUnitType()) .. "][" .. self.castUnit:GetNetId() .. "][" .. tostring(self.castUnit:GetCurrentHeroObject():GetDicId()) .. "]"
        LogTools.LogByLevel(LogLevel.log, "元素", _castUnitLog .. "创建" .. self:GetElementBallLogName() .. "[" .. tostring(self.id) .. "]", "Buff组", dumpTableEx(_buffGroupIds), "最大半径", _maxRadius, "最大距离", _eachMaxDistance, "传播时间", _spreadTime, "最大传导次数", _maxCount)
    end
end

-- 元素球log名字
---@protected
---@return string
function ElementLightningBall:GetElementBallLogName()
    return "闪电链"
end

-- 寻找下一个目标
-- 随机选择目标
---@protected
---@return BattleUnitBase 筛选出来的目标
function ElementLightningBall:__SelectNextTarget()
    if not self.curBattleUnit then
        return
    end

    local curPosition = self.curBattleUnit:GetActionManager().position
    -- 满足条件的目标
    local targets = {}

    -- 筛选出符合条件的最近的目标
    for _, _campType in pairs(BattleUnitCampType) do
        if BattleUnitCom_Camp.CheckCampHurtable(self.castFirstCamp, _campType) then
            -- 可攻击阵营
            local _unitList = self.battleRoom.battleUnitManager:GetUnitListByCampType(_campType, false)
            for _, _unit in pairs(_unitList) do
                if _unit then
                    ---@type number 距离
                    local _targetDistance = Vector3.Distance(_unit:GetActionManager().position, curPosition)
                    if self.curBattleUnit:GetNetId() ~= _unit:GetNetId() and self:__CheckTargetCondition(_unit, _targetDistance) then
                        table.insert(targets, _unit)
                    end
                end
            end
        end
    end

    if #targets == 0 then
        return
    end
    -- 随机选择目标
    local targetIndex = self.battleRoom.randomUtil:RandomInt(1, #targets)
    return targets[targetIndex]
end

------------------------------------------------------------------------------------------------------------------------

-- 传导到目标
---@public
function ElementLightningBall:OnSpreadToUnit()
    if self.fromObjId == 0 then
        -- 没有起始点，就不用推客户端了
        return
    end
    local elementData = {
        createLightningBall = {
            id = self.id,
            targetObjId = self.curBattleUnit:GetCurrentHeroObjectId(),
            fromObjId = self.fromObjId,
            targetObjPos = self.curBattleUnit:GetActionManager():GetPosition(),
            fromObjPos = self.fromPosition,
            effectId = self.effectId
        }
    }
    -- 输出数据
    local outputData = {
        elementFieldInfo = elementData
    }
    self.battleRoom.outputDataSource:AddBattleFieldData(outputData)
end

return ElementLightningBall;
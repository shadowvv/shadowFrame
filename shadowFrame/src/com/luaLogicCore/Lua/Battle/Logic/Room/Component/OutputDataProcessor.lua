---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2021/12/16 11:05
--- logic_core输出数据处理器

require "Lib/class"

---@class OutputDataProcessor:table logic_core输出数据处理器
OutputDataProcessor = class(nil,'OutputDataProcessor');
function OutputDataProcessor:ctor(_battleId)
    ---@type number
    self.battleId = _battleId
    self.currentFrameId = 0;
    self.traceBackList = {};
    self.playerCurrentFrameId = {};
    self.tmpRemoveIndexDic = {};
end

--- 注册玩家
function OutputDataProcessor:RegisterBattleUnit(_netId)
    self.playerCurrentFrameId[_netId] = 0;
end

------------------------------------------------------------------------------------------------------------------------
--- 通知前端创建关卡触发器
---@public
---@param _generateLevelTrigger table 创建关卡触发器协议
function OutputDataProcessor:CreateLevelTriggerS2C(_generateLevelTrigger) end
--- 暂停怪物AI
---@public
---@param _MonsPauseAi_S2C table msg.MonsPauseAi_S2C
function OutputDataProcessor:PauseMonsAiS2C(_MonsPauseAi_S2C) end
--- 恢复怪物AI
---@public
---@param _MonsResumeAi_S2C table msg.MonsResumeAi_S2C
function OutputDataProcessor:ResumeMonsAiS2C(_MonsResumeAi_S2C) end
--- 怪物开启巡逻
---@public
---@param _UnitPatrol_S2C table msg.UnitPatrol_S2C
function OutputDataProcessor:StartMonsPatrolS2C(_UnitPatrol_S2C) end
--- 怪物停止巡逻
---@public
---@param _UnitPatrolCancel_S2C table msg.UnitPatrolCancel_S2C
function OutputDataProcessor:StopMonsPatrolS2C(_UnitPatrolCancel_S2C) end
--- 开始追逐目标
---@public
---@param _UnitChaseTarget_S2C table msg.UnitChaseTarget_S2C
function OutputDataProcessor:StartChaseTargetS2C(_UnitChaseTarget_S2C) end
--- 停止追逐目标
---@public
---@param _UnitStopChaseTarget_S2C table msg.UnitStopChaseTarget_S2C
function OutputDataProcessor:StopChaseTargetS2C(_UnitStopChaseTarget_S2C) end
--- 开始远离目标
---@public
---@param _UnitEscapeTarget_S2C table msg.UnitEscapeTarget_S2C
function OutputDataProcessor:StartEscapeTargetS2C(_UnitEscapeTarget_S2C) end
--- 停止远离目标
---@public
---@param _UnitStopEscapeTarget_S2C table msg.UnitStopEscapeTarget_S2C
function OutputDataProcessor:StopEscapeTargetS2C(_UnitStopEscapeTarget_S2C) end
--- 开始指定移动
---@public
---@param _UnitMoveTowards_S2C table msg.UnitMoveTowards_S2C
function OutputDataProcessor:StartMoveTowardsS2C(_UnitMoveTowards_S2C) end
--- 停止指定移动
---@public
---@param _UnitStopMoveTowards_S2C table msg.UnitStopMoveTowards_S2C
function OutputDataProcessor:StopMoveTowardsS2C(_UnitStopMoveTowards_S2C) end
--- 开始平移
---@public
---@param _UnitMoveTowards_2_S2C table msg.UnitMoveTowards_2_S2C
function OutputDataProcessor:StartMoveTowards_2_S2C(_UnitMoveTowards_2_S2C) end
--- 停止平移
---@public
---@param _UnitStopMoveTowards_2_S2C table msg.UnitStopMoveTowards_S2C
function OutputDataProcessor:StopMoveTowards_2_S2C(_UnitStopMoveTowards_2_S2C) end
--- 开始转向目标
---@public
---@param _UnitFaceTarget_S2C table msg.UnitFaceTarget_S2C
function OutputDataProcessor:StartFaceTargetS2C(_UnitFaceTarget_S2C) end
--- 停止转向目标
---@public
---@param _UnitStopFaceTarget_S2C table msg.UnitStopFaceTarget_S2C
function OutputDataProcessor:StopFaceTargetS2C(_UnitStopFaceTarget_S2C) end
--- 开始跟随召唤者
---@public
---@param _UnitChaseSubordinate_S2C table msg.UnitChaseSubordinate_S2C
function OutputDataProcessor:StartChaseSubordinateS2C(_UnitChaseSubordinate_S2C) end
--- 停止跟随召唤者
---@public
---@param _UnitStopChaseSubordinate_S2C table msg.UnitStopChaseSubordinate_S2C
function OutputDataProcessor:StopChaseSubordinateS2C(_UnitStopChaseSubordinate_S2C) end
--- 开始导航点移动
---@public
---@param _UnitMoveNavPoints_S2C table msg.UnitMoveNavPoints_S2C
function OutputDataProcessor:StartMoveNavPointsS2C(_UnitMoveNavPoints_S2C) end
--- 停止导航点移动
---@public
---@param _UnitStopMoveNavPoints_S2C table msg.UnitStopMoveNavPoints_S2C
function OutputDataProcessor:StopMoveNavPointsS2C(_UnitStopMoveNavPoints_S2C) end
--- 怪物施放技能
---@public
---@param _MonsCastSkill_S2C table msg.MonsCastSkill_S2C
function OutputDataProcessor:MonsCastSkillS2C(_MonsCastSkill_S2C) end
--- 发送寻路结果给服务器
---@public
---@param _UnitDead_S2C table msg.MonsterMoveInput
function OutputDataProcessor:SendPathFindResult(_MonsterMoveInput) end
------------------------------------------------------------------------------------------------------------------------
--- 通知表现层创建玩家角色
---@public
---@param _createPlayerCharacter2View table 创建角色协议
function OutputDataProcessor:CreatePlayerUnit(_createPlayerCharacter2View) end

--- 通知表现层创建怪物
---@public
---@param _createMonsterUnit2View table 创建怪物协议
function OutputDataProcessor:CreateMonsterUnit(_createMonsterUnit2View)

end

--- 通知表现层创建区域
---@public
---@param _createAreaTriggerUnit2View table 创建区域协议
function OutputDataProcessor:CreateAreaTriggerUnit(_createAreaTriggerUnit2View)

end

--- 通知表现层创建召唤物
---@public
---@param _createSummonedMonsUnit2View table 创建召唤物协议
function OutputDataProcessor:CreateSummonedMonsUnit(_createSummonedMonsUnit2View)

end

--- 通知表现层创建目标点
---@public
---@param _createTargetPointUnit2View table 创建目标点协议
function OutputDataProcessor:CreateTargetPointUnit(_createTargetPointUnit2View)

end

--- 通知表现层创建护罩
---@public
---@param _createShieldUnit2View table 创建护罩协议
function OutputDataProcessor:CreateShieldUnit(_createShieldUnit2View)

end
------------------------------------------------------------------------------------------------------------------------
--- 添加移动输出数据
---@public
---@param _battleMoveData table logic_core每帧输出的数据
function OutputDataProcessor:AddBattleUnitMoveData(_battleMoveData)

end

--- 添加改变输出数据
---@public
---@param _battleChangeData table logic_core每帧输出的数据
function OutputDataProcessor:AddBattleUnitChangeData(_battleChangeData)

end

--- 添加关键帧输出数据
---@public
---@param _battleKeyData table logic_core每帧输出的数据
function OutputDataProcessor:AddBattleUnitKeyData(_battleKeyData)

end

--- 添加战场输出数据
---@public
---@param _battleFieldData table logic_core每帧输出的数据
function OutputDataProcessor:AddBattleFieldData(_battleFieldData)

end

--- 玩家确认数据一致
---@public
---@param _netId number netId
---@param _frameId number 确认帧号
function OutputDataProcessor:onPlayerConfirmFrame(_netId,_frameId)
    self:DiscardOldData(_netId,_frameId);
end

--- 淘汰无用数据
---@public
---@param _netId number netId
---@param _frameId number 淘汰帧号
function OutputDataProcessor:DiscardOldData(_netId, _frameId)
    if self.traceBackList[_netId] == nil then
        self.traceBackList[_netId] = {};
    end
    for index, value in pairs(self.traceBackList[_netId]) do
        if index <= _frameId then
            table.insert(self.tmpRemoveIndexDic, index)
        end
    end
    -- 清空淘汰数据
    while self.tmpRemoveIndexDic and #self.tmpRemoveIndexDic > 0 do
        local _index = table.remove(self.tmpRemoveIndexDic, 1)
        table.remove(self.traceBackList[_netId], _index)
    end
end

--- 玩家回溯数据
---@public
---@param _netId number _netId
---@param _frameId number 回溯帧号
function OutputDataProcessor:TraceBack(_netId,_frameId)
    if self.traceBackList[_netId] == nil then
        self.traceBackList[_netId] = {};
    end
    local frameData= self.traceBackList[_netId][_frameId];
    self.traceBackList[_netId] = {};
    self.traceBackList[_netId][_frameId] = frameData;
    return frameData;
end

---@public
---@param _battleEvent BattleRoomEvent
function OutputDataProcessor:SendBattleRoomEvent(_battleEvent, _param)
    local battleEventTab = {
        battleEvent = _battleEvent:GetId(),
        params = tostring(_param)
    }
    --LogTools.LogByLevel(LogLevel.log, "OutputDataProcessor", "SendBattleRoomEvent", dumpTableEx(battleEventTab))
    COMMAND.SendCommandToSelf(PROTO_CODE_ENUM.BATTLE_LUA_EVENT_PUSH:GetId(), battleEventTab)
end

--- 切换关卡阶段
---@public
---@param _toStage number 切换的阶段
---@param _fromStage number 切换的阶段
function OutputDataProcessor:BattleLevelGoToStage(_toStage, _fromStage)
end

--- 切换关卡阶段(Client BattleLogic -> Client)
---@public
---@param _fromStage number 切换的阶段
---@param _toStage number 切换的阶段
function OutputDataProcessor:BattleLevelGoToStage_L2V(_fromStage, _toStage)
end

function OutputDataProcessor:NotifyBattleOverResult(_result)
end

--- 玩家切换英雄输入
---@public
---@param _battleOutputData table PlayerChangeLeader_S2C
function OutputDataProcessor:PlayerChangeLeaderS2C(_battleOutputData)

end

--- 玩家切换英雄
---@public
---@param _battleOutputData table PlayerChangeLeaderL2S
function OutputDataProcessor:PlayerChangeLeaderL2S(_battleOutputData)

end

--- 单位受伤广播
---@public
---@param _battleOutputData table PlayerChangeLeader_S2C
function OutputDataProcessor:UnitHurtS2C(_battleOutputData)

end

--- 单位受伤L2S
---@public
---@param _battleOutputData table PlayerChangeLeader_S2C
function OutputDataProcessor:UnitHurtL2S(_battleOutputData)

end

--- 单位受治疗广播
---@public
---@param _battleOutputData table PlayerChangeLeader_S2C
function OutputDataProcessor:UnitCureS2C(_battleOutputData)

end

-- 服务器向前端发起寻路请求
---@public
---@param _PathFindRequest table PathFindRequest
function OutputDataProcessor:SendPathFindRequest_S2C(_PathFindRequest) end

-- 服务器向前端取消寻路请求
---@public
---@param _PathFindRequestCancel table PathFindRequestCancel
function OutputDataProcessor:CancelPathFindRequest_S2C(_PathFindRequestCancel) end

-- 前端向表现层发起寻路请求
---@public
---@param _PathFindRequest table PathFindRequest
function OutputDataProcessor:SendPathFindRequest_L2V(_PathFindRequest) end

-- 前端向表现层取消寻路请求
---@public
---@param _PathFindRequestCancel table PathFindRequestCancel
function OutputDataProcessor:CancelPathFindRequest_L2V(_PathFindRequestCancel) end

--- 服务器向前端同步路点广播
---@public
---@param _battleOutputData table MonsterSyncPathPointList_S2C
function OutputDataProcessor:SyncPathPointListS2C(_battleOutputData) end

--- 创建发射器广播
---@public
---@param _battleOutputData table CreateEmitter_S2C
function OutputDataProcessor:CreateEmitterS2C(_battleOutputData)
end

-- 更新关卡阶段
---@public
---@param _curStageEnum number 当前阶段
function OutputDataProcessor:UpdateBattleLevelStage(_curStageEnum)
end

-- 设置战斗结果
---@public
---@param _playerId number 玩家id
---@param _battleResult number 战斗结果
---@param _overCondition number 战斗结束条件
function OutputDataProcessor:UpdateBattleResult(_playerId, _battleResult, _overCondition)
end

--- 战斗结束
---@public
---@param overResult BattleResult 战斗结果
---@param overCondition number 战斗结束条件
function OutputDataProcessor:BattleOver(overResult, overCondition)
end

-- 弹幕触发事件
---@public
function OutputDataProcessor:BarrageTrigEvent_L2V(_barrageTrigEvent_L2V)
end

--- 战斗单位死亡
---@public
---@param _UnitDead_l2v table msg.UnitDead_l2v
function OutputDataProcessor:UnitDeadL2V(_UnitDead_l2v)
end

--- 战斗单位切换血量阶段
---@public
---@param _UnitChangeStage_l2v table msg.UnitChangeStage_l2v
function OutputDataProcessor:UnitChangeStageL2V(_UnitChangeStage_l2v)
end

--- 战斗单位切换状态
---@public
---@param _BattleUnitStateChange_L2S table msg.UnitChangeStage_l2v
function OutputDataProcessor:BattleUnitStateChangeL2V(_BattleUnitStateChange_L2S)
end

--- 创建区域
---@public
---@param _CreateAreaTrig_L2V table msg.CreateAreaTrig_L2V
function OutputDataProcessor:CreateAreaTrigL2V(_CreateAreaTrig_L2V)
end

--- 开启区域
---@public
---@param _OpenAreaTrig_L2V table msg.OpenAreaTrig_L2V
function OutputDataProcessor:OpenAreaTrigL2V(_OpenAreaTrig_L2V)
end

--- 关闭区域
---@public
---@param _CloseAreaTrig_L2V table msg.CloseAreaTrig_L2V
function OutputDataProcessor:CloseAreaTrigL2V(_CloseAreaTrig_L2V)
end

--- 销毁区域
---@public
---@param _DestroyAreaTrig_L2V table msg.DestroyAreaTrig_L2V
function OutputDataProcessor:DestroyAreaTrigL2V(_DestroyAreaTrig_L2V)
end

-- 触发新手引导
---@public
function OutputDataProcessor:TrigBattleGuideS2C(_battleOutputData)
end

-- 触发新手引导(CL -> CV)
---@public
function OutputDataProcessor:TrigBattleGuideL2V(_battleOutputData)
end

-- 关卡触发新手引导UI操作(SL -> CL)
---@public
function OutputDataProcessor:LevelTrigGuideUIOperateS2C(_battleOutputData)
end

-- 关卡触发一般UI操作(SL -> CL)
---@public
function OutputDataProcessor:LevelTrigNormalUIOperateS2C(_battleOutputData)
end

-- 关卡触发新手引导UI操作(CL -> CV)
---@public
function OutputDataProcessor:LevelTrigGuideUIOperateL2V(_battleOutputData)
end

-- 关卡触发一般UI操作(CL -> CV)
---@public
function OutputDataProcessor:LevelTrigNormalUIOperateL2V(_battleOutputData)
end

-- 关卡触发玩家控制器操作(SL -> CL)
---@public
function OutputDataProcessor:LevelTrigControllerOperateS2C(_battleOutputData)
end

-- 关卡触发玩家控制器操作(CL -> CV)
---@public
function OutputDataProcessor:LevelTrigControllerOperateL2V(_battleOutputData)
end

-- 创建场景物件(CL -> CV)
---@public
function OutputDataProcessor:CreateSceneObjL2V(_battleOutputData)
end

-- 移除场景物件(CL -> CV)
---@public
function OutputDataProcessor:RemoveSceneObjL2V(_battleOutputData)
end

-- 切换场景物件状态(CL -> CV)
---@public
function OutputDataProcessor:ChangeSceneObjStateL2V(_battleOutputData)
end

-- 切换战斗BGM
---@public
function OutputDataProcessor:ChangeBattleBGML2V(_battleOutputData)
end

-- 打开高能预警
---@public
function OutputDataProcessor:OpenWarningUIL2V(_battleOutputData)
end

-- 打开战斗内通讯
---@public
function OutputDataProcessor:OpenBattleCommunicationL2V(_battleOutputData)
end

---单位目标改变
---@public
function OutputDataProcessor:UnitTargetChangeL2V(_battleOutputData)
end

-- 生命周期重置
---@public
function OutputDataProcessor:ObjectLifeResetL2V(_battleOutputData)
end

function OutputDataProcessor:BroadCastMoveOutputData(_frameId, _dt)
    
end

-- 开启分块
---@public
function OutputDataProcessor:BattleUnitOpenBlockL2V(_battleOutputData)
end
-- 关闭分块
---@public
function OutputDataProcessor:BattleUnitCloseBlockL2V(_battleOutputData)
end
-- 开启弱点
---@public
function OutputDataProcessor:BattleUnitOpenWeaknessL2V(_battleOutputData)
end
-- 关闭弱点
---@public
function OutputDataProcessor:BattleUnitCloseWeaknessL2V(_battleOutputData)
end
-- 隐藏分块
---@public
function OutputDataProcessor:BattleUnitHideBlockL2V(_battleOutputData)
end
-- 隐藏分块结束
---@public
function OutputDataProcessor:BattleUnitHideBlockEndL2V(_battleOutputData)
end
-- 隐藏分块网格
---@public
function OutputDataProcessor:BattleUnitHideBlockMeshL2V(_battleOutputData)
end
-- 隐藏分块网格结束
---@public
function OutputDataProcessor:BattleUnitHideBlockMeshEndL2V(_battleOutputData)
end
-- 弱点血量变化
---@public
function OutputDataProcessor:BattleUnitWeaknessHPChangeL2V(_battleOutputData)
end

--- 单位修改分块状态
---@public
function OutputDataProcessor:UnitChangeBlockStateS2C(_UnitChangeBlockState_S2C) end

--- 单位交互结果
---@public
function OutputDataProcessor:BattleUnitHandleResultS2C(_BattleUnitHandleResult_S2C) end

--- 改变Tag值
---@public
function OutputDataProcessor:ChangeTagS2C(_changeTag_S2C) end

--- 改变Tag值
---@public
function OutputDataProcessor:ChangeTag_L2V(_changeTag_L2V) end

--- 单位交互结果
---@public
function OutputDataProcessor:BattleUnitHandleResultL2V(_BattleUnitHandleResult_L2V) end

-- 单位交互状态变化
---@public
function OutputDataProcessor:BattleUnitHandleStateChangeL2V(_battleOutputData) end

-- 采集玩法玩家金币积分变化
---@public
function OutputDataProcessor:CollectorCoinPointsChangeL2V(_battleOutputData) end

-- 采集金币次数改变
---@public
function OutputDataProcessor:CollectorCoinNumChangeL2V(_battleOutputData) end

-- 玩家离开
---@public
function OutputDataProcessor:PlayerLeaveL2V(_playerLeave_L2V) end

-- 玩家进入
---@public
function OutputDataProcessor:PlayerEnterL2V(_playerEnter_L2V) end

-- 玩家重连
function OutputDataProcessor:SendPlayerReconnectInfo(_playerReconnectBattleRoomInfo_S2C) end

-- 玩家重连发给显示层
function OutputDataProcessor:SendPlayerReconnectInfoL2V(_playerReconnectBattleRoomInfo_L2V) end

-- 同步关卡暂停时间
---@public
function OutputDataProcessor:SyncLevelPauseTime_S2C(_syncLevelPauseTime_S2C) end

-- 获取主线三星
---@public
function OutputDataProcessor:GetLevelThreeStarList_S2C(_getLevelThreeStarList_S2C) end

-- 获取主线三星
---@public
function OutputDataProcessor:GetLevelThreeStarListToClient(_playerId, _getLevelThreeStarList) end

-- 播放表演
---@public
function OutputDataProcessor:BattlePlayAct_S2C(_battlePlayAct_S2C) end

-- 播放ui
---@public
function OutputDataProcessor:BattlePlayUI_S2C(_battlePlayUI_S2C) end

-- 播放剧情
---@public
function OutputDataProcessor:BattlePlayPlot_S2C(_battlePlayPlot_S2C) end

-- 结束播放剧情
---@public
function OutputDataProcessor:BattlePlayPlotEnd_S2C(_battlePlayPlotEnd_S2C) end

-- 结束播放表演
---@public
function OutputDataProcessor:BattlePlayActEnd_S2C(_battlePlayActEnd_S2C) end

-- 销弹
---@public
function OutputDataProcessor:DestroyBullet(_destroyBullet) end

-- 拾取掉落物
---@public
function OutputDataProcessor:PickUpDropFallObject(_pickUpDropFallObjects) end

-- 表演结束
---@public
function OutputDataProcessor:BattlePlayActEnd(_battlePlayActEnd) end

-- 剧情结束
---@public
function OutputDataProcessor:BattlePlotPlotEnd(_battlePlotActEnd) end

-- 单位属性变化L2V
---@public
function OutputDataProcessor:BattleUnitPropChangeL2V(_battleUnitPropChange_L2V) end

-- 展示战斗结束ui
---@public
function OutputDataProcessor:BattleOver_L2V(overData) end

-- 逻辑核关闭
---@public
function OutputDataProcessor:BattleLogicClose_L2S() end

-- 进入消息
---@public
function OutputDataProcessor:LocalScenePreEnter() end

-- 本地的登录消息
---@public
function OutputDataProcessor:BattleLogin_L2V(msg) end

-- 展示ui
---@public
function OutputDataProcessor:BattleShowRunUi_L2S() end

-- 掉落
---@public
function OutputDataProcessor:DropFallObject_L2S(msg) end

-- 掉落
---@public
function OutputDataProcessor:PickUpFallObject_L2S(msg) end

-- 元素
---@public
function OutputDataProcessor:ElementReact_L2S(msg) end

-- 元素
---@public
function OutputDataProcessor:ElementAttach_L2S(msg) end

-- 元素
---@public
function OutputDataProcessor:ElementValueChange_L2V(msg) end

-- 元素
---@public
function OutputDataProcessor:ElementRemove_L2S(msg) end

-- 元素
---@public
function OutputDataProcessor:ElementReduceWarning_L2S(msg) end

-- 元素
---@public
function OutputDataProcessor:ElementCancelReduceWarning_L2V(msg) end

-- 元素
---@public
function OutputDataProcessor:CreateElementLightningBall_L2S(msg) end

-- 元素
---@public
function OutputDataProcessor:CreateElementIceWindBall_L2V(msg) end

-- 显示层开始播放UI
---@public
function OutputDataProcessor:ClientStartPlayUi(msg) end

-- 显示层开始玩家剧情
---@public
function OutputDataProcessor:ClientStartPlayPlot(msg) end

-- 显示层开始玩家表演
---@public
function OutputDataProcessor:ClientStartPlayAct(msg) end

-- 通知显示层停止玩家剧情
---@public
function OutputDataProcessor:ServerEndPlayPlot(msg) end

-- 通知显示层停止玩家表演
---@public
function OutputDataProcessor:ServerEndPlayAct(msg) end

-- 通武器进入过载
---@public
function OutputDataProcessor:WeaponEnterOverLoad_S2C(msg) end

-- 通武器进入过载
---@public
function OutputDataProcessor:WeaponEnterOverLoad_L2V(msg) end

--- 退出过载状态
---@public
function OutputDataProcessor:WeaponExitOverLoad_S2C(msg) end

--- 退出过载状态
---@public
function OutputDataProcessor:WeaponExitOverLoad_L2V(msg) end

-- 进入能量恢复状态
---@public
function OutputDataProcessor:WeaponEnterRecoverEnergyState_S2C(msg) end

-- 退出能量恢复状态
---@public
function OutputDataProcessor:WeaponExitRecoverEnergyState_S2C(msg) end

--- 换弹开始
---@public
function OutputDataProcessor:ReloadBulletStart_L2V(msg) end

--- 换弹结束
---@public
function OutputDataProcessor:ReloadBulletEnd_L2V(msg) end

--- 换弹开始
---@public
function OutputDataProcessor:ReloadBulletStart_S2C(msg) end

--- 换弹结束
---@public
function OutputDataProcessor:ReloadBulletEnd_S2C(msg) end

--- 战斗单位obj死亡L2V
---@public
---@param _outPut table
function OutputDataProcessor:ObjectDeadL2V(_outPut) end

--- 关卡时间变更
---@public
function OutputDataProcessor:LevelChangeTimeLimit_S2C(msg) end

--- 关卡时间变更
---@public
function OutputDataProcessor:LevelChangeTimeLimit_L2V(msg) end

--- 本地模式回复进场景
---@public
function OutputDataProcessor:LocalSceneEnter_S2C() end

--- 怪物勇士状态改变
---@public
function OutputDataProcessor:UnitChangeWarriorState_L2V(msg) end

--- 行为树状态
---@public
function OutputDataProcessor:PushBehavInfo_S2C(msg) end

--- 行为树状态
---@public
function OutputDataProcessor:PushBehavInfo_L2V(msg) end

--- 开始朝向目标L2V
---@public
function OutputDataProcessor:StartFaceTarget_L2V(msg) end

--- 结束朝向目标L2V
---@public
function OutputDataProcessor:StopFaceTarget_L2V(msg) end

--- 弱点击破
---@public
function OutputDataProcessor:WeaknessBroken_S2C(msg) end

--- 弱点击破
---@public
function OutputDataProcessor:WeaknessBroken_L2V(msg) end

--- 肉鸽主公技开启状态变化
---@public
function OutputDataProcessor:RogueUnitSkillOpenedChange_L2V(msg) end

--- unit覆盖护罩变化
---@public
function OutputDataProcessor:UnitCoverShieldChange_L2V(msg) end

--- 开始切换血量阶段
---@public
function OutputDataProcessor:UnitStartChangeStage_S2C(msg) end

--- 通知显示层开始切换血量阶段
---@public
function OutputDataProcessor:UnitStartChangeStage_L2V(msg) end

return OutputDataProcessor;
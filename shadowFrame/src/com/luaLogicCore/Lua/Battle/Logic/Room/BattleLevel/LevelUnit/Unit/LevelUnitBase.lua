---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hejincheng.
--- DateTime: 2022/3/16 16:26
--- 关卡单位基类

require "Lib/class"

---@class LevelUnitBase : table
---@field id number id
---@field type LevelUnitType 类型
---@field groupId number 分组ID
---@field instanceId number 实例ID
---@field position Vector3 位置
---@field rotation Vector3 旋转
---@field scale Vector3 缩放
---@field keyUnit boolean 关键单位
---@field initRefresh boolean 初始刷新
---@field target boolean 守护目标
---@field targetId number 守护目标id
---@field warriorStatus boolean 勇士怪
---@field state LevelUnitStateEnum 状态
---@field camp number 阵营
---@field targetPointId number 目标点id
---@field initState number 初始状态
LevelUnitBase = class(nil, 'LevelUnitBase');

function LevelUnitBase:ctor()
end

function LevelUnitBase:__Init(_battleId, _unitData)
    ---@type number
    self.battleId = _battleId
    self.battleRoom = GetBattleRoom(self.battleId)

    self.id = _unitData.id
    self.type = GetLevelUnitTypeById(_unitData.type)
    self.groupId = _unitData.groupId
    self.instanceId = _unitData.instanceId
    self.position = Vector3.Clone(_unitData.position)
    self.randomPosition = _unitData.randomPosition or false
    local _randomPosRange = Vector3.Clone(_unitData.randomRange or Vector3.zero_global())
    self.bornPosRangeDown = self.position - _randomPosRange
    self.bornPosRangeUp = self.position + _randomPosRange
    self.rotation = _unitData.rotation
    self.scale = _unitData.scale
    self.keyUnit = _unitData.keyUnit
    self.initRefresh = _unitData.initRefresh
    self.target = _unitData.target
    self.targetId = _unitData.targetId
    self.warriorStatus = _unitData.warriorStatus
    self.camp = _unitData.camp
    self.targetPointId = _unitData.targetPointId
    -- 初始状态
    self.state = LevelUnitStateEnum.INITIAL
    self.initState = _unitData.initState
    
    self.netId = nil
end

---@public
---@param _battleId number
---@param _unitData table 编辑器数据,LevelConfig.unitData
function LevelUnitBase:Init(_battleId, _unitData)
    self:__Init(_battleId, _unitData)
end

---@public
---@param _id number
---@param _battleId number
---@param _instanceId number
---@param _levelUnitType LevelUnitType
function LevelUnitBase:InitByInstanceId(_id, _battleId, _instanceId, _levelUnitType)
    ---@type number
    self.battleId = _battleId
    self.battleRoom = GetBattleRoom(self.battleId)

    self.id = _id
    self.type = _levelUnitType
    self.groupId = 0
    self.instanceId = _instanceId
    self.position = Vector3.zero_global()
    self.randomPosition = false
    self.bornPosRangeDown = Vector3.zero_global()
    self.bornPosRangeUp = Vector3.zero_global()
    self.rotation = Vector3.zero_global()
    self.scale = Vector3.one_local()
    self.keyUnit = false
    self.initRefresh = false
    self.target = false
    self.targetId = 0
    self.camp = BattleUnitCampType.Monster
    -- 初始状态
    self.state = LevelUnitStateEnum.INITIAL
    self.initState = 0

    self.netId = nil
end


---@public
---@param _levelUnitState LevelUnitStateEnum 关卡单位状态
function LevelUnitBase:SetState(_levelUnitState)
    if _levelUnitState then
        self.state = _levelUnitState
    end
end

--
---@param _unit BattleUnitBase
function LevelUnitBase:SetNetId(_unit)
    self.netId = _unit:GetNetId()
end

--
---@param _unit BattleUnitBase
function LevelUnitBase:SetFirstCamp(_unit)
    if not _unit.GetComponent then return end
    ---@type BattleUnitCom_Camp
    local _campCom = _unit:GetComponent(BattleUnitComponentType.Camp)
    self.firstCamp = _campCom:GetFirstCamp()
end

---@public
---@return Vector3
function LevelUnitBase:GetBornPosition()
    if not self.randomPosition then return self.position end
    local _x = self.battleRoom.randomUtil:RandomFloat(self.bornPosRangeDown.x, self.bornPosRangeUp.x)
    local _y = self.battleRoom.randomUtil:RandomFloat(self.bornPosRangeDown.y, self.bornPosRangeUp.y)
    local _z = self.battleRoom.randomUtil:RandomFloat(self.bornPosRangeDown.z, self.bornPosRangeUp.z)
    return Vector3.New(_x, _y, _z)
end

---编辑器配置的阵营
---@public
---@param _firstCamp BattleUnitCampType 投放节点配置的阵营，如果指定了阵营则按照该阵营，否则检查单位是否预先编辑了阵营
function LevelUnitBase:GetConfigFirstCamp(_firstCamp)
    if not _firstCamp or _firstCamp == BattleUnitCampType.None then
        return self.camp or BattleUnitCampType.None
    end
    return _firstCamp
end

return LevelUnitBase;
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaopuyang.
--- DateTime: 2021/12/21 15:34
--- 战斗被动技能

require "Lib/class";

---@class BattlePlayerTalentSkill:table
---@field id number
---@field level number
---@field state number
---@field triggerCd number 触发cd
---@field triggerCount number 触发次数
---@field skillTriggers table 触发器
---@field skillResults TalentSkillResultBase[] 触发结果
---@field triggerTargetList number[] 触发信息
---@field triggeredList number[] 触发信息
BattlePlayerTalentSkill = class(nil, 'BattlePlayerTalentSkill');

---@class BATTLE_TALENT_SKILL_EFFECTIVE_TYPE : table
BATTLE_TALENT_SKILL_EFFECTIVE_TYPE  = {
    all = 1,
    onBoard = 2,
    offBoard = 3,
}

---@class BATTLE_TALENT_SKILL_TRIGGER_SOURCE : table
BATTLE_TALENT_SKILL_TRIGGER_SOURCE  = {
    self = 1,
    teamAll = 2,
    teamOne = 3,
    teamOther = 4,
}
---@class BATTLE_TALENT_SKILL_DESTROY_TYPE : table
BATTLE_TALENT_SKILL_DESTROY_TYPE  = {
    dead = 1,
}

function BattlePlayerTalentSkill:ctor()
    self.id = 0;
    self.level = 0;
    self.state = 0;
    self.count = 1;

    self.triggerCd = 0;
    self.triggerCount = 0;

    self.param = {};

    self.skillResults = {};
    self.skillTriggers = {};

    self.triggerTargetList = {};
    self.triggeredList = {};
end

function BattlePlayerTalentSkill:GetTriggerParam(_type)
    for i, v in pairs(self.skillTriggers) do
        if v:GetType() == _type then
            return v.param;
        end
    end
end

function BattlePlayerTalentSkill:AddTriggerObject(_targetObjectId,_count);
    if self.triggeredList[_targetObjectId] and self.triggeredList[_targetObjectId] > _count then
        self.triggeredList[_targetObjectId] = _count;
        return;
    end
    self.triggeredList[_targetObjectId] = _count;
end

function BattlePlayerTalentSkill:AddTriggeredObject(_targetObjectId,_count);
    if self.triggerTargetList[_targetObjectId] and self.triggerTargetList[_targetObjectId] > _count then
        self.triggerTargetList[_targetObjectId] = _count;
        return;
    end
    self.triggerTargetList[_targetObjectId] = _count;
end

function BattlePlayerTalentSkill:ResetTriggerCount(_count)
    for i, v in pairs(self.triggerTargetList) do
        if v > _count then
            self.triggerTargetList[i] = _count;
        end
        self.triggerTargetList[i] = self.triggerTargetList[i] * self.count;
    end
end

return BattlePlayerTalentSkill;
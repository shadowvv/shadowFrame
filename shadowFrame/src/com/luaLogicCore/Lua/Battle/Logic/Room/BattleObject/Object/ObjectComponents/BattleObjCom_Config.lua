---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangxuechen
--- DateTime: 2022/02/08 14:36
--- Describe: 用于读表的组件
---

---@class BattleObjCom_Config : BattleObjectComponentBase
BattleObjCom_Config = class(BattleObjectComponentBase, "BattleObjCom_Config")

function BattleObjCom_Config:ctor() 
	self:__ctor(BattleObjectComponentType.Config)
end

---@public
---@param _battleObject BattleObjectBase
function BattleObjCom_Config:Init(_battleObject)
	self:__Init(_battleObject)
	if _battleObject:CheckObjectType(BattleObjectType.LeaderHero) then
		self:__InitPlayerObject()	
	elseif _battleObject:CheckObjectType(BattleObjectType.MonsterHero) then
		self:__InitMonsterObject()
	elseif _battleObject:CheckObjectType(BattleObjectType.AreaTrigger) then
		self:__InitAreaTriggerObject()
	elseif _battleObject:CheckObjectType(BattleObjectType.SummonedMons) then
		self:__InitSummonedMonsObject()
	elseif _battleObject:CheckObjectType(BattleObjectType.SceneObj) then
		self:__InitSceneObject()
	elseif _battleObject:CheckObjectType(BattleObjectType.TargetPoint) then
		self:__InitTargetPointObject()
	elseif _battleObject:CheckObjectType(BattleObjectType.Shield) then
		self:__InitShieldObject()
	end
end

---初始化monster表数据
---@private
function BattleObjCom_Config:__InitMonsterObject()
	---@type BattleObject_MonsterObject
	local _monsterObject = self:GetObject()
	local _dicId = _monsterObject:GetDicId()
	---@type MonsterInstance
	self.__instanceXls = self.battleRoom.inputDataSource:GetDict("MonsterInstance", _dicId)
	---@type MonsterTemplate
	self.__templateXls = self.battleRoom.inputDataSource:GetDict("MonsterTemplate", self.__instanceXls.templateId)
	self.__dataInstanceXls = self.__instanceXls
	self.__elementId = self.__dataInstanceXls.monsterElement
	self.__dataTemplate = self.__templateXls
	self.__showId = self.__instanceXls.templateId
	self.__skillValueXlsName = "MonsterSkillValue"
	self.__radius = self.__dataTemplate.monsterRadius * self.__instanceXls.monsterScale
	self.__collisionRadius = self.__dataTemplate.collisionRadius
	if not self.__collisionRadius or 0 == self.__collisionRadius then
		self.__collisionRadius = 0.1
	end
	self.__bodyHurtRatioDic = self.__instanceXls.bodyPartHurtParam
	self.__bodyReactHurtRatioDic = self.__instanceXls.bodyPartReactHurtParam
	self.__defaultWarriorState = self.__instanceXls.warriorState or 1
	self.__skillTokenId = nil
end

---初始化leader表数据
---@private
function BattleObjCom_Config:__InitPlayerObject()
	---@type BattleObject_LeaderObject
	local _leaderObject = self:GetObject()
	local _dicId = _leaderObject:GetDicId()
	---@type Leader
	self.__instanceXls = self.battleRoom.inputDataSource:GetDict("Leader", _dicId)
	self.__templateXls = self.battleRoom.inputDataSource:GetDict("LeaderTemplate", self.__instanceXls.templateId)
	self.__dataInstanceXls = self.__instanceXls
	self.__elementId = self.__dataInstanceXls.property
	self.__dataTemplate = self.__templateXls
	self.__showId = _leaderObject.clothId
	self.__skillValueXlsName = "SkillValue"
	self.__radius = 0
	self.__collisionRadius = 0.1
	--玩家默认所有身体部位的伤害比例都为1
	self.__bodyHurtRatioDic = {}
	self.__bodyReactHurtRatioDic = {}
	self.__skillTokenId = nil
end

---初始化区域触发器表数据
---@private
function BattleObjCom_Config:__InitAreaTriggerObject()
	---@type BattleObject_AreaTrigger
	local _triggerObject = self:GetObject()
	local _dicId = _triggerObject:GetDicId()
	---@type AreaColliderInstance
	self.__instanceXls = self.battleRoom.inputDataSource:GetDict("AreaColliderInstance", _dicId)
	---@type AreaColliderTemplate
	self.__templateXls = self.battleRoom.inputDataSource:GetDict("AreaColliderTemplate", self.__instanceXls.templateId)
	---@type MonsterInstance
	self.__dataInstanceXls = self.battleRoom.inputDataSource:GetDict("MonsterInstance", self.__templateXls.monsterInstanceId)
	if CheckLogLevel(LogLevel.log) and LogTools.AreaLog then
		LogTools.LogByLevel(LogLevel.log, "CheckArea", "_dicId", _dicId, "self.__templateXls.monsterInstanceId", self.__templateXls.monsterInstanceId, "self.__dataInstanceXls", self.__dataInstanceXls)
	end
	self.__elementId = self.__dataInstanceXls.monsterElement
	self.__dataTemplate = self.battleRoom.inputDataSource:GetDict("MonsterTemplate", self.__dataInstanceXls.templateId)
	self.__skillValueXlsName = "MonsterSkillValue"
	self.__radius = self.__dataTemplate.monsterRadius * self.__dataInstanceXls.monsterScale
	self.__collisionRadius = self.__dataTemplate.collisionRadius
	if not self.__collisionRadius or 0 == self.__collisionRadius then
		self.__collisionRadius = 0.1
	end
	self.__bodyHurtRatioDic = self.__dataInstanceXls.bodyPartHurtParam
	self.__bodyReactHurtRatioDic = self.__dataInstanceXls.bodyPartReactHurtParam
	self.__skillTokenId = nil
end

---初始化召唤物表数据
---@public
function BattleObjCom_Config:__InitSummonedMonsObject()
	---@type BattleObject_SummonedMons
	local _summonedMonsObject = self:GetObject()
	local _dicId = _summonedMonsObject:GetDicId()
	---@type SummonedMonster
	self.__instanceXls = self.battleRoom.inputDataSource:GetDict("SummonedMonster", _dicId)
	self.__templateXls = self.__instanceXls
	---@type MonsterInstance
	self.__dataInstanceXls = self.battleRoom.inputDataSource:GetDict("MonsterInstance", self.__instanceXls.monsterInstanceid)
	self.__elementId = self.__dataInstanceXls.monsterElement
	self.__dataTemplate = self.battleRoom.inputDataSource:GetDict("MonsterTemplate", self.__dataInstanceXls.templateId)
	self.__skillValueXlsName = "SummonedMonsterSkillValue"
	self.__radius = self.__dataTemplate.monsterRadius * self.__dataInstanceXls.monsterScale
	self.__collisionRadius = self.__dataTemplate.collisionRadius
	if not self.__collisionRadius or 0 == self.__collisionRadius then
		self.__collisionRadius = 0.1
	end
	self.__bodyHurtRatioDic = self.__dataInstanceXls.bodyPartHurtParam
	self.__bodyReactHurtRatioDic = self.__dataInstanceXls.bodyPartReactHurtParam
	self.__skillTokenId = nil
	--LogTools.LogByLevel(LogLevel.log, "CheckSummonedMons", "BattleObjCom_Config:__InitSummonedMonsObject", "_dicId", _dicId, "self.__instanceXls", self.__instanceXls, "self.__instanceXls.monsterInstanceid", self.__instanceXls.monsterInstanceid, "self.__dataInstanceXls", self.__dataInstanceXls)
end

---初始化战场物件表数据
---@public
function BattleObjCom_Config:__InitSceneObject()
	---@type BattleObject_SceneObj
	local _sceneObj = self:GetObject()
	local _dicId = _sceneObj:GetDicId()
	---@type Gadget
	self.__instanceXls = self.battleRoom.inputDataSource:GetDict("Gadget", _dicId)
	self.__templateXls = self.__instanceXls
	self.__dataInstanceXls = self.__instanceXls
	self.__dataTemplate = self.__instanceXls
	self.__elementId = BattleElementTypeEnum.PHYSIC:GetId()
	--self.__skillValueXlsName = "SummonedMonsterSkillValue"
	self.__radius = 0
	self.__collisionRadius = 0.1
	self.__bodyHurtRatioDic = {}
	self.__bodyReactHurtRatioDic = {}
	self.__skillTokenId = nil
end

---初始化目标点表数据
---@public
function BattleObjCom_Config:__InitTargetPointObject()
	---@type BattleObject_TargetPoint
	local _targetPointObj = self:GetObject()
	local _dicId = _targetPointObj:GetDicId()
	--self.__instanceXls = self.battleRoom.inputDataSource:GetDict("SummonedMonster", _dicId)
	self.__instanceXls = {}
	self.__templateXls = self.__instanceXls
	self.__dataInstanceXls = self.__instanceXls
	self.__elementId = BattleElementTypeEnum.PHYSIC:GetId()
	self.__dataTemplate = self.__instanceXls
	--self.__skillValueXlsName = "SummonedMonsterSkillValue"
	self.__radius = 0
	self.__collisionRadius = 0.1
	self.__bodyHurtRatioDic = {}
	self.__bodyReactHurtRatioDic = {}
	self.__skillTokenId = nil
end

---初始化护罩表数据
---@public
function BattleObjCom_Config:__InitShieldObject()
	---@type BattleObject_Shield
	local _shieldObject = self:GetObject()
	local _dicId = _shieldObject:GetDicId()
	---@type Shield
	self.__instanceXls = self.battleRoom.inputDataSource:GetDict("Shield", _dicId)
	self.__elementId = BattleElementTypeEnum.PHYSIC:GetId()
	self.__templateXls = self.__instanceXls
	self.__dataTemplate = self.__instanceXls
	self.__dataInstanceXls = self.__instanceXls
	self.__radius = 0
	self.__collisionRadius = 0.1
	self.__bodyHurtRatioDic = {}
	self.__bodyReactHurtRatioDic = {}
	self.__skillTokenId = nil
end
-------------------------------------------------------------------------------------------------------------------------
--- 获取instance表数据(没有特定需要尽量不要用)
---这里获取的是对应模块自己的Instance表
---@public
function BattleObjCom_Config:GetInstanceXls()
	return self.__instanceXls
end

--- 获取template表数据(没有特定需要尽量不要用)
---这里获取的是对应模块自己的template表
---@public 
function BattleObjCom_Config:GetTemplateXls()
	return self.__templateXls
end

--- 获取数据instance表数据
--- 因为现在很多数据类的东西都放到了monsterInstance表里
--- 所以这里除了玩家，其他基本都是获取索引到的monsterInstace表数据
---@public
function BattleObjCom_Config:GetDataInstanceXls()
	return self.__dataInstanceXls
end

---获取自身元素属性类型ID
---@public
function BattleObjCom_Config:GetElementId()
	return self.__elementId
end

--- 获取数据template表数据
--- 原因同上，这里获取的是leaderTemplate 和 monsterTemplate
---@public
function BattleObjCom_Config:GetDataTemplateXls()
	return self.__dataTemplate
end

---获取逻辑半径
---用于计算伤害距离衰减等
---@public
function BattleObjCom_Config:GetLogicRadius()
	return self.__radius or 0
end

---获取碰撞半径
---用于计算寻路到达
---@public
function BattleObjCom_Config:GetCollisionRadius()
	return self.__collisionRadius or 0.1
end

---获取身体分块的伤害修正比率
---@public 
function BattleObjCom_Config:GetBodyHurtRatio(_partId)
	return self.__bodyHurtRatioDic[_partId] or 1
end

---获取身体分块的元素反应伤害修正比率
---@public  
function BattleObjCom_Config:GetBodyReactHurtRaio(_partId)
	return self.__bodyReactHurtRatioDic[_partId] or 1
end

---获取skillValue
---@public
function BattleObjCom_Config:GetSkillValueXls(_skillId, _skillLevel)
	if LogTools.HurtLog and CheckLogLevel(LogLevel.log) then
		LogTools.LogByLevel(LogLevel.log, "CheckHurt", "获取SkillValue数据", "_skillId", _skillId, "_skillLevel", _skillLevel,"实际读取的SkillValue表名字",self.__skillValueXlsName)
	end
	if self:GetObject():CheckObjectType(BattleObjectType.SummonedMons) then
		--召唤物需要特殊处理一下
		---@type SummonedMonsterSkillValue
		local _xls = self.battleRoom.inputDataSource:GetDictByString(self.__skillValueXlsName, tostring(_skillId * 1000 + _skillLevel))
		if not _xls then
			if CheckLogLevel(LogLevel.log) then
				LogTools.LogByLevel(LogLevel.log, "召唤物技能在SummonedMonsterSkillValue表里没有对应配置，改为查找默认1级配置", self:GetObject():GetDicId(), "skillId", _skillId, "_skillLevel", _skillLevel, "最终ID", _skillId * 1000 + _skillLevel)
			end
			_xls = self.battleRoom.inputDataSource:GetDictByString(self.__skillValueXlsName, tostring(_skillId * 1000 + 1))
		end
		if not _xls then
			if CheckLogLevel(LogLevel.logErr) then
				LogTools.LogByLevel(LogLevel.logErr, "召唤物技能在SummonedMonsterSkillValue表里没有对应配置，找策划！！！召唤物Id", self:GetObject():GetDicId(), "skillId", _skillId, "_skillLevel", _skillLevel, "最终ID", _skillId * 1000 + _skillLevel)
			end
		end
		local _skillChangeId = _xls.skillIdChange
		if _skillChangeId == 0 then return _xls end

		if CheckLogLevel(LogLevel.log) then
			LogTools.LogByLevel(LogLevel.log, "召唤物技能改为从召唤者身上查找skillValue，查找Id", _skillChangeId)
		end

		---@type BattleUnitCom_Subordination
		local _subordinationCom = self:GetObject():GetParentUnit():GetComponent(BattleUnitComponentType.Subordination)
		---@type BattleObjCom_Skill
		local _parentSkill = _subordinationCom:GetSubordinatedObjComponent(BattleObjectComponentType.Skill)
		---@type BattleObjCom_Config
		local _parentConfig = _subordinationCom:GetSubordinatedObjComponent(BattleObjectComponentType.Config)
		return _parentConfig:GetSkillValueXls(_skillChangeId, _parentSkill:GetSkillLevel(_skillChangeId))
	else
		local _xls = self.battleRoom.inputDataSource:GetDictByString(self.__skillValueXlsName, tostring(_skillId * 1000 + _skillLevel))
		if not _xls then
			if CheckLogLevel(LogLevel.log) then
				LogTools.LogByLevel(LogLevel.log, "单位获取SkillValueXls失败，改为查找默认1级配置  单位类型", LogTools.GetEnumTableDesc(BattleObjectType, self:GetObject():GetObjectType()), "单位ID", self:GetObject():GetDicId(), "skillId", _skillId, "_skillLevel", _skillLevel)
			end
			_xls = self.battleRoom.inputDataSource:GetDictByString(self.__skillValueXlsName, tostring(_skillId * 1000 + 1))
		end
		if not _xls then
			if CheckLogLevel(LogLevel.logErr) then
				LogTools.LogByLevel(LogLevel.logErr, "单位获取SkillValueXls失败，找策划！！！单位类型", LogTools.GetEnumTableDesc(BattleObjectType, self:GetObject():GetObjectType()), "单位ID", self:GetObject():GetDicId(), "skillId", _skillId, "_skillLevel", _skillLevel)
			end
		end
		return _xls	
	end
end

--
function BattleObjCom_Config:GetShowId()
	return self.__showId
end

-- 
function BattleObjCom_Config:GetDefaultWarriorStateId()
	return self.__defaultWarriorState or 0
end

---@public
function BattleObjCom_Config:GetSkillTokenType()
	return self.__dataInstanceXls.type
end

---@public
function BattleObjCom_Config:GetSkillTokenId()
	return self.__skillTokenId
end

---@public
function BattleObjCom_Config:SetSkillTokenId(_value)
	self.__skillTokenId = _value
end

---@public
function BattleObjCom_Config:Clear()
	self:__Clear()
	
end

return BattleObjCom_Config